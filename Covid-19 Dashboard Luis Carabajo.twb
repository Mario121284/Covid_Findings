<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <Extensions />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SpecificWebTargetsForActions />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <_.fcp.VizExtensions.true...VizExtensions />
    <_.fcp.VizExtensionsDupEncodingUUID.true...VizExtensionsDupEncodingUUID />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Covid-19DashboardLuisCarabajo' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' inline='true' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid_Vaccinations_Deaths_Project' name='excel-direct.1ps880f1kevrt811w66vd0poqls0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/luis-c/Downloads/Covid_Vaccinations_Deaths_Project.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='excel-direct.1ps880f1kevrt811w66vd0poqls0' name='CovidDeaths' table='[CovidDeaths$]' type='table'>
            <columns gridOrigin='A1:Z10001:no:A1:Z10001:0' header='yes' outcome='6'>
              <column datatype='string' name='iso_code' ordinal='0' />
              <column datatype='string' name='continent' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='integer' name='population' ordinal='4' />
              <column datatype='integer' name='total_cases' ordinal='5' />
              <column datatype='integer' name='new_cases' ordinal='6' />
              <column datatype='real' name='new_cases_smoothed' ordinal='7' />
              <column datatype='integer' name='total_deaths' ordinal='8' />
              <column datatype='integer' name='new_deaths' ordinal='9' />
              <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
              <column datatype='real' name='total_cases_per_million' ordinal='11' />
              <column datatype='real' name='new_cases_per_million' ordinal='12' />
              <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
              <column datatype='real' name='total_deaths_per_million' ordinal='14' />
              <column datatype='real' name='new_deaths_per_million' ordinal='15' />
              <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
              <column datatype='real' name='reproduction_rate' ordinal='17' />
              <column datatype='integer' name='icu_patients' ordinal='18' />
              <column datatype='real' name='icu_patients_per_million' ordinal='19' />
              <column datatype='integer' name='hosp_patients' ordinal='20' />
              <column datatype='real' name='hosp_patients_per_million' ordinal='21' />
              <column datatype='string' name='weekly_icu_admissions' ordinal='22' />
              <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='23' />
              <column datatype='real' name='weekly_hosp_admissions' ordinal='24' />
              <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='25' />
            </columns>
          </relation>
          <relation connection='excel-direct.1ps880f1kevrt811w66vd0poqls0' name='CovidVaccinations' table='[CovidVaccinations$]' type='table'>
            <columns gridOrigin='A1:AK10001:no:A1:AK10001:0' header='yes' outcome='6'>
              <column datatype='string' name='iso_code' ordinal='0' />
              <column datatype='string' name='continent' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='integer' name='new_tests' ordinal='4' />
              <column datatype='integer' name='total_tests' ordinal='5' />
              <column datatype='real' name='total_tests_per_thousand' ordinal='6' />
              <column datatype='real' name='new_tests_per_thousand' ordinal='7' />
              <column datatype='integer' name='new_tests_smoothed' ordinal='8' />
              <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='9' />
              <column datatype='real' name='positive_rate' ordinal='10' />
              <column datatype='real' name='tests_per_case' ordinal='11' />
              <column datatype='string' name='tests_units' ordinal='12' />
              <column datatype='integer' name='total_vaccinations' ordinal='13' />
              <column datatype='integer' name='people_vaccinated' ordinal='14' />
              <column datatype='integer' name='people_fully_vaccinated' ordinal='15' />
              <column datatype='integer' name='new_vaccinations' ordinal='16' />
              <column datatype='integer' name='new_vaccinations_smoothed' ordinal='17' />
              <column datatype='real' name='total_vaccinations_per_hundred' ordinal='18' />
              <column datatype='real' name='people_vaccinated_per_hundred' ordinal='19' />
              <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='20' />
              <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='21' />
              <column datatype='real' name='stringency_index' ordinal='22' />
              <column datatype='real' name='population_density' ordinal='23' />
              <column datatype='real' name='median_age' ordinal='24' />
              <column datatype='real' name='aged_65_older' ordinal='25' />
              <column datatype='real' name='aged_70_older' ordinal='26' />
              <column datatype='real' name='gdp_per_capita' ordinal='27' />
              <column datatype='real' name='extreme_poverty' ordinal='28' />
              <column datatype='real' name='cardiovasc_death_rate' ordinal='29' />
              <column datatype='real' name='diabetes_prevalence' ordinal='30' />
              <column datatype='real' name='female_smokers' ordinal='31' />
              <column datatype='real' name='male_smokers' ordinal='32' />
              <column datatype='real' name='handwashing_facilities' ordinal='33' />
              <column datatype='real' name='hospital_beds_per_thousand' ordinal='34' />
              <column datatype='real' name='life_expectancy' ordinal='35' />
              <column datatype='real' name='human_development_index' ordinal='36' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[aged_65_older]' value='[CovidVaccinations].[aged_65_older]' />
          <map key='[aged_70_older]' value='[CovidVaccinations].[aged_70_older]' />
          <map key='[cardiovasc_death_rate]' value='[CovidVaccinations].[cardiovasc_death_rate]' />
          <map key='[continent (CovidVaccinations)]' value='[CovidVaccinations].[continent]' />
          <map key='[continent]' value='[CovidDeaths].[continent]' />
          <map key='[date (CovidVaccinations)]' value='[CovidVaccinations].[date]' />
          <map key='[date]' value='[CovidDeaths].[date]' />
          <map key='[diabetes_prevalence]' value='[CovidVaccinations].[diabetes_prevalence]' />
          <map key='[extreme_poverty]' value='[CovidVaccinations].[extreme_poverty]' />
          <map key='[female_smokers]' value='[CovidVaccinations].[female_smokers]' />
          <map key='[gdp_per_capita]' value='[CovidVaccinations].[gdp_per_capita]' />
          <map key='[handwashing_facilities]' value='[CovidVaccinations].[handwashing_facilities]' />
          <map key='[hosp_patients]' value='[CovidDeaths].[hosp_patients]' />
          <map key='[hosp_patients_per_million]' value='[CovidDeaths].[hosp_patients_per_million]' />
          <map key='[hospital_beds_per_thousand]' value='[CovidVaccinations].[hospital_beds_per_thousand]' />
          <map key='[human_development_index]' value='[CovidVaccinations].[human_development_index]' />
          <map key='[icu_patients]' value='[CovidDeaths].[icu_patients]' />
          <map key='[icu_patients_per_million]' value='[CovidDeaths].[icu_patients_per_million]' />
          <map key='[iso_code (CovidVaccinations)]' value='[CovidVaccinations].[iso_code]' />
          <map key='[iso_code]' value='[CovidDeaths].[iso_code]' />
          <map key='[life_expectancy]' value='[CovidVaccinations].[life_expectancy]' />
          <map key='[location (CovidVaccinations)]' value='[CovidVaccinations].[location]' />
          <map key='[location]' value='[CovidDeaths].[location]' />
          <map key='[male_smokers]' value='[CovidVaccinations].[male_smokers]' />
          <map key='[median_age]' value='[CovidVaccinations].[median_age]' />
          <map key='[new_cases]' value='[CovidDeaths].[new_cases]' />
          <map key='[new_cases_per_million]' value='[CovidDeaths].[new_cases_per_million]' />
          <map key='[new_cases_smoothed]' value='[CovidDeaths].[new_cases_smoothed]' />
          <map key='[new_cases_smoothed_per_million]' value='[CovidDeaths].[new_cases_smoothed_per_million]' />
          <map key='[new_deaths]' value='[CovidDeaths].[new_deaths]' />
          <map key='[new_deaths_per_million]' value='[CovidDeaths].[new_deaths_per_million]' />
          <map key='[new_deaths_smoothed]' value='[CovidDeaths].[new_deaths_smoothed]' />
          <map key='[new_deaths_smoothed_per_million]' value='[CovidDeaths].[new_deaths_smoothed_per_million]' />
          <map key='[new_tests]' value='[CovidVaccinations].[new_tests]' />
          <map key='[new_tests_per_thousand]' value='[CovidVaccinations].[new_tests_per_thousand]' />
          <map key='[new_tests_smoothed]' value='[CovidVaccinations].[new_tests_smoothed]' />
          <map key='[new_tests_smoothed_per_thousand]' value='[CovidVaccinations].[new_tests_smoothed_per_thousand]' />
          <map key='[new_vaccinations]' value='[CovidVaccinations].[new_vaccinations]' />
          <map key='[new_vaccinations_smoothed]' value='[CovidVaccinations].[new_vaccinations_smoothed]' />
          <map key='[new_vaccinations_smoothed_per_million]' value='[CovidVaccinations].[new_vaccinations_smoothed_per_million]' />
          <map key='[people_fully_vaccinated]' value='[CovidVaccinations].[people_fully_vaccinated]' />
          <map key='[people_fully_vaccinated_per_hundred]' value='[CovidVaccinations].[people_fully_vaccinated_per_hundred]' />
          <map key='[people_vaccinated]' value='[CovidVaccinations].[people_vaccinated]' />
          <map key='[people_vaccinated_per_hundred]' value='[CovidVaccinations].[people_vaccinated_per_hundred]' />
          <map key='[population]' value='[CovidDeaths].[population]' />
          <map key='[population_density]' value='[CovidVaccinations].[population_density]' />
          <map key='[positive_rate]' value='[CovidVaccinations].[positive_rate]' />
          <map key='[reproduction_rate]' value='[CovidDeaths].[reproduction_rate]' />
          <map key='[stringency_index]' value='[CovidVaccinations].[stringency_index]' />
          <map key='[tests_per_case]' value='[CovidVaccinations].[tests_per_case]' />
          <map key='[tests_units]' value='[CovidVaccinations].[tests_units]' />
          <map key='[total_cases]' value='[CovidDeaths].[total_cases]' />
          <map key='[total_cases_per_million]' value='[CovidDeaths].[total_cases_per_million]' />
          <map key='[total_deaths]' value='[CovidDeaths].[total_deaths]' />
          <map key='[total_deaths_per_million]' value='[CovidDeaths].[total_deaths_per_million]' />
          <map key='[total_tests]' value='[CovidVaccinations].[total_tests]' />
          <map key='[total_tests_per_thousand]' value='[CovidVaccinations].[total_tests_per_thousand]' />
          <map key='[total_vaccinations]' value='[CovidVaccinations].[total_vaccinations]' />
          <map key='[total_vaccinations_per_hundred]' value='[CovidVaccinations].[total_vaccinations_per_hundred]' />
          <map key='[weekly_hosp_admissions]' value='[CovidDeaths].[weekly_hosp_admissions]' />
          <map key='[weekly_hosp_admissions_per_million]' value='[CovidDeaths].[weekly_hosp_admissions_per_million]' />
          <map key='[weekly_icu_admissions]' value='[CovidDeaths].[weekly_icu_admissions]' />
          <map key='[weekly_icu_admissions_per_million]' value='[CovidDeaths].[weekly_icu_admissions_per_million]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z10001:no:A1:Z10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AK10001:no:A1:AK10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code (CovidVaccinations)]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent (CovidVaccinations)]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location (CovidVaccinations)]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date (CovidVaccinations)]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Vaccincations Per Million' datatype='real' name='[Calculation_1957306680544403456]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_vaccinations]/1000000000' />
      </column>
      <column caption='Continent (copy) (copy)' datatype='string' name='[Continent (copy) (copy)_2047378673094217731]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[continent]' />
      </column>
      <column caption='Continent (copy)' datatype='string' name='[Continent (copy)_2047378673094205442]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[continent]' />
      </column>
      <column caption='CovidDeaths' datatype='table' name='[__tableau_internal_object_id__].[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]' role='measure' type='quantitative' />
      <column caption='CovidVaccinations' datatype='table' name='[__tableau_internal_object_id__].[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='real' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='real' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='iso code (CovidVaccinations)' datatype='string' name='[iso_code (CovidVaccinations)]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='real' name='[weekly_hosp_admissions]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='real' name='[weekly_hosp_admissions_per_million]' role='measure' type='quantitative' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[total_vaccinations]' derivation='Attribute' name='[attr:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations_per_hundred]' derivation='Attribute' name='[attr:total_vaccinations_per_hundred:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1957306680544403456]' derivation='Count' name='[cnt:Calculation_1957306680544403456:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Count' name='[cnt:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Count' name='[cnt:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Max' name='[max:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Max' name='[max:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Max' name='[max:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Min' name='[min:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Continent (copy) (copy)_2047378673094217731]' derivation='None' name='[none:Continent (copy) (copy)_2047378673094217731:nk]' pivot='key' type='nominal' />
      <column-instance column='[Continent (copy)_2047378673094205442]' derivation='None' name='[none:Continent (copy)_2047378673094205442:nk]' pivot='key' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_deaths]' derivation='None' name='[none:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='None' name='[none:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1957306680544403456]' derivation='Sum' name='[sum:Calculation_1957306680544403456:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_vaccinations]' derivation='Sum' name='[sum:new_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations_per_hundred]' derivation='Sum' name='[sum:total_vaccinations_per_hundred:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/jy/sbg0_w0907q8bg_1rx0h7bkr0000gn/T/tableau-temp/#TableauTemp_1jw5wyy1az84s91ddt6al0k6ew28.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/26/2025 04:25:50 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D' table='[Extract].[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]' type='table' />
            <relation name='CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B' table='[Extract].[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]' type='table' />
          </relation>
          <cols>
            <map key='[aged_65_older]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[aged_65_older]' />
            <map key='[aged_70_older]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[aged_70_older]' />
            <map key='[cardiovasc_death_rate]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[cardiovasc_death_rate]' />
            <map key='[continent (CovidVaccinations)]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[continent]' />
            <map key='[continent]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[continent]' />
            <map key='[date (CovidVaccinations)]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[date]' />
            <map key='[date]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[date]' />
            <map key='[diabetes_prevalence]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[diabetes_prevalence]' />
            <map key='[extreme_poverty]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[extreme_poverty]' />
            <map key='[female_smokers]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[female_smokers]' />
            <map key='[gdp_per_capita]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[gdp_per_capita]' />
            <map key='[handwashing_facilities]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[handwashing_facilities]' />
            <map key='[hosp_patients]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[hosp_patients]' />
            <map key='[hosp_patients_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[hosp_patients_per_million]' />
            <map key='[hospital_beds_per_thousand]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[hospital_beds_per_thousand]' />
            <map key='[human_development_index]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[human_development_index]' />
            <map key='[icu_patients]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[icu_patients]' />
            <map key='[icu_patients_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[icu_patients_per_million]' />
            <map key='[iso_code (CovidVaccinations)]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[iso_code]' />
            <map key='[iso_code]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[iso_code]' />
            <map key='[life_expectancy]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[life_expectancy]' />
            <map key='[location (CovidVaccinations)]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[location]' />
            <map key='[location]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[location]' />
            <map key='[male_smokers]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[male_smokers]' />
            <map key='[median_age]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[median_age]' />
            <map key='[new_cases]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_cases]' />
            <map key='[new_cases_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_cases_per_million]' />
            <map key='[new_cases_smoothed]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_cases_smoothed]' />
            <map key='[new_cases_smoothed_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_cases_smoothed_per_million]' />
            <map key='[new_deaths]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_deaths]' />
            <map key='[new_deaths_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_deaths_per_million]' />
            <map key='[new_deaths_smoothed]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_deaths_smoothed]' />
            <map key='[new_deaths_smoothed_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_deaths_smoothed_per_million]' />
            <map key='[new_tests]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_tests]' />
            <map key='[new_tests_per_thousand]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_tests_per_thousand]' />
            <map key='[new_tests_smoothed]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_tests_smoothed]' />
            <map key='[new_tests_smoothed_per_thousand]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_tests_smoothed_per_thousand]' />
            <map key='[new_vaccinations]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_vaccinations]' />
            <map key='[new_vaccinations_smoothed]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_vaccinations_smoothed]' />
            <map key='[new_vaccinations_smoothed_per_million]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_vaccinations_smoothed_per_million]' />
            <map key='[people_fully_vaccinated]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[people_fully_vaccinated]' />
            <map key='[people_fully_vaccinated_per_hundred]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[people_fully_vaccinated_per_hundred]' />
            <map key='[people_vaccinated]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[people_vaccinated]' />
            <map key='[people_vaccinated_per_hundred]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[people_vaccinated_per_hundred]' />
            <map key='[population]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[population]' />
            <map key='[population_density]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[population_density]' />
            <map key='[positive_rate]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[positive_rate]' />
            <map key='[reproduction_rate]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[reproduction_rate]' />
            <map key='[stringency_index]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[stringency_index]' />
            <map key='[tests_per_case]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[tests_per_case]' />
            <map key='[tests_units]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[tests_units]' />
            <map key='[total_cases]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[total_cases]' />
            <map key='[total_cases_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[total_cases_per_million]' />
            <map key='[total_deaths]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[total_deaths]' />
            <map key='[total_deaths_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[total_deaths_per_million]' />
            <map key='[total_tests]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[total_tests]' />
            <map key='[total_tests_per_thousand]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[total_tests_per_thousand]' />
            <map key='[total_vaccinations]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[total_vaccinations]' />
            <map key='[total_vaccinations_per_hundred]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[total_vaccinations_per_hundred]' />
            <map key='[weekly_hosp_admissions]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[weekly_hosp_admissions]' />
            <map key='[weekly_hosp_admissions_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[weekly_hosp_admissions_per_million]' />
            <map key='[weekly_icu_admissions]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[weekly_icu_admissions]' />
            <map key='[weekly_icu_admissions_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[weekly_icu_admissions_per_million]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>0</ordinal>
              <family>CovidDeaths</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>345</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>1</ordinal>
              <family>CovidDeaths</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>2</ordinal>
              <family>CovidDeaths</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>345</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>3</ordinal>
              <family>CovidDeaths</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1300</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>4</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>336</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>5</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16810</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_cases]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_cases</remote-alias>
              <ordinal>6</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5017</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_smoothed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_smoothed]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_cases_smoothed</remote-alias>
              <ordinal>7</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9858</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>8</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6477</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_deaths]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_deaths</remote-alias>
              <ordinal>9</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1214</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_smoothed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_smoothed]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_deaths_smoothed</remote-alias>
              <ordinal>10</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2341</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>total_cases_per_million</remote-alias>
              <ordinal>11</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32094</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_cases_per_million</remote-alias>
              <ordinal>12</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18006</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_smoothed_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_smoothed_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_cases_smoothed_per_million</remote-alias>
              <ordinal>13</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21317</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>total_deaths_per_million</remote-alias>
              <ordinal>14</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16026</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_deaths_per_million</remote-alias>
              <ordinal>15</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5613</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_smoothed_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_smoothed_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_deaths_smoothed_per_million</remote-alias>
              <ordinal>16</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5299</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reproduction_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[reproduction_rate]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>reproduction_rate</remote-alias>
              <ordinal>17</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>493</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_patients</remote-name>
              <remote-type>20</remote-type>
              <local-name>[icu_patients]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>icu_patients</remote-alias>
              <ordinal>18</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2361</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_patients_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[icu_patients_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>icu_patients_per_million</remote-alias>
              <ordinal>19</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4712</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hosp_patients</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hosp_patients]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>hosp_patients</remote-alias>
              <ordinal>20</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6184</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hosp_patients_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hosp_patients_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>hosp_patients_per_million</remote-alias>
              <ordinal>21</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9845</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_icu_admissions</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekly_icu_admissions]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>weekly_icu_admissions</remote-alias>
              <ordinal>22</ordinal>
              <family>CovidDeaths</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>771</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_icu_admissions_per_million</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekly_icu_admissions_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>weekly_icu_admissions_per_million</remote-alias>
              <ordinal>23</ordinal>
              <family>CovidDeaths</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>771</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_hosp_admissions</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weekly_hosp_admissions]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>weekly_hosp_admissions</remote-alias>
              <ordinal>24</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1796</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_hosp_admissions_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weekly_hosp_admissions_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
              <ordinal>25</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1796</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code (CovidVaccinations)]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>26</ordinal>
              <family>CovidVaccinations</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent (CovidVaccinations)]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>27</ordinal>
              <family>CovidVaccinations</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location (CovidVaccinations)]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>28</ordinal>
              <family>CovidVaccinations</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date (CovidVaccinations)]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>29</ordinal>
              <family>CovidVaccinations</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1245</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_tests]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_tests</remote-alias>
              <ordinal>30</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20859</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_tests]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>total_tests</remote-alias>
              <ordinal>31</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50593</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_tests_per_thousand]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>total_tests_per_thousand</remote-alias>
              <ordinal>32</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30197</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests_per_thousand]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_tests_per_thousand</remote-alias>
              <ordinal>33</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6047</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_smoothed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_tests_smoothed]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_tests_smoothed</remote-alias>
              <ordinal>34</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22621</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_smoothed_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests_smoothed_per_thousand]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
              <ordinal>35</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6474</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>positive_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[positive_rate]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>positive_rate</remote-alias>
              <ordinal>36</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>964</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_per_case</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tests_per_case]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>tests_per_case</remote-alias>
              <ordinal>37</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2584</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_units</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tests_units]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>tests_units</remote-alias>
              <ordinal>38</ordinal>
              <family>CovidVaccinations</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_vaccinations]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>total_vaccinations</remote-alias>
              <ordinal>39</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14861</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_vaccinated]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>people_vaccinated</remote-alias>
              <ordinal>40</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9071</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_fully_vaccinated]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>people_fully_vaccinated</remote-alias>
              <ordinal>41</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9679</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_vaccinations</remote-alias>
              <ordinal>42</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11353</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations_smoothed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations_smoothed]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_vaccinations_smoothed</remote-alias>
              <ordinal>43</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5769</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_vaccinations_per_hundred]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>total_vaccinations_per_hundred</remote-alias>
              <ordinal>44</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4696</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_vaccinated_per_hundred]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>people_vaccinated_per_hundred</remote-alias>
              <ordinal>45</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4387</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_fully_vaccinated_per_hundred]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
              <ordinal>46</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2594</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations_smoothed_per_million</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations_smoothed_per_million]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
              <ordinal>47</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6454</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stringency_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[stringency_index]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>stringency_index</remote-alias>
              <ordinal>48</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>314</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population_density</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population_density]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>population_density</remote-alias>
              <ordinal>49</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>236</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_age</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_age]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>median_age</remote-alias>
              <ordinal>50</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>149</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aged_65_older</remote-name>
              <remote-type>5</remote-type>
              <local-name>[aged_65_older]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>aged_65_older</remote-alias>
              <ordinal>51</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>205</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aged_70_older</remote-name>
              <remote-type>5</remote-type>
              <local-name>[aged_70_older]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>aged_70_older</remote-alias>
              <ordinal>52</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>203</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gdp_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gdp_per_capita]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>gdp_per_capita</remote-alias>
              <ordinal>53</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>extreme_poverty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[extreme_poverty]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>extreme_poverty</remote-alias>
              <ordinal>54</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cardiovasc_death_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cardiovasc_death_rate]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>cardiovasc_death_rate</remote-alias>
              <ordinal>55</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>211</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>diabetes_prevalence</remote-name>
              <remote-type>5</remote-type>
              <local-name>[diabetes_prevalence]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>diabetes_prevalence</remote-alias>
              <ordinal>56</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>164</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>female_smokers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[female_smokers]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>female_smokers</remote-alias>
              <ordinal>57</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>117</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>male_smokers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[male_smokers]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>male_smokers</remote-alias>
              <ordinal>58</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>133</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>handwashing_facilities</remote-name>
              <remote-type>5</remote-type>
              <local-name>[handwashing_facilities]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>handwashing_facilities</remote-alias>
              <ordinal>59</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hospital_beds_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hospital_beds_per_thousand]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>hospital_beds_per_thousand</remote-alias>
              <ordinal>60</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>life_expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[life_expectancy]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>life_expectancy</remote-alias>
              <ordinal>61</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>228</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>human_development_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[human_development_index]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>human_development_index</remote-alias>
              <ordinal>62</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>167</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Latitude (generated)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[attr:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[cnt:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[attr:total_vaccinations_per_hundred:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_vaccinations_per_hundred:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[cnt:Calculation_1957306680544403456:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[cnt:Calculation_2047378673097793541:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:Calculation_1957306680544403456:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[cnt:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[min:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent (copy)_2047378673094205442:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#32759a'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#3992b0'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#5eafc0'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cc9cd'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent (copy) (copy)_2047378673094217731:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#2f8243'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#4e9a51'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#6ab25f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#87cc79'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='CovidDeaths' id='CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D'>
            <properties context=''>
              <relation connection='excel-direct.1ps880f1kevrt811w66vd0poqls0' name='CovidDeaths' table='[CovidDeaths$]' type='table'>
                <columns gridOrigin='A1:Z10001:no:A1:Z10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='population' ordinal='4' />
                  <column datatype='integer' name='total_cases' ordinal='5' />
                  <column datatype='integer' name='new_cases' ordinal='6' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='7' />
                  <column datatype='integer' name='total_deaths' ordinal='8' />
                  <column datatype='integer' name='new_deaths' ordinal='9' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
                  <column datatype='real' name='total_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_per_million' ordinal='12' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='15' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
                  <column datatype='real' name='reproduction_rate' ordinal='17' />
                  <column datatype='integer' name='icu_patients' ordinal='18' />
                  <column datatype='real' name='icu_patients_per_million' ordinal='19' />
                  <column datatype='integer' name='hosp_patients' ordinal='20' />
                  <column datatype='real' name='hosp_patients_per_million' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='22' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='23' />
                  <column datatype='real' name='weekly_hosp_admissions' ordinal='24' />
                  <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='25' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D' table='[Extract].[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]' type='table' />
            </properties>
          </object>
          <object caption='CovidVaccinations' id='CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B'>
            <properties context=''>
              <relation connection='excel-direct.1ps880f1kevrt811w66vd0poqls0' name='CovidVaccinations' table='[CovidVaccinations$]' type='table'>
                <columns gridOrigin='A1:AK10001:no:A1:AK10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='new_tests' ordinal='4' />
                  <column datatype='integer' name='total_tests' ordinal='5' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='6' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='7' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='8' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='9' />
                  <column datatype='real' name='positive_rate' ordinal='10' />
                  <column datatype='real' name='tests_per_case' ordinal='11' />
                  <column datatype='string' name='tests_units' ordinal='12' />
                  <column datatype='integer' name='total_vaccinations' ordinal='13' />
                  <column datatype='integer' name='people_vaccinated' ordinal='14' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='15' />
                  <column datatype='integer' name='new_vaccinations' ordinal='16' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='17' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='18' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='19' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='20' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='21' />
                  <column datatype='real' name='stringency_index' ordinal='22' />
                  <column datatype='real' name='population_density' ordinal='23' />
                  <column datatype='real' name='median_age' ordinal='24' />
                  <column datatype='real' name='aged_65_older' ordinal='25' />
                  <column datatype='real' name='aged_70_older' ordinal='26' />
                  <column datatype='real' name='gdp_per_capita' ordinal='27' />
                  <column datatype='real' name='extreme_poverty' ordinal='28' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='29' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='30' />
                  <column datatype='real' name='female_smokers' ordinal='31' />
                  <column datatype='real' name='male_smokers' ordinal='32' />
                  <column datatype='real' name='handwashing_facilities' ordinal='33' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='34' />
                  <column datatype='real' name='life_expectancy' ordinal='35' />
                  <column datatype='real' name='human_development_index' ordinal='36' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B' table='[Extract].[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[continent]' />
              <expression op='[continent (CovidVaccinations)]' />
            </expression>
            <first-end-point object-id='CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D' />
            <second-end-point object-id='CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action2_A011AF60292E4674A495905CB52FBC3A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total Deaths' type='sheet' worksheet='Total Deaths per Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total Deaths' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_EECF3D96A69F4CDF98019E16A70F7B21]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total Deaths' type='sheet' worksheet='Total Cases vs Total Deaths by Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total Deaths' />
      </command>
    </action>
    <action caption='https://www.linkedin.com/in/luis-carabajo-a5449b250/' name='[Action3_B076530D54B24747B952E4172D773E81]'>
      <source dashboard='Total Deaths' type='sheet' />
      <link caption='' expression=''>
        <url-action-type>specific-zone</url-action-type>
        <url-action-target>58</url-action-target>
      </link>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Deaths by Contient'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Deaths by Contient</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week' name='[wk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_73B0A7A911994B4DB9595E9893D275CC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[wk:date:ok]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]</rows>
        <cols>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[wk:date:ok]</cols>
      </table>
      <simple-id uuid='{5CDBB2F4-12ED-49DB-9633-7DF564A57DC5}' />
    </worksheet>
    <worksheet name='KPI - Total Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total Cases&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_A011AF60292E4674A495905CB52FBC3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='160' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_cases:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#e15759' fontsize='16'>&lt;</run>
                <run bold='true' fontcolor='#e15759' fontsize='16'>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_cases:qk]</run>
                <run bold='true' fontcolor='#e15759' fontsize='16'>&gt;</run>
                <run bold='true' fontcolor='#e15759' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C99683A5-6BCF-4700-A32A-9AC8DC4ED045}' />
    </worksheet>
    <worksheet name='KPI - Total Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total Deaths&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_A011AF60292E4674A495905CB52FBC3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='160' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_deaths:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#e15759' fontsize='16'><![CDATA[<[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_deaths:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E777AD41-6983-47D9-AF3D-34E4648D4866}' />
    </worksheet>
    <worksheet name='KPI - Total Vaccinations'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total Vaccincations&#10;&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_vaccinations]' derivation='Max' name='[max:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_A011AF60292E4674A495905CB52FBC3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='160' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_vaccinations:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#e15759' fontsize='16'><![CDATA[<[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_vaccinations:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{32202CC6-6245-4F9E-9558-410C58F4F61A}' />
    </worksheet>
    <worksheet name='Last Date Updated'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt; at MM/DD/YYYY</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='MAX(DATETRUNC(&apos;day&apos;, [Date]))' datatype='datetime' name='[Calculation_2114791930036158464]' role='measure' type='ordinal' user:unnamed='Sheet 10'>
              <calculation class='tableau' formula='MAX(DATETRUNC(&apos;day&apos;, [date]))' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_2114791930036158464]' derivation='User' name='[usr:Calculation_2114791930036158464:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_A011AF60292E4674A495905CB52FBC3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='width' value='155' />
            <format attr='vertical-align' value='center' />
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[usr:Calculation_2114791930036158464:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D14C52FF-F7A9-4BCB-B2EF-BD94BBC94115}' />
    </worksheet>
    <worksheet name='New Cases by Contient'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Cases per Continent&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Continent (copy)' datatype='string' name='[Continent (copy)_2047378673094205442]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[continent]' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Continent (copy)_2047378673094205442]' derivation='None' name='[none:Continent (copy)_2047378673094205442:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week' name='[wk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_73B0A7A911994B4DB9595E9893D275CC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[wk:date:ok]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy)_2047378673094205442:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_cases:qk]</rows>
        <cols>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[wk:date:ok]</cols>
      </table>
      <simple-id uuid='{63EA58F9-8E44-4E16-B132-6C1B99A35B32}' />
    </worksheet>
    <worksheet name='Total Cases vs Total Deaths by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total Cases vs Total Deaths by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases_per_million]' derivation='None' name='[none:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='None' name='[none:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_A011AF60292E4674A495905CB52FBC3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Anguilla&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bahamas&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cape Verde&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cayman Islands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Congo&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Curacao&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Democratic Republic of Congo&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Faeroe Islands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Falkland Islands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Guernsey&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;International&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Jersey&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Macao&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Micronesia (country)&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Montserrat&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Nauru&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;North Macedonia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Northern Cyprus&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Palestine&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saint Helena&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South America&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Timor&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Turks and Caicos Islands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Vatican&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:total_cases_per_million:qk]' included-values='in-range'>
            <min>0.001</min>
            <max>171254.77299999999</max>
          </filter>
          <filter class='quantitative' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:total_deaths_per_million:qk]' included-values='in-range'>
            <min>0.001</min>
            <max>2850.828</max>
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:total_cases_per_million:qk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:total_deaths_per_million:qk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <_.fcp.VizExtensions.false...mark class='Automatic' />
            <_.fcp.VizExtensions.true...mark class='VizExtension' />
            <_.fcp.VizExtensions.true...add-in add-in-id='com.tableau.extension.table' extension-url='https://tableau-vizext-prod.s3.us-east-2.amazonaws.com/table-network/table.html' extension-version='1.0.0' instance-id='0E989339C96E42B18AB2BCEF0BDA26F7'>
              <instance-settings>
                <setting key='column-setting-EncodingId:{451C76E2-CED5-4E02-A3ED-589AA2E89F7E}-Encoding:detail' value='{&quot;field-id&quot;:&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]&quot;,&quot;encoding-type&quot;:&quot;detail&quot;,&quot;column-index&quot;:&quot;0&quot;,&quot;column-width&quot;:&quot;102&quot;}' />
                <setting key='column-setting-EncodingId:{5A389694-1DF3-4E1C-A1DF-4D35F0B6C873}-Encoding:detail' value='{&quot;field-id&quot;:&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]&quot;,&quot;encoding-type&quot;:&quot;detail&quot;,&quot;column-index&quot;:&quot;2&quot;,&quot;column-width&quot;:&quot;113&quot;,&quot;column-header&quot;:&quot;Covid Deaths&quot;}' />
                <setting key='column-setting-EncodingId:{E42C74E5-F31A-42EE-A5B1-805A48C3A16B}-Encoding:detail' value='{&quot;field-id&quot;:&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_cases:qk]&quot;,&quot;encoding-type&quot;:&quot;detail&quot;,&quot;column-index&quot;:&quot;1&quot;,&quot;column-width&quot;:&quot;106&quot;,&quot;column-sorting&quot;:&quot;false&quot;,&quot;column-header&quot;:&quot;Covid Cases&quot;}' />
                <setting key='dialog-status' value='none-open' />
                <setting key='setting-key-version' value='V2' />
                <setting key='table-settings' value='{&quot;showToolbar&quot;:false,&quot;showFilters&quot;:false,&quot;includeNullsForRangeFilters&quot;:false,&quot;columnFilterType&quot;:&quot;contains&quot;,&quot;showSearch&quot;:false,&quot;showTooltips&quot;:false,&quot;showExcelDownload&quot;:false,&quot;allowColumnReorder&quot;:false,&quot;showColumnReorderControls&quot;:true,&quot;showShowFields&quot;:false}' />
              </instance-settings>
              <type-settings>
                <worksheet />
              </type-settings>
            </_.fcp.VizExtensions.true...add-in>
            <encodings>
              <lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{451C76E2-CED5-4E02-A3ED-589AA2E89F7E}' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' />
              <lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{E42C74E5-F31A-42EE-A5B1-805A48C3A16B}' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_cases:qk]' />
              <lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{5A389694-1DF3-4E1C-A1DF-4D35F0B6C873}' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{48214B28-677B-4B20-9F8F-4122D9A66408}' />
    </worksheet>
    <worksheet name='Total Deaths per Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total Deaths per Million per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Latitude (generated)]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Longitude (generated)]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Longitude (generated)]' field-type='quantitative' max='25283153.486187302' min='-2493847.3894972657' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Latitude (generated)]' field-type='quantitative' max='14941405.117570546' min='-13349032.364614299' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]' />
              <lod column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' />
              <geometry column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Latitude (generated)]</rows>
        <cols>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4BD398A3-C11E-43CB-978F-0EED7C18A25A}' />
    </worksheet>
    <worksheet name='Total Vaccincations per Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_vaccinations_per_hundred]' derivation='Sum' name='[sum:total_vaccinations_per_hundred:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_vaccinations_per_hundred:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' />
              <color column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_vaccinations_per_hundred:qk]' />
              <geometry column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Latitude (generated)]</rows>
        <cols>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{91B1C62B-31CD-4F8F-A1A2-4DBA9DEC1C52}' />
    </worksheet>
    <worksheet name='Vaccines by Contient'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Vaccines per Continent&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Total Vaccincations Per Million' datatype='real' name='[Calculation_1957306680544403456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_vaccinations]/1000000000' />
            </column>
            <column caption='Continent (copy) (copy)' datatype='string' name='[Continent (copy) (copy)_2047378673094217731]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[continent]' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[date (CovidVaccinations)]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Continent (copy) (copy)_2047378673094217731]' derivation='None' name='[none:Continent (copy) (copy)_2047378673094217731:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1957306680544403456]' derivation='Sum' name='[sum:Calculation_1957306680544403456:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[date (CovidVaccinations)]' derivation='Week' name='[wk:date (CovidVaccinations):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_A011AF60292E4674A495905CB52FBC3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy) (copy)_2047378673094217731:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Continent (copy) (copy)_2047378673094217731:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:Continent (copy) (copy)_2047378673094217731:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:Continent (copy) (copy)_2047378673094217731:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:Continent (copy) (copy)_2047378673094217731:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:Continent (copy) (copy)_2047378673094217731:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:Continent (copy) (copy)_2047378673094217731:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:Calculation_1957306680544403456:qk]' included-values='non-null' />
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:Calculation_1957306680544403456:qk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy) (copy)_2047378673094217731:nk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[wk:date (CovidVaccinations):ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:Calculation_1957306680544403456:qk]' min='1.0' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy) (copy)_2047378673094217731:nk]' />
              <lod column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:Calculation_1957306680544403456:qk]' />
              <lod column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy) (copy)_2047378673094217731:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#59a14f' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_vaccinations:qk]</rows>
        <cols>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[wk:date (CovidVaccinations):ok]</cols>
      </table>
      <simple-id uuid='{3C2AF5EE-4A64-4629-89EF-4A9380AF06EC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Total Deaths'>
      <style />
      <size maxheight='1660' maxwidth='1620' minheight='860' minwidth='1320' sizing-mode='range' />
      <datasources>
        <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
      </datasources>
      <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
        <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98140' id='54' param='horz' type-v2='layout-flow' w='98788' x='606' y='930'>
            <zone h='98140' id='52' type-v2='layout-basic' w='98788' x='606' y='930'>
              <zone h='86744' id='31' param='horz' type-v2='layout-flow' w='98788' x='606' y='12326'>
                <zone h='86744' id='25' type-v2='layout-basic' w='98788' x='606' y='12326'>
                  <zone h='28906' id='4' param='vert' type-v2='layout-flow' w='32728' x='66666' y='12326'>
                    <zone h='28906' id='7' name='Deaths by Contient' w='32728' x='66666' y='12326'>
                      <layout-cache minheight='143' type-h='scalable' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='57838' id='6' param='vert' type-v2='layout-flow' w='32728' x='66666' y='41232'>
                    <zone fixed-size='173' h='21046' id='10' is-fixed='true' name='New Cases by Contient' w='32728' x='66666' y='41232'>
                      <layout-cache minheight='143' type-h='scalable' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='36792' id='11' param='vert' type-v2='layout-flow' w='32728' x='66666' y='62278'>
                      <zone h='36792' id='23' name='Vaccines by Contient' w='32728' x='66666' y='62278'>
                        <layout-cache minheight='143' type-h='scalable' type-w='fixed' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='70134' id='12' param='horz' type-v2='layout-flow' w='66060' x='606' y='28936'>
                    <zone fixed-size='314' h='70134' id='22' is-fixed='true' name='Total Cases vs Total Deaths by Country' w='24394' x='606' y='28936'>
                      <layout-cache type-h='cell' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='70134' id='13' name='Total Deaths per Country' w='41666' x='25000' y='28936'>
                      <layout-cache has-max-size-h='true' maxheight='44' minheight='44' minwidth='202' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='16610' id='41' param='horz' type-v2='layout-flow' w='27197' x='39469' y='12326'>
                    <zone fixed-size='186' h='16610' id='47' is-fixed='true' name='KPI - Total Deaths' w='13598' x='39469' y='12326'>
                      <layout-cache type-h='cell' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone fixed-size='186' h='16610' id='48' is-fixed='true' name='KPI - Total Cases' w='13599' x='53067' y='12326'>
                      <layout-cache type-h='cell' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='16610' id='42' param='horz' type-v2='layout-flow' w='18349' x='606' y='12326'>
                    <zone h='16610' id='45' name='Last Date Updated' w='18349' x='606' y='12326'>
                      <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='16610' id='44' param='horz' type-v2='layout-flow' w='20514' x='18955' y='12326'>
                    <zone h='16610' id='51' name='KPI - Total Vaccinations' w='20514' x='18955' y='12326'>
                      <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='11396' id='32' type-v2='text' w='44472' x='15680' y='930'>
                <formatted-text>
                  <run fontalignment='1' fontsize='22'>COVID-19 Dashboard for 2020-2021 </run>
                  <run fontalignment='1' fontsize='22' italic='true'>by Luis Carabajo</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11396' id='49' is-scaled='1' param='/Users/luis-c/Downloads/Black Covid 19 Logo.jpeg' type-v2='bitmap' w='15074' x='606' y='930'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11396' id='56' param='horz' type-v2='layout-flow' w='17955' x='81439' y='930'>
                <zone h='6047' id='55' mode='pattern' name='Total Deaths per Country' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' type-v2='filter' values='database' w='17955' x='81439' y='930'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone forceUpdate='true' h='11396' id='57' is-scaled='1' param='/Users/luis-c/Downloads/LinkedIN.png' type-v2='bitmap' url='https://www.linkedin.com/in/luis-carabajo-a5449b250/' w='21287' x='60152' y='930'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='111' h='8256' id='15' is-fixed='true' name='Total Deaths per Country' pane-specification-id='0' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]' type-v2='color' w='12652' x='53939' y='34070' />
      </zones>
      <simple-id uuid='{78FC7F87-5C67-43BD-B7B8-ABB1BF846959}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Total Deaths'>
      <viewpoints>
        <viewpoint name='Deaths by Contient'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI - Total Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI - Total Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI - Total Vaccinations'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_vaccinations:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>1134333474</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Last Date Updated'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Cases by Contient'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Cases vs Total Deaths by Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Deaths per Country'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Vaccines by Contient'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{E68A4252-667F-47F9-9A8C-189B376F50DE}' />
    </window>
    <window class='worksheet' name='Total Vaccincations per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_vaccinations_per_hundred:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C22F76B1-7908-4868-A354-4AE7A56D72E2}' />
    </window>
    <window class='worksheet' hidden='true' name='Deaths by Contient'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]' type='highlighter' />
            <card pane-specification-id='2' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{17B3EFA7-44FE-4CEC-8705-F4DAB0FCCCB9}' />
    </window>
    <window class='worksheet' hidden='true' name='KPI - Total Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{3C666CF9-15A5-44B7-905A-C992037F611D}' />
    </window>
    <window class='worksheet' hidden='true' name='KPI - Total Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{9D553938-0047-4A56-BF5F-81BD43C69743}' />
    </window>
    <window class='worksheet' hidden='true' name='KPI - Total Vaccinations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{4A8E3549-9668-43EC-AA92-6DAE0F885044}' />
    </window>
    <window class='worksheet' hidden='true' name='Last Date Updated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{BDDEAB89-09BD-423D-8781-B29EF28EBFB2}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases by Contient'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy)_2047378673094205442:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1E33A438-74BF-44C6-9EEF-C608421898B8}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Cases vs Total Deaths by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Calculation_2230478145489543168:qk]</field>
            <field>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B594302-ECAD-42C7-A66D-7EF9A42F8527}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Deaths per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CADD5F4-43E1-4180-B527-9D3BFED9BEC5}' />
    </window>
    <window class='worksheet' hidden='true' name='Vaccines by Contient'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='69' type='filters' />
            <card size='238' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy) (copy)_2047378673094217731:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3C7B1304-CD2E-473C-AF5E-F9A252A5C695}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Total Deaths' width='384'>
      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
      fvObeL1eHnroIf75n/8ZgOeff57u7m5efvllrrnmGrZt20ZVVRW/+MUveOKJJ/jVr37F3r17
      +dznPkdRURF79+5NnKehoYHvf//7/OlPf+Lxxx9n3759fPDBBzz99NO88sorvPDCC8iyTEdH
      Bz//+c+57bbb+Oyzz3j66aeJRqM89dRT/PjHP6ZsbL3v/v37eeONN/j973/Pl770JbZu3Up3
      dzePPfYYn376Kbt27eL222/npZdewmazceutt/Lmm2+ye/du3n33Xf7zP/+Tp59+mkAgwMcf
      f8yLL76IyWTiwIED/OM//mPiuu+44w6uvPJKdu/ezf/8z//w+uuvJ+7sv/Od73DnnXfy0EMP
      TcqQ+M1vfpO0tDS++tWvcv/997N161a+8Y1vcOTIEd5//33sdjv79u3jzjvv5Oabb+bJJ5/E
      7/fz6KOPcsMNN/Dxxx/zs5/9jCeffJJPPvmEv//7v+f999/n6NGjBAIB6urqcDgc7Nq1i8cf
      fxyz2cw999zDH/7wB1599VVeeeUVmpqa2LNnD11dXXz5y19mzZo1iTuvi4HX6000LK3tHUSi
      PlLHhqg2FuZR39OHNdWAfayEpDTjYtLJ6nv6WWG3JeUgqu3pY3PR1Anmxpv/cDRGv8lG2fqN
      cz7nQlmKLAFKpRK7PRN/OIJbqwfi5JpTSdeF+eXx41gKi6mqquLKK68ERjeSqVQqMsJ+8pUS
      nT3dmM2prLOmEYvHUSpOjfX3RGUU4RA+n493X3mZnBQtlR/8GVlvQBcNs/byq4DR+aTOpkZU
      ag2RSGRWm80uJIv6W9y0aRMPPvggv/71rxMTRhUVFaxbN7q9uqamJvHchoYG6urqePjhh8nO
      zqanpweFQsHtt9+OQqEgb4qJnXHNzc1s374ds9nMT37yEwCampr4yle+gtVqTZxv586dWK1W
      srOzE7sOVSoVSqUSg8GQmOR777336O7u5q//+q/RarV4vV7+9V//lfz8fI4cOQKM3iGPf/Ec
      DgcNDQ3cdtttWCwW7rnnHh599FGuvPJKvvWtb5E51j1XKpVJ49zp6elUVFTw5ptvkpmZSWZm
      ZlKvaM+ePQwNDfGNb3wj6f3+6Ec/4tprr038/MADD/C9732PRx55BKvVik6nQ61Wo1ar2b9/
      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
    </thumbnail>
    <thumbnail height='384' name='Total Vaccincations per Country' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Bd133n+bnp5dc554BuNNAIjRwIgAmMEoNIiZSsMJLD2h57Z2p3x56a
      0k6tZtfl2fKOvR5btmWvJY1EiqIoUiRFUmICQQAkcgNopA7onHO/7pdvOvvHQz+g0Y1EAmg0
      0J8qFKrffe/ec9Pv/M7v/M73JwUCAeFwOJgvuru7QYKzYydR02VKjSqqllRxvPEYY55BAIQp
      iAcMRARqi1fRFWgnpkXQx0xiwzrOVAfeSieSIiX3KyxBuCmOs1BFS1OvuT1mxMQIW7iznTP2
      VSIqWVpZk/hbCD488D5SgYWIC8q0atpCzaip8g26KrcndgC2Vu7gcPt+7FTzmn9nRW1q/XUU
      FRbdxNYtcjmEEEiSNOvz4ZFhMtIzCIVCGIbBoYajLC2vorK8AllOPMvRaJTTTWdYVbsSpyPx
      TnR0dvD68Q94cvWDLKmovKXncjV6+np59dBvQILnN32RgoKC5LaWtnO8d2IPQgi+tfMrpKWl
      zWNLbw9Uh8OB2+2+5Qe2bZs3Pnwd2ZZpN5tw5WlIMQl3OIWVrpUU5hTSeroFNx6CY0GyMrIB
      QX3bISZHg0TsEKTaeCqcRNwKAQMk88JDbhk20qQbKz+MFr/2DkBIAnwgxS96YQZUHtj+KG63
      G9M02X14F92eVpS4hCRJ9AV6kP0SIm7fwCt0e2FbgnK9hqPnDtPlaEWOzzYol2LpNqJPIdOZ
      TWltKfPpaNzNzNUBWJbFyx+8js/royq/nPrj9UQVk96+XhpaT/ONp77K0Mgwf/3zfwQBm9Zt
      xOl0YlkW3X29HGg7jhoV/Pny2jk7l8/TVtM00TTtM/0+Py+fbWVr0U2DsrIyFEUhEonwxq63
      efPELsIiDkBFfTFf/sLTN7TtC5Frt4w3mI6uDnodbchOCbfbkbwRzZOn2RLdSklhKY84HudX
      h17BqojRI08AoPfbkAYppS4k+fI3Lz5ikJ6SxlQkhDzpxDANyDFQXMoV23XpPqU+B19c+yV8
      Xh8ARxuO0KKeRHVe2I/sByHuXOMPYA4LNJ9Gs3wSRbv2kU5dwXo2r92Cqs7bo3bXous6H368
      i9HJcZ5+9AlS/CnJbbIs8+wDT/D27nf5x90vUuDKRDdNevQ+niwsxRaCYDCIjMQDdfcgyzLh
      SJgfvPpjTnQ3ggCn5rzhxv+nv3qJ451n+LOv/gmFhYXXvQ+/z8eOe7bP+Owffv6v7O07hpCA
      883ddeZTdm67j/S09BvQ8oXL/MUsBOj9FopLnvkQZVscP3MMSZLIzMgkP7UAxSmjuBSEDc6Q
      Fy1fThrq6KCOPm4S6Y0TD+hAIuSwzL+K7Wvvo8Jeho8UhCmwTXFdTbRiNhtKtlCYl3gQTdOk
      dbgFxTmzExHi+va7EJF1hdNjDSjua3xkRCJ05nA6Fo3/LSIWi/F3P/0Bf/fCD+jo6uS1D37N
      jz99jY7+blo72mZ8t7mlmR/96kX6poapdhYyEBsnoIdwSQ7eOf4RfX29HDt5nC9s3Mm+M4f5
      7y/8gJ+99Qofdx5lQoRxSRr3rNp4Q9svhCDF5WNbzQayc3JuyD5PnG7geF8jl76hvfFR/upn
      32d8YvyGHGehonz3u9/93mcdbn1WApMBWttayfXn09rYhitXS3YCsiIxMjJCbeEqnE4nZbkV
      dLR0EVFDeEZTsZwGSuaFfZmNMoRl0CW0PAURglWujSwvW8G+pt0Mp/ZgpEeR00FxXHt/Z+s2
      VfYK7lmzHUmSMEyDDw+8z6CrG9lx9w0bJweDuIs0ZPXy1zDcE0NSJSRZwh6RWelZx6bVm5Px
      5EVuDpZlMTI6wk9+/XPqO06j6wbjE2P09ffTGx0hEJnik5Z6NpavIi01EffOyMggLyOHidEx
      OoZ7MGyT4sx8vvbQM5TllWDpJj/Y+3M+aT/GYGwcM25QlVdOy2A7WXIKv/vgc9yzfssND6HU
      VC2ltnoZinLlkfq1cvxUAy0d5wjLetL7B0CC4cgEViDGuhVrbsixFiLz4poJW3Dw1H5Ul4Ks
      SFzcPQshiEohurq7qFlag8vl4tltz1F/6ijuIg8f976H3q6TWuFD2IK1Nes52n4Qh0+jNFLJ
      6sq15Obk8vKrPyfIFJEhHe9yZ+I4V8E2bCQ10Z7sUBEP3/8okHjBPtq/i3Z343V1IncS6TX+
      y24TQmAPSTxQ/ihOyclYaIy00jRW1qy6hS28OxmfGOeff/FjTgw0E5MNHi3bynNffIb2jna6
      R/o5PNFIWDF4uGILxUXFyd8dPHKINavqKCkqxv2bXyHJMs88lAgTKYrC+7s/xFQvvJhlWUU8
      88iTrF9eR1lp2U2Zz7kZ8fjlVTUEP311pvE/T21aOY9sfeCGH3MhMS8dQCQawVkj4cxQUAIa
      RtTE4bswCnFmarzb9Sa/PfIWj2x6nILsQjav3YIsy+Tn5dPZ00FwaopUVzo1q2uoqlhCVlY2
      kiQxNj7Gy+++xJCvD9Ut4/Kq12T8AWLjOlbMxpXhYFXRBa+gp6+HZvMkDsdiKGMuzIhFnlxC
      50g7E5FxtlZuZ2l1zXw364YihMC27Rme6eWya24lGekZPHHvo3j2OiktKWH7xnv4mx9+H8Mp
      GA6OszlvJTtWbmbT+g0zRmIfHN7DGx++zR989Tv8/vPfxrIszpw9y/jUBDWV1UxGppBFwhly
      oPLs/V/E5XJRXVU9j2d7fcTjcY6ePE5cmHN2AEUZeZSWlN76ht1G3HKLFo/H6RvqJdITx5Gu
      4kyb7UlIioQjW0GkQ0NTAx80/oYSdwVP73wGn9fHquWr8Xg8QCKbqH+gn+PnjtET7CTujqIV
      KfiV689scuc4Gdo3Sa5WSPnGcgAmJib4sPU3aBk3Zkh6J6J5VUbdfYk/0mBP0647rgMACIVC
      +P3+pCENBoM4nU6cTudVfnlzWbGsliUVlcTjOs0tzcimYEAfIdeVwe8++Tvk5+UnvxuYnOTj
      g3v59lNf4/3dHzI0MEhpcQmdnZ38zWv/zJgcInOXj+e3PsEfb/saJhbxWJzKsop5PMPrRwhB
      /fFjvHbgN9jOuefohifHsCzrhoWbFiK3vAOwLIv6nsOomTJW3EbYAs0zuxmSJCGwEZaNSLGI
      GCFCoRA/2/0/UNwyhc5SfC4/FYUV7G/eS6wwiJwm4bzOUxJCICyBrMoIS5BZnsoTm59KDnF7
      enuI+yMo0t0Z+rka0T4DJQU0n4okSZhhiw1lm+bdM75RTE/wx+PxRHgyGsXtdiNJErZtI8sy
      tm2j6zqapl2TMRFCEI/HUVX1hk2Qu5wuzjY38U9v/wTDNkl3pfB//OGf4/V6k9+ZmpriH37+
      /1E/3Eh2Rhbf+ca3URWFV956jdeOvEsKbhySyrcfep7q8koK8guS57/Q7ufo6Ch7j+0nplmz
      vH9JgGrLqLJyVyRwXImbatVs2+ZIw2ECk4HkZ6FwiC3l2ym0ylD7PEh9M0cAFz9okioR9QUx
      ugQZriwMw8B0Glg5cbpSmjklHeHN06+yPH8lduiz38jJ9jCR7jjyOQ/r8jaTkpKa3JaZmYkI
      JfLghRAI++5+YC4mNmIQ7dXJGS0hZ7SYzOFCNvnvZc2KtfPdtBuGEIJYLEYsFsO2beLxOJOT
      k+i6ntw2OTlJJBJhamqKcDiMZVmXNSzTv9F1/Ya3dVnVUv7oiW9RmpJPjjeDcDSCaV5YsOd2
      u6kurmBVZhWFuQWoSsIAKopCHJMlOaVkCC+lBUVkZ2UDifdxoRl/IQSZmZl846nnKbezkqGs
      EmcO9+Wv5dmlD/K7m54h05NGe1cHtm3ftR3BTR0BnDhzgkOxPZz69ATf2PntpFf9fuM75Pry
      saMCIyuKyswhtCRJyfhqPDOMIgSdU23kdudjhwSWLlAcMopDgjxB63Az+XIpg7EuFNf19WmS
      JKF5VURIIuSeICcjZ4YXV1hQyIqudQyNDTCmj2DKOo6Cu3fIOI2wBSVSJU16I4asE7Xi5HkL
      2bDyxqYGzgcXe72SJGEYBrZtz9geiUQQQmAYxozP4/E48XiclJSUy3r3TqcTl8t1ww2r2+1m
      7ao1KChUV1Xh9/sTTsv5f5qm8ZUvPMNXLvndsoqlfJOn2L5hK6Zpoaoqf/HDv+bJrY+wbtXC
      y5CxLIufvvozzo12U1xWgjbiJCMrk7ryWt49/BEHuk4gFAldthgMjVKdU44sS/zOl56/6zLW
      bmoHMDkZIB40sOUp4vE406uOVUUhWhhABrTY3E24uBNwZzuxDZ2OrnaksMLYsXEy16UkFyRN
      po2Sq+cTn8hhKn/0mtoWHzNwpKlIioSv0E10JE5BpILy0tmxzvu23I9pmsRiMV7Z/xKGFL5r
      PYYkAibGJvDXuglnjCWMXyA23626Iei6jq7r+HyJxX9z3evPev9vtketaRrr162bcTzLsq7Y
      nuU1y1hesyz5WVzXqcorIycz+6a182aiqiq6sDg10capiTbcQuOp1V/gtY/fpsXoh/NBB0mA
      HorxUeAgAStEaVEJ2zfdM7+Nv8Xc1O7u/m0PsCN/J6YwEitxAbfLTar3wuo7cYXFWRe/KGbM
      wuV1oaRJZG9KnbEaVXHInIucJRyJXFO7IoNx8gNlBPbHiHckPDvNp5KRlXnZGK6qqni9XjSh
      LRp/Eiume8a6UNMT98iYtFhZVjfPrbp2DMMgFosRCoUIBoNJIymEQNd1DMMgEAgkJwlVVU06
      MNMJCJdDkqTbypNUFOW6JjqdDgffePqrFC9Q7SYhBKsrl/OFym0otkSqw0d6ShqqfOEaKBZU
      Wtlk+dIZN4OYks2u45/cde/2TZ8Erqtdw8TkOF5PYjJKVVUeXvE4rzW8hB0Hw9ZJrbp8M6ZH
      AopDxif72Jqzg9bRZoa8vTPCPbbfxB4SGD2CyGQUV6GGM33uBW7uXAejVi8en0apXcHw0ADr
      s9ey4SorGyVJwqN6icqTM0ICdyUSZK9PwxwV5IoCvJqP0qKFkVJn2zbBYDD59/RCyFAohM/n
      Szoe0yPQ6YnU6YlfXdeTk7+XIssyXq/3tuoAbleGhofxejzJkdaNxOf1MTU8wdbC1Ty29UFe
      +OBVzoQ6kxPCii0zak7RPTqOLSeMvs955Y79TuSmdwCapvHwvY/O+Ky4qJi1PZs53n8EV9nV
      0zUlScKYMjnUdQB3loNsu4AMK49J13DyO4pLJpIdQEzKaKkKjtQLpyZsQXRUx5XpQFYkhCkQ
      Nuhxg1Ur6igseByH49p0TXyOFEZF33VcgTsXxSGTJjL58oMLN3Y6bbBt207G+i/2lqeNvKIo
      WJZFJBKZEfe/FI/H85mFzO42fF4v//zTf+WxBx+hpmrpDQuNSZLEiuW1VJZXoCgKb7z1Jp1j
      vTPkIHTNRlfjFzKEBLgdrhty/IXEDXlrdV2/bo/49GADjnIJPWASGY4zfjREtMvAjFlY+ux9
      OdM1/OsdmH6dfmcnxf4y4uMXXkRJknDnOXFXq7iLHEmtICEERtBi6myEkfoA+oBF4HQE14if
      xyqfpKiwCKfz2ibkbNtmNDZ01w0Tr0SuO3/BGf+LQzTTo4HpNE/LsmacTygUIhqNAonOYjqG
      P9fzoijKovG/DrxeL8899WUCE4ErzlN8FiRJwuPx4HQ6WVe3loer78EnLlmvccktdF9kB2zb
      JhQO39A23Y58rhHAmcbTdA510B/rIdOZzUPrH8Xvv7xkwMU8vuZJ3jr8OjlaEaYwWb91A7/5
      5G0m+yZJW+pDStNmrOCVz8f83VlOhC0YGO5FMR2IdHtm6uilsrdxm6kzUVZXrsHAoK5yDVa5
      yZKKqut+Wdu62phwjaDOo4be7YamLEyJ54ufE8uykgbIMIwZz8X0CuDp33i93qQDcHEoaXpB
      2EJLmZxvigoKKSq4ftXP62HJkiVkZmayu+0QITs+53cUIZHmS6R/27bN62++zqHOk/yHb/4p
      OVkLczL8WvhcHUDjwBlGMnqRJIkh0c0b+1/jd3Z+85omnMrKyvijwj9F13WCoSBtbW3IsozQ
      YbI9ROoSH6702cZF2AKGVFYuqUNvMBkL9+PwXf40YuM6kakIhw8dJjsvmz6rEyWqkZWZncx1
      vhK2bTM6Norb7WZP6weoOYvG/2ImomMA6HqcWCyR/ni7I0kSmqbN6XUahoHLNTMUcPHo9mLv
      X5Zl/H4/iqIsGv7bHI/HQ5Yvg9Gp4Jzb/aaTDefXr5xuOsObDbsIiThnms7iWLk6KaJ3p/G5
      rJkwBJGBGMJOTJZN2COcPN3Ark8/uGKcdBpN05Ak2H1sFyccB3DUCvLuTSd3Q8YM42/GLEJ9
      USJDMYyzMoVaGcIS9E32MH56Krk4KzahzwjP2KZNdDRGWrUfX7GH7LQcCr0l6M4YI+PDs9pz
      MeFImEPHDvLyRy/y0skf8S8f/z1GVvQzXqk7EzNkk5+Z8N6aWps4WH9gnlt07Xg8nlmGHhKj
      gUAgMOOzaU8/Go3OCnWqqrpo/BcATqeTr977FGvSq3AaCpLNDBHKgCPGriN7EULwwnu/ZFyJ
      4FGcHDt9ghd/9fIdG/b9XHLQFYUVhPvjBMfC6Goc0zJo6jhLKHsCe0yiOL/kqvvYfWA3fSlt
      KA4ZWZPnfJmsbgUTHde4DzsmUFWF9JQMirKKkVQIhyPoARO938KVf9G5SAmdmmBXhJQlHqbM
      AMvSV/HQukcpyCu47EjFMAzeOPBL2p1NxH0RNK+KI3XxRb8YWZaJDes8suYLSOeDqQX5hcls
      r9ud6XTPa40927aNaZo4HI4FN+exSIL83Dy2r91CZUYxWyvqaO4+R2Q6JCSg0JtFRUEpr3z6
      Nrpkkqo7aYn00j05SE12Obk5ufN7AjeBK3YAsViMaCyarAV6KZqmMdA/QElGGed6m/DkuXBm
      aCBJyGMao+OjlBYmUgOPnznG8OgQ6SnpM1ZIpqdkcOTgEfDYswqtTBPt0ZFToC53Pf40H0NK
      L91mG8OjQxSkFtHd1ItuxfGVuWcULJEkiVBflJRKL1qKihE1GZEG6GjvoDy3cs5SmJFIhIbG
      E5yLn0X1zt0h3e0IWyB6VMo91Zw+c4rSolJysnIWlPEXQhCeY5Lvato3uq5fNa/+dlAJXWQ2
      kiShKAqF+QWUFBVTkpqHiJjEo3HKUwr41mPP0d7Vwe7WwwA44hJhh4kp27R0nGNJTilZmVnz
      fBY3lssGz3Vd5/X9vyQsgjy77qukp2XM+b0d23YQDAY5fOoQyLHkAq3+tA66g62U95ZTVFRM
      80AjI55+jnx8gO1L7k8WWE9LTaMgrYhhoxcrbiE7EkY3qbkjQHgt0gM5DIp+xrMHEiMFISFS
      dNqMs/hSvUTUEFr67JfSX+JJFjHxFSUM/uRUgKMNR3jovoeTL+rk5CTt3W0c7P0EKy0+574W
      OY+AqowaHtzyEO988HayXOZCYTrbR1XVGVo50+Gcy+n0TE/y3qnhgLuNtavWULdiNaFQCK/X
      i6IovL77nUTpSGDCcyFNtCc+yp76/dRULZ2/Bt8EZnUAuq6z99jHdATOYWTHkBR45+ibPLfj
      67OKQAgh2H/sE0YmRkhY6gvbFKeMpEgcOnuAwsIiMtxZTLgHMb1RDrceID0lg+ysbGRZ5pGt
      j9He1U5r5zl6aCelwkNs2AALbCysmM39mx/kzaOv4T6vwxPqjeJMdyQmgJeaOEbm7sumjb+w
      BFOdEZweBznOArZtSlT6Mk2Tjw59yLnwWUyHgSNfRZUWjf+VkCQJpMT/X3z4ifluznUzPZHr
      8XiYmppKfu52uzEMA1VVZ4WGfD4fDoeDeDye/M7lRgGL3v/CQZblZOKCbduc6Dg7Z+0AgPFQ
      YO4NC5gZwcx4PM7LH7/IWfMEZl4MM2ImJne1UUZGR+bcwUCgn8HsTlgVJz5hzFDLFEJQmVeV
      0CORTaYdp6n0MX7W8MPEqIFEUYuRsSGGUrrwlSa8dFmTcIx5cPg15D4nfWM9OCsv3JlQXxTN
      m3gBFYeMu/Aq6YgyaH4FT9TP0/c+m1zOPzI6wpnoCZTcxFqDxZf36lgxm4L0m5u6dzOZDgXI
      sjxDy9+2bRwOB16vd8YE8bQMxPR3dF0nFrszdI8WuUBnVxcTVmjObZKAVRXL5ty2kJnRAeiG
      jlN3szPjC2QPFnN/5uPkBkpY7dg45wSIJEk8uP5hPCOpFAcrKY5Wog56iPYaCfkGTaa5vxHL
      sqjKqcYIJYbbilNGc6qotsrIyAiSJHH/PQ/iD2YiSWCETewulVRXOvEum8qKSoKRRPrW1LkI
      ob4osiEzq9LzFbBiCe32eGaYgeGB5OcTk+PXXuh8EQBEUKaoIFFecHoB1UJk2uArioLf70+m
      hk5OThIOXxD8u9jTd7lcd3UBkTuZI2eOYSjns7zE+boBQmZddg1fW/U4j+zYycjICK+98fqC
      feYvJRk3MU0Tn9fHc1/4KpIkUVpaxtDQEMvyVpCVmXVZadv01HS+du+3sG2b/Qf389iGx6k/
      Vk9j90lEqc5IWh8nGxtYsXQl5W01tE404ilzIGkSuogTDofJzs7G7Xbz5fuf51TTSYaiA+Sv
      KMSluimPVbBpwyY6OtppqW/Cr6cRk8OkeFKJDMXw5rsTk3qmSC4WmwsrYpM6kU1Oai4VFyl+
      hsIh1OuUkL7b8dupyQV/N6M27K1gehQghMDv9ydVMyORyKxUz0uzfiRJIh6PJ94Zn2+xQ7gD
      iEQifHjqE2QkHq26h6UFlUT0KJmpGWxcsz5p/5xOJ9FYlL/+x7/lW1/5Ojk5OfPc8s+HCnD0
      zBGae8/y7L3PEwqFON5cz7lgI6Y3niik0FPF0zufuexONC2hkHnfjvuQJIkd23YgDtictetR
      3Qpdox3U1a4hakZQ/OeXWps2ASPA5rqtyf2kpqaybdN2YHYmRXl5Bb+X94cEQ0G6+js5qO7D
      m58IF+n9FkbcxFcxR153zMLSBapXIRifYGlqzYz91i6t5dSB4+iZ4aR8xCKXxzZtMtQsJicn
      SUlJWdApkRcv6goEApimmfTspmUfgFkGfvpzy7IwTXOxA7gD6OjqJKhH+PaWL/HkA4+jquqc
      2VwpKSk8+9SXGBgYuGbVg9sZKRKJiE8b9tFoNVAWW0pbuAlHoYKsSuiDFtWuWjav3kJaWvqM
      H86VLmdZFrsPfIQuxVlZupo3G19BuGw2++9jQ90GQqEQP3nnR2RmZrCyuI78nAK8Hi8Oh+OK
      sfdgMMieE7vRdZ1NtVs423KGowMHSK9JFLwIHTZwLZfR/LNHKbFWi2pfLZ4UNyuqV5Kamoqm
      zkx7HR4d5rcH3yaUPYYRsnBlLUyv9lYQDxhoTX50fwQ15mDTms2sr9tAe0c7Odk5C/KlEEIw
      Pj6eLPEoy/KMIf6lxV0Mw0hKQEiShNPpTJaJXGRhYhgGvf19lJWU3lX3Ufnud7/7vfKiCoY7
      RyjNKact1IwzNWEgBaCPm6xZtm5WCKijq51T5xooKbhwwWRZ5nT7KVrHm0hTMrin+l5KXRUs
      X1qLJEmoqkpRZjG5qfl82ryXUwMnaOg8RnNbEzn+vKQsrGEYM7yzPYd30+lrIuKdoq2rlbWl
      Gzk7cArbtrGiNkpUw1GUmBOYpQVkWGyt2sHaVWvxeDwo8mxvzevxUpZbjjLhYGxkHNKsxMmf
      twFWzEZSFl5pvJuBGJMpz6kkWDBKTI4w3DPKutr17Nm3h9zcXPy+hdcBTD+bbrc7mQF0sYPj
      crlmjHQMw5ix0t3hcCyKwC1wFEUhPS1t1jtumiZN55oxTROv13vH2QAVwKE5ePq+Z5mYmICe
      izb6ZIyAPufD7XK6OTZ0mLy2ApYuuZAb+/i2LybLzwEzJo9lWaawoJAP9r2HXpSYbRfA+OBo
      0jCHw2Fe3PU/yPJn8cV7nsbpcFJeXEFz9ym0VIWoI0RXbxfasAfbF4MRFSXXxNIVJttCZNZe
      qOcLoHhkbOnqSqVpqWncs3476b4MPhh4G8uy0KdMPG439xU/wrHuw8QKp666nzueFJs2/SwK
      MkWxCnrlTiYCE6xfu46c7IUrmjX9vF46BzBXcZfpsI8syxiGsRgCuolMp+POxzUOhUP87Ys/
      oGG4BcUQPLfpC2xas4HCmyxedytR/uzP/ux70ylvTqcTY9JkINKLpds4x7xsqdxObvbsDCCP
      x8PZ1tNMBgIsLa9JviSyLF/1ZqX7M4j26jhCbtSQkzxHIXW1idqjoVCI4yOHiaZOwYhCcX4J
      mWmZHKk/gu0xkTWZsfZxapesJMPKYSQ+hKcioRw61RjDma4lC8XYpk16KI97Vm27YpsOHj1A
      LB7nw48/oDC/iFJfBX4rjZW5a6grWU9eTh6N7WcwU+J3nAdwvShOOdGp6jabC7fz2LYv4vf7
      SU1NW9DzAbquMzU1NSP0M10r4NJnR9O0GWmiN6O+7yIJgqEQPb29ZGZm3tLjmqbJD375Y/b2
      HseULHTF5vhAEz3tXeR4M8nOyroj7rny7Jef+V5eXn4y5FJaUEaqmUmlp4b71+8kPyd/zh/K
      sszE6CSdzmY8wdTr0slwOp2keFJYu3w9KytXUVVWnbyYDoeDxlONxN1RcpVCSgoSUhJ+OYVT
      J0/jztcgw2RwZJABswc1TUL1KsSGDTKkLBhVMadsokM6FdpSHtrwyFVL+E0GJ4lEwyyvqkXX
      dXIyc4jFonzS/xFNw2do6KtHFOhIysK/4TeS5o5mjIBBU1sjZUXlC9oTni7+fnEHMF28fa7v
      Tv+/KAF9c3E5ndds/BtbmnBoGi7n5y/s8ts9H/DaifcQ530aIQROW6XWX8amDRs5dOQwDodj
      QajfXgl1+bLa5FC2ra2VsrIyaiqvbcHDmmVrGTzYT/toGyuWr7guD7D+2DHuv+/+WS+YaZpk
      uXNYn7GJ5UuWY9s2p5pPEolEMHUDYbuRNRlnGTi5YNgdaSqmFYNMk0iTjrvAQXF2CakpqVyN
      2qUrsG2b13b/gkG1FzolImNRHDkq7sy5dZDudmRNxl0uc3qqHj1isnFqE5kLWP/QL+AAACAA
      SURBVCdFURS8Xu+cpSKv9JtFbg9GRkY4furEVWsLCCE4195KYDLAxrUb5vxOc2sLL376BqZk
      J+cBvaaDL6y4l5333E92VjZ1K1eTlrbwJaKlcDgsPB4PlmURi8VwOh2ol2TJXKyEeClCCKam
      pkhNvbqhHR0dpbG5ka5QOxGC5DoLWFO5jpzs3BkdwXT6lW3b7K7fRaN5AqRE2cereVtCCCzd
      xoxYrNW2oltxtm3cPqcndzFDQ4P88uTPkDMS5SIVx8INZ9wKzIiVvCdG0OTRgqeprlzYOilC
      CAzDSMo9pKUt7LDWrcIwDc40nWV0fIwNdetJnQev+Gj9UaqWVF3VDnV2dvIvP/sRf/p7f0xB
      3uzohhCC//qvf8On/SdnSEI4hUqq7CFd8ZOXl8t9a+9hw+p1C370p3z3u9/93uDQIG/uf41g
      KEhF8ZJZJxWOhNm1ZxflpbOH+dNZEpcyXUlJCHFhfkCR2b3nIwIZQyg5EkHXBKfaT9DZ28my
      4toZ++7oaqeprYmG2KGErLPn8nLMRthEkkGSE2EsWZWRJGg828SYMsSS9KX4/Vd+KH0+H9Yk
      tJ5pA6eN5rnp5ZIXHLZuYwQTkh65Y6Wsz9/CUP8wMWLUZNaScRnBwIXC9IRvPB5PykQs9Bf8
      ZhOJRvjxGy/xo09e5UDnCdpbWtmxdust7zgLCgqu6uRB4j3PTE2nvKw8mfZ78T0OBAL8ZNcv
      iUkz65lYkk1YxBkTQbqnBvELF+tq6xBCENd1ZFnGNM1ZNaVvd9TpFZG5/nxU5jayx87U06ad
      oatnKUsqqmZsE0LQcq6F8rLy5AghGAzy4b4P8Dq9xCM6JaUlFBYWkpmRSWX5EhpC44kiMrKE
      u8DJxOQIXV1dFBcXc/zkMUqLy/h1/WsYYwIp30SYoFWoCZ2h8yJkQgismIUQYFuC8RMB0pf6
      cfgToxfFpZCzPg0zYjE2OU7BNczcb1y9iaVlNew5+RH93b1Yho1aaicF5e525GEnJY4iVKGw
      c+fDuFwusjOyqT9eT1lx+Xw374Yw7dCEQqFFWedr4PX33+I3LfsQUiJW0jjSzujYKHm5efPc
      stnEYjEOHTrE8MgIpaWlnDp1io0bNs6YI0xLS6MsrYATgdbZOzj/KORpaXztsWd58/23aepr
      o22oiyW5ZYxMjZHi9PE/felb5OfPPXd6u6HG43EmJsapq14750Tu5OQkZ8cbQJXweWbneI+M
      jvDmmV+S31PAkxueJcWfQmvbOeJGjB5nK6awaT3agnVS5/H1T5GXm8dEaAkdA014CxMreSOD
      MV4beBnHORXNr7D33d3kegoYMgcwJnUUVWHs7CSpZT4mW0JkrEoh1Bsl1B3FV+wGKTEpHRmI
      I2yS6xj0fgu38FG5uvKaLoaiKLjdbvxWGsWpCu2jrSAtGv9pdG+UroF2vvHwtwlHwrhcLkZG
      RwhLUwvK67kamqaRNkdO+CIX0HWdQ8eO0NjRgrhIlKvQn0tmxq3N2LlWbNumoqKCnNxcMtIz
      WL1qNS6XC9M0CQQC+P1++vr76Q/OLXwJgIB8RyYDgwM0dDVyZOgsAAO9Ewk7NCVRevAjvvHE
      85eVz7mdUPec3kWP2o7c6eBbO34vuRgLEt7965/+EpFvoBoynf0d5OXN7NnT09Lw4GM4NsCJ
      M8cpKyzj05a9VGRWMRIbwF2iMGWFSSn30trfwsNbHyU/P59f7R8lNDmZEGKTwZPjxJGqYsVt
      cAl8qV6qincQioboC/QmFuf02mQ4PBhTIQjKbK3ejtPjRDfjSGky61dsYN/xj+kT7QhDsC5r
      C3XL11w1C+hiXC4Xmk+lT2vHlTrTqE1niJgRCwwJSQPVe+cYvqvhSFcxNJP2rjaEKcjcmInX
      4yU4FbyjvOWLFyEuMhPLshgZHeXVD97ko/bD6JgXYuUC7l2+6bY1fB6PB7fbjW3btHe0U1Za
      lnAcIxH+6kf/neHYBGF0IiLO5SShkeBUsJ3/9PO/wpDtGZ8D2JLg3cO78WhulhZXsmrVqtv6
      WVLDwQgxEUfz2Pxm79sIl8WDqx9JVr5ZWVbHocF9KJmC431H2CQ2zzghVdUoT11Cw0A9J6lH
      2BC34+jEEb0qMVeE1IpEp2Ji4nK5cLlc7FzxGCcaj5PtzcZV7aZlsJGJ1EHiEzpOj4Me0U5v
      dzfffOg77Ex7KLk4x7Ztegd6mcqcpLp8KV7vhSpUwWCQscA46BrFWikbtm/AcZlqZpdDkiTW
      LF9L25Fm9MxExaiplijebDfxKR23x4M67CQnN5eqnGraBs4xaPRh+XRU353fGUiKxP6OvaR7
      M5jaN8X9Wx9AfCwlC6wscucQjUUJh8L80ys/Im7pVOeXMxKe4FjPWabsSLJwCiSUM8s9+dy7
      adttafB0Xaf+WD0dXZ2c6EpMWP+nP/hfKSooZM/BfVTlldPc3osp25c1/tPnZSoXZAKmy6Fe
      nD5sSjb7zxzBq7hYtWrVTT2vz0L/QD+appGdlY3qznXgCGtofpWx1D4QUH/2CA9vexRJkli7
      bB3xSJxj0f2IkERPfzc+j4/egV6WVS1HURQ0p4qmqoy3BaAOnD4Hva42YrqFYtpJ7zBuXdBQ
      L8gv4MyZM6ypXZtYSCNLfBLuw5nuIHzCYGnecnY8uoO01LSkcuM0lWVzh3QURWFH3X0U5Bcg
      SRInGhrYuGHjdV+gFH8KX1r7HO8c+TUT0giFjhI2l23h4KkDbKzcTM7GHGRZxu/zs7JmFZFI
      hL1H9tA23ISSJe5oUTnVraAugbA9QcO5YR6Ud5KfW4Cu64sdwB3G3n37OHzsCGfjPQSlGA3j
      rQmjP/0PQECWmsKTa3fyyPYHZzhkn5dpoxqPxz/zhHwkEuGd935Lc28rHeN9mNggwwOrtnC4
      /gjvfPwuu3qO4LWd3Kh+K+qyGIlMsPfUQR68/4Frmpy+FViWxcmzp/n7139IbUk1//b530N5
      6stPfW9kfAR3ZuICS7LEcGSQaJdBWWkZU1NTfNj4G5RMkNMFjQdaaGw7S6e7iYH2QZaV11KU
      U8yedz5BdkoMDg1gBA1cZSqmYoCRyNGXJAkt5GRlxWosy2J4eBhbsejv76eosJj01HTa29ox
      vFHGWwMEXQGcwjVDa+hSbNtOLhUPhUJoDo2szCw0TePXu95EWFBZfm3x/0txu9ysqqyjMqUa
      FY0lFUtYWbWK7MxsXE5Xsk6yJEk4HA6KcouoSK3i2JHjKKkSsnrndgIAwhR4gimsXLKazIzM
      hM7SHTQPcDcTjUb5xduv8mlzPc2RHiKSfsHoX2T43ULjkaX38O+e/QM2rF57w6XBhRC8+dav
      aTnXgqZqn2k1cF9/Hx98vIumoXbGnBEi6KTpLuonWuga6qFlqhdLEeiyhS1fXuP/cjbocnUB
      dEwCRpgV+dXkzWMxedu2iUajaJrGybOn+ctXv09AitA5NYAdiKP8zr9//ntxd3hG3rtlWnT1
      dLK+ehM+nw+37aWzvxNLNpGyLUa7JvCVuJiaDLK6JOHBV5RXEAgFCOjjeFdoyFpCnVPWZBSn
      gqXbZIRzyc3IJRAIUFhYiKEbRCIRCguKUFWV8HCUAbkHT4ELV65G90gXOWoB6Wnps25AKBRi
      16H32df0MS3dLezr2kV901GyHbmkp6WT6kllScWSz/1QejweCvILrlgCEBITh36fn6LUEk7V
      nwKvuCPXEgg7MZqTFAkrJY487KS6qnrR+N8hGIbBz978Ba+d2cWoOZlYDHVxqMcGhy1Tl13N
      //blP+KhbQ/MmDe8kUiSxNLqapYvW3Zdxl8IQTwe58jRo7x7aBcnxloIOY3keYTkOJYsiMnm
      FY3+pW2Z6ziXo8hOB1miKreMitL5y5Cbmpril6+/St2qOt75+D1Oj7Umr8O5oU5Us0/AJdfW
      4dew8wQHjhxAdkK2P5c8q4hhbzcAmWv9yJqMS/IlV0sWFRVRMVzJsKMPe1AmMmEz2RckdbUb
      za8iSdARbUE9pNIX6GFtzXpODR+nOmtZMkSkOlSwBKorYUziIZ0PP36fNavXEpwKkp6ZTllR
      OZ807KV1rAlnsYKcIhMggktyYBk2r554icLmUr7+6LfmJRZZUlLC//zV/4WffPhDTF/klh//
      ZhM4E8Kd58KVrSGrMgPjffPdpEVuEEIIfvnWr3izafechtFlqTxQvZltKzaycuXKW/J+zZWr
      fzl0Xaert5vvv/ZDxkIBgkQxZQEX+yYSM+YurpXrrQAWlOPk2inUVi+//oPdQKaCU3zSdJQv
      B5+lvrEhKW0BYMg2qrtKQ40rhLpj6FMGGSsSqZ7OTI2zRj2SImFP2FgOGycJY6+6FBCQ7c4l
      Go2y6/AH3Lf+AdatWE9t5QrcHje9vb28tu8XOPMScWEjbCH1Ouj39lNduYy9nbvwVbg4GTxK
      bns+laWVnBo5hpRz4e6kVngJ9o9xaGovpmmiTirUn01lwj2Mv9Iz66FQNJmUCi/DPf28/v5r
      fOnhZ+elE1BVFVnced4/QGqNj8gZA8NpoaUo6HacoaEh+vr7WFO35racAFzk6sTjcU6fOc1v
      Tu/BmqPW6vrsZXzn8a9SXFR8yxZ5xeNxvv/Tf+brTzw3K/vwUk43neVf3vgpo+Ykk3ZkptGf
      BwJEiKMTjoTntR3hSITNyxNS+FlZmXSPj83YrgpLYEyZ0K3iKpaJjsax4zYOrwNj0sRT6kT2
      KrPSHW3LxuvycarpJL3+Ng6cdPLotseTQkx5uXlowoHmSTwswhJU1VSxonolp7sb8JYmFBRV
      v8SnLR9TVlRKUJ/CcVGZYkmR8BUnUjg1FIQtMJYE8SuzjX/yN5KEp8RJbCQyb6vyJEnCpbrR
      mbvA9EJG1iTcNSpSmwvJDVnZOby8/wXciofa5bUziqwvcvsjhCAQCNDY2sz/+84PMbFmGE9J
      wPqsZfz+U9+gMP/WyyA7hXpZeQchBLFYDMuy+Je3XqAtPnD59M1bjQRu1UXWLVYxvZSqyiWU
      l5URiUToDgzM2i5rQx5ivSZrV6/DF0ulStSyyr2BjEA+WmbiSRBCYI7b2LqNFbaxTYE9IrOs
      bDm52Xk4xj1UFVfP2LHL5SK3IBc9aBAfMbBGBWVF5WRlZnF2+BTS9EMmQcSMoKoalY6aK56M
      JE/LPFz+LgshsEahrnj9vOq4rCqrww7fGYWjL0VxyQivyQMrH2ZlzSpMy8TQYhw+emi+m7bI
      Z+DF11/mpXdfJSobF4qikzD+S7R8/sO3/3R+jL/TyXe+/m9wu91zbh8YHOT//rv/xn/8/v9J
      e+Q2Mv4k5kqe2fTINYlR3kwURcHpcJKSksLDq3YgTce/zmeyKn/3t3//vWVFK1hevZzKwiU0
      9B6jwzyHkRFB9SqYERst4OLRqifxRVOpSV+JK+xh58pHyc1JTLiuKq0jK2NmMRBZlinNKadA
      KmVV3lrqKtZRUVaBLMuMtQcYt0dQ3OeNeUimrmwdk4FJBtUe9ICB7JBBAiNoYsZtVOfcnnxk
      OIasyheybgSEmnT6RntYU7N23iYnczJz0UJuOvo6UHy30ZN5gxhuGWUsOsq2uh0U+ktI17Ip
      Liwm5SqaS4vcfjgVB7saPiWuWTM+d1gyz2/6IsuW1sxbaG+uJA7Lsujq6uKlX7xEd2CAXjHO
      7RRxdQqVZ1Y/xJcfffq2So6oLCrjxOmTjOtTuIVGvjMD1e1yk56WzseHP+LU+HG0XAmvkgjj
      xIZ0tmU+yPK6WjweD+UlFQDUUjtjx5eTzU3xpyQNQl9fH0IIVFWlbnUdJRMl7Gn7AClVkCnl
      omka5eXlHD6yj2BvjMyNGrZuM74/jLfWgTPlwjGMcKJ4t8OnYcVsJsdCZCxLHEeSJdKyU3l+
      x9fRtPmt7Vu3bA2tAy2McudNlKoOFb+aykRggsyMTEpLSue7SYt8RgYHB3CpDiaJAwnP3xvX
      WJZZzsM7H7rt5nX27N3DR4f3YsYMxrXIbWX8NVvmwSWb+NbTX7vtrpvX6+VPnvo233/tR/g1
      N//+G3+UKArvcrloaDzBJxO7UH0yZtRCDmjsrHqMqorqG3Iitm3z9rtvcd+2+/H7/bz+69d5
      4N4HiMaieDye5FBpdGyUeCzOsXNHCMQC3Fv7AC/u+THuXAf6lIE+ZeG0XOi6jr/MzRLvMmRJ
      ZiQ+xJQdoFAroSC9iI11m26LGzAyNsIvjr2AmjPfLbmx2JaNPQGxbov7Vj3I+nXr57tJi3wG
      hkeG+fO/+y+MauGEvLcl4bedPL3+YTav3UhhYeEtfY/e++B9Hnpw52XDt42NjbS0t9JwsoGA
      GeKcNXjNqZw3E9mGfEcG337oOWxLoCgKq2pX4r0OGZpbwbRKcygcJjUlJdEBuN1uhBA0nWuk
      d7iHnLQ8qpdU43bNHXu7XoLBYLJU5PSKPsuyrpjeJYRIpoeGQiEi0Qi6rpOakjojJ396iGjb
      NpFo5LYrSh4KhfiXPX+Pp+jOmhwN9UaRZYl0KYtvPPidxaLoC5R3PvgtP937K8JaIk9esuH5
      2kfYue3+q2be3AyuZhf6+vqIxWPs2/8Je08dIorOlNeY87u3DAFFjiz+/Kt/gt/n47/99B9o
      DHbxcPlm/vRbf3hbOKKXI7l2X5IkllUvZ9lNyFt1u91EIhEEApeUCC8pikI0GqVvoJfBiQHS
      fRksrayZIScwLcrl9/vx+69s2BVFue2Mv2VZfPLpJ5hjAlF4Z4ilRdp01HQZWZKpFMvYvH7L
      ovFfoEQiEdrOtaLLieI+qpl4Pg1hzYvxh7mrrIVCISKRCFlZWRQWFtLT28u2rdsYjk6wt+/4
      PLRyJk5Unt74MCVFxUSiESoKSuhpHmT72i3z/s739vViWzYlJSWztkUiEW6aeIsQgmAwiKIo
      HD57kFNdDdy79EFWLF+BoihMTU3x2qGXCbomUD0K1ojNuZ5mZE0mL7UAp5xYXXyx4Z9ejDHf
      F/V62LhhI5EDYYbpmu+m3BCkiIoadbFp6QbWrl67aPwXKJZl8esP3mH38HHs81r+AqjRCvni
      fY/Mb+Muoa+/D90wGB0dZdmyZeTn5SFJEk/seJQjPzlJxGVdfSc3CYdQ+LcPfIPMtAwO1h8m
      PBXi97/yb1h3YjU1VZ+/Qt7nVdnNz8vnpy+/yPNf+sosVeTJqSnU613hNt2oUCjE2MQYxYXF
      s3ptIQQnmxrYtf9DNIdKYGwSodnstT5Cc6gsX1rL0MgQk3oAZ3ZCJ0j2y/S7O5AUiZ54K0VT
      S1i18oKSXiQS4fCpgwwHh8j3FbKkrIr88yXdIpEIhmHgdDqxLItINEJWZlaycMx8dRiKoiAQ
      CB0sw16Q0hDCEugTJs6shKF3VAskLc6Bod3k9edSWlo2vw1c5LoxDIPX33uL1469l0j7PP96
      KELigXvuIzs7+8o7uIUIIVhSuSTp/HV1d5OWlsY7e96juasVc571B3cu2UJ1WSX/+YX/h1gs
      RnFqHuXl5YDgeMMJtmzanEhNt6xkEsy12KPp3/QPDFBUVIj8GeuSKIrCE498Yc5sqrzcXNSm
      1kbqVqy5ppx5Xdfp6upEczp449QryH5B7rlintz6pRm5upZlcbKpAUetQFZN/CEnzjQNM2zQ
      M9LN8qW1HGs7jGHraKYLRUtckGTlrYDCjo33Ji9UW1cr7559CynHRs6WGI70Irps8vPyqT91
      lEP9+4jZUbxmCqWeCprFKfKkYhCJei61BaupramddT63goz0DDZt2Mgrjc14cm4PVcDrIdpj
      kE4WsczJhCrr+XRcSZbx3WYht0WuDVVVCYaDFKqZdFjDWIpAssEvuViz4vaQL56ammJgYIDJ
      yUmmIkFGpsZp7DlH83AHqqIyKc7LUd/iDkA1JfxxB94UH8uKqvidx78MwNNrHuJUyxkOBZr4
      jy/8V1ySRk1eBSXFJdSfPs7+5np0Q6cgPZeynCJKcoooKy0lJ2fu7JDG5iaOn2ngvdP7+M79
      X+G+7fcCny36kZWVNefnkiShDkz0UxWuxul0XlU4TZIksrKyOXTqAFq2jOKUGY3309LawuqV
      q5PfO1h/gGFnH3qvQXqVH1d6Yr/GgE31+sRiL1XR8BW7Z52QEIJqzwrS0tIBGBsf492WXyPn
      ny8UbwqKjSUsr13BK+++TNtEM2nLfHgkF0YkSltzG841GuNietWbxO6xPiInw2xYdf3S0DeC
      /PwCNvZv50T4EKp34YwCokM6znEvGzZupqGvnkD6CMISuIdTSVN8ZGQs7BrAdyuSJLFl9Ube
      P/0JluNCBODpDY+QnXVjvP+u7i7eO/AR29duZdkcoZCGhgZOnz3DA/fdP2f5xBfefJn3Wvdj
      XZrhowDo87boy1QEEbfF//7lP6SyogLTNDl4+CAtAx0cCTQn1i6pNgZxjLDOd3/wF4wo4WR7
      m4M90H0UScBqfwXf/eM/m7Ng1eEzx/jl6fcB+KcPXuSt/e+zLL+StqFudm66l3u3bv9c4Vch
      BB/s+hC1MLOIlz95gRRHKs/seO6KOz195jT7mndT6C8hK1jASGYfIgo5JTN7sU3rNhM7HOPQ
      uYMYeSaaX8WOCJZm1RIOJbQxHKozEXS85EZGB+MsX70imSn0/tHfIudcCOPYYxJb6u7hlV0v
      EXJO4s5zJLdJioTb5cHoiyIK4snPVZ/C0d4DrK5Zfd0FYj4v0xPZad50xIQN3P4dgLAFwTNx
      zJCFY12cj0Z+S4VzKQV2ES6Hi/WPbbzmoewitx/n2lt55f3XE++eAI+uUp1VygPb77th9/Td
      /bv4dcseTnSd5W/+3f81SxO/traWlStXEgrNlksRQnC291zC+N9mj1gKbjYVrSDF7+fM2bP8
      8K0X6TZHZ6mmAgzGx7A0mCGtdNF31tSsRlVVRkdHyczMnHHtS3IKE7dHgrBm0Bzvo7WjH0sS
      nNvdR2dfN995/pufa6FZ3arVyN20YeZHGVR6GRoaSuj0n6++FY/H6e3rRdd1AHomO1GrBIPZ
      nQwrA4TP6ZRpVTNqCe87vJfA5ATb1+0AOVEyUdgC56Cf/IxC9jd8wtDwEAND/XPe3Awph7yc
      RAbCyOgwQ3Jf8sIIIchXiujo6mB8aILoaHzGFVWcMlNZI/hCs+WjRa7Jb/f/5rpV/W4UcSMG
      IWXejn9dSOAu0hAei1BznKneEEfPHibFlUbdssTE76LxX5gIIXj3010cnWxJpH4CMhLffPz5
      y2ruXC+maeJEY3lKGY+tuX+GkWrv7ODVt15HVVVs22Zg4II+jWEYHDx8CNu2yUhJvyFtuaEI
      qPIUcqjnFH/+w7/gL1//Pj3xkctWERu0AoyLucXgBPCr4+/xn3/wl/yHf/ovtHe0E4vF6Ojs
      4Mcv/ZRUXwqqfZGzKJHsEGOywTvNe/jFr19N1kO5XiRJIicnB1VSJSRLQhISZ8+docloIFcq
      Ysuye/B5/Lxx4FUyfJk8tf0Z/GoqsiKBIqHkgz1qUVe6Ljl/MDQ0yIngYbrrO3li89M4XY6E
      /KolGLdH2Nv7IRkiD0VWiDpDOCUFM2piBUF2SUgqrClcn3xgApMBpIsGJEbQYkXpKo631aNl
      yTj9rqR09DSqR8Gne5kI2IioRLaSRyA0QdQKMSj3f6aLdSMoKylndGyUVv00ivP2Np7CEpiG
      iVN2Ue5bwrGOo7gyNT5uf5/W/maee/T2W+W4yLVx/FQDx3vPJv+WBOQpaSyp/GyFky5FCMGP
      X3kBUzepyavg/2fvvaPrvq4738/5ldsvei8EQALsnZJIkRLVmyVLstWiOJ7MjD0vmUl5eTPv
      zVvrTbKe30wydSVTkoyTcSLbirutLktUJyWKvRMkSPQOXNTby6+d98clQYIASIAEi2x81tLS
      wuX91fv77bPPPnt/d+9wP8caj7NhzXo0TSPg92NmDHr7eqmsqGTZsgvhoZ17P+W1Xe+wcf0G
      Htp4N0ffPzuNLunNI2i7yEiTqJLOWnCFq5/QC4g4SSLhDpDwb/7hP1MaKCRlZRhKj/NR275J
      ukyXYqgOpzubsSzrmmYBGoBjOQRHCulzdaPXqIyLQX5x8kd8afHTVOZU0+Np46PdH+DXgzge
      OaG74y/3orsuWGhFU3EpLsLeIX7w2UvoDeeah2iCYL0X23Bob22hs6eTpfkr6bDPYKUdaqyl
      rK5Yw0h0mDUrLyxCtfW3ogcvrPLINBTmFyEVSe5KfzazRp/8C6geBVdQ5/HqZ8jLzWM8Os5H
      Z3bgTXvZtvQeUukUXs/UtYfrzceffIw34PlCzAAcQ2JELPRiFVVVKLujANWtEOgpZN2SBcnn
      LypSSn6+802GzMgFj1XAg3ffP2/CiaGhEB+07CUhMhOfvXt2N3cf2cD/8du/R0lxCZtvu4OX
      fvED/vgP/jVCCAzDIJVOs3H1ehwnWwDaOzx4Sxl/gDQWp5Jd8x/FFRAjTSzRN/H3+Awzhwkk
      KC7tmn43KeW5SxGCaOkI6ZrohXi6DodPH6bDOovmV2nOnMbjcWNGL1TdCa8kHAlP/F1cWMwD
      tY/h2BKlysGdP3lRWdEFJXfl0Rfu4Y7VWzCGbDz5LiLqGA1LGrhzw9aJC4on4vSYHZNaK7qK
      NI42H6YsWEGsOzlt28XxphhKSqOluZnR0VHebXwDuyyNqLF4v/Mt/v6T/0lLe8tV37SrQVEU
      cnKDnOk7jaLf+msAmk8lt8GPt9RNKpNklboRI24RUvo40XT8Zp/eAleJEIInNz+MclFHlDx8
      bL9j27wN6t09PSTJTPrMViXRdGLiGC5dp2W0i57eXgBeevUH/NFf/D+MjY5x39btqKpKbVkV
      LufWEVKD7OLuraI7pDsKS4qnpuDPlr7+Pn7y1i+yA4CiCty5k+O6elAjXDGAr9KDogncBRoF
      BYUY0QsxJ0VXGIqEJu24pqqGRWY9RpeDdCaP4UIIMsMGyypW4PV4cVIOdsamoXBqlkA8Fidp
      XzIKCggNhtAcHVfYh7xkhmTELURcY2R8mE/2fsxLr32H/qYQY01RHEvipJ9oFwAAIABJREFU
      q3CjVyrsO7kHy7Ku6sZdLfF4HNMxsiG0LwoSRvL7GYkP82Dp47jjfrZvvvdmn9UC18Cx9lMT
      hV8APtVDTs78Kbi2D3RN67mPxscn4tW6pmM6FqlUkv6BfsbHxsgYGf7NP/wnvvHv/4j3P/2I
      Tes28qcv/CvuqdyI4nyB3pkbhKk6fNp6iGRy7l0HHcfhJ++/xuuH3p95MqN5VNSL4uuaX+Vw
      y0EW5zZMGHZFF4wkhiZtp+sunrzvaZ6742u4hv1T9isViXluUTk1msHp1ti4cqqQmMfrwS0n
      Zw4IsrISZwZPIWpMxk5HJ4VUdL+KqRj00knJXXlIRxKo9RJc5MOMZWcuji2J21Eaz5680n2a
      V/KK8shZPT/aStcDKSWZMRPHvnA/hSLQ/Rqjhf0c7tvPU3d/FV2/yZU3C1wVo2Oj/Mlf/hmf
      tx7Orsud09ryub3zGpbsHw1N+3lNUSWKopBIJPj5x2/ic3kpLyunPzTA2iWrqC1bREI1GVMS
      fPuzH/PSqz+grraOb3zlt6j0Tp/H/utMkZLDnXXrJ4XggYmCs8uhKApfe+xZNtetm0M0S4Ah
      0lQHarDSWddbCEFvupNIJDL5q0JQXlbO/csexgxnTyjWncw+dHGB1+djIDSA8EARZRimMeVw
      4cg4zqUiTwIijJGbk4se1MipmZw/K4TAV+4iWO/BU+gip9ZPvCdFetTAU5BN/1RUgVOR5kjL
      oSnnfT3Jy82biLumRjLYxswLPDcFCQyrZJrsqTM3RZAsitDUeYrCwoWX8YtIa0cbx0abGZeJ
      SQYinklOZPnNBx1D3VMyYgSwtmYFkWiU//LDv2JH826WVS7m2Inj/Nkbf82bxz/CfZF0uyMk
      O87u5sDRQ6iKyn0rtlCi3tzGKrca5f5CPOho6mSH7NU3XqOnp+eK23u9Xg52nURxTGdWHoAQ
      grgvwp6+XWjeC+OGViw4dvbItNvU1SymXl2JdCDRk0bpc3N7yTbqauv4qGkHucv89Hnb2Xd8
      z5RtA74gcprnMpUXwyO95A+UAWJK7DJQ7ZvoGpa/PEjl9iK8xRdy/x1bEt6bYbA/xKtvvsJb
      b7/J3sN7yGQyXE86htpQ3FlpilSrReqEzfjJOGb8xoaiZkIoAvcyBcOdIdluYMYtHDM7SJ1/
      PvpCvbS1t97M01zgKsk5l1ao2gJxrhsUwLAZobVtfn7Ts81n6UuNTPk8V/jYsGYdb+18l0OD
      p5FAIpMiPzcP23HoTQ9zYOj0pIHDUhy+/dEP+ePv/Af2Nh9hRbAGdSEUNEHLeA+JcxI45+nv
      7+eNEx8xGh6bmOGFw2H2HNzH+Pg4Q8PD9Pf309R8hlQqRU1+BZoZt2CWkQlXoQqXtLgUiiAa
      j864zfLKlZw5e5JVK1bxlbufQ1VVQsMhAkoOES1NoMpLa+Q0Szrrqa9tmNjOMA1QLoghnf+/
      6lXoMdqpVpZM8VSnI9st7MLfjuFgujMoGrS0tNAkmlj0WAnNO5t48f6v47pOTWRqixfT19uN
      amk8fteThAZDHBs6OKXX8s0mWOcl3pJh5GQcn+onsM6F4sq+eBH3GAdPHKSqsnqh9+8XjMW1
      dfz21q8yMjTMnjOHCbmzBVimsNl/+ggrV6y86oVgKSVdvd385VsvkeESh0bCfSu24PP6+OzM
      wYn1gaJgPvX19Tyz7mHebPyYNFMlneOkiacG8UidUj0PW9xqeUE3j4xqMWxGJqk3nGhqZFwk
      +Y+vf5unOh8g15/DawfeI5QZJ0d4MSyTgKET8WSo85czlomhfv3/fPFbMfvqQyHSllSJOmqr
      6qb997y8PApkCZtW3I7H4yGVSvHDd18m4htBD5wTgvMIwr0xVi1eM7FdMBjEn8nBGnGwI5JY
      IooeyFpyxQNR7xiad+7GU9EVzLiBK0fHciw8JTo5i/wkrDilVFKQf33kDSpKK1lTsZ7V1Ws5
      fOwQHaE2fIofp8BEKLeGwqmUEmmDt8xFsNqH3wlSKEtJuKMTldkxM8Kq8rUz9mn9dcVxHDKG
      wejoKIFA4GafzhQ0TaOmchFvf7IDr+4haiQmCpjCY+M8vvWhq04p7Onr5Y+//58YMMamFkQJ
      GIuMc/fKO9CkoLG/BSlgLBqmt7uH2pJq6gIVFClBemIh5CXbux2Nf3LnV2kb7SGUGb+6i/9V
      REA0EeO2ujXk5+UhpeS1nb+kKzqAISxODrRwqLuRmJNCCkiLbL/nhMvEViQjVpQEmXnIaBXi
      sqlIQgiWLV2G359dEFZVFTto4CvzTDJ6sczUQUjakIynWFuxAf9AAcmhzKT9Xi35K3IIVPvI
      XxqkcEUOkbMJxg/F+dmHP2YgNHDlHVwlfr8fr9dLVXkVv/PiP+fe2x6gd8fIlGymm0Vm3MQ6
      oxDrThLaN0aldxGP3v44xkA2e8NT4ELxc93DZV8kpJR8snMnH3z4AS/9w3f5+VuvMjA4yKtv
      vMYf/rt/TUdnxy1T++H1evnaUy+woroev7wwgxuwxvmvP/g2GePqftfPdn9GxJw5b33IDPO/
      3niZR7Y+QJUnqzU07sT5uPsQf/X5j/jpyfdAZo39pagomBkT/RZLCb0ViMoUf/P69xgaGiKZ
      THK6r3VSfcelg+l0qC/+/vPfilrhbPP1lIPqnrkbz7QI6A/3UUQpXo93QkvIsixisdgUDZBM
      Js3R7sPgkRMpkVJK7FFYXz+5ibtpmRwO76FP7USWGhMzhmtFCIGiCvSAhhGzGD4WxlvoQs/V
      CHUOEYmF0RSVnJz5XXgyTZNPD+9kKD5ILBol6M2hqqyanvEutMDNTzA2BxzsEYFSJMmt9xOO
      hFlXs5GO3jYsf4ZoZwJVV6jPXU5+3i1Yqn8DsSyL/v5+Ptuzm6LCQl7e8TN6RgdYt2QVJ06f
      JGwnaBnswEhmONVyhorisgkn6GZSWFBIbm4eHX2dRJIxHOmgSMFAeIjR0AibVq6b00xASkl3
      bw+Do8NELk3bvggnY/HEtocxEmlO9GdF087/5yiSnngISzhTjJaJzbHBM8hwhoR680TgbkkE
      DKfD7D20n46ODppiXXO+P+o3//E3v5WXLGZT+WaW5a8mPWgQiYZRZjmLFUKg+gQnT52k9UQH
      a1evRVEUhkeG2bV7FyuWr5j0fV3X6WrqIaJcCOEIIZABm+bjzaxtWD9h5AP+AP3dAyS8URRN
      QdoSx5KzyqW3DYfUUAZX8PJpi0IT+Ms9pEYMLMMilokQLRilKXQKPeGhvHSqUuHVYts2u8/s
      IloyzIDdy8DgALcv20xXezemP33TagSkI0mFMrhG/JjFSaQh0eMeKgPVLKtdjjSgO9pJrDuF
      6laoyV1CSfGvWJPjOfLJrp388O2fkU6mOHrsKH32GJsa1jIUHiGdSnOgt5F8NUBvZJBjg2c4
      cOQQ+d4cqspvbI/dSxFCkJ+Xx/ZNW1lZsoRKTzGrihYTNFwE3T42rF0PMGuJASEE9Uvq6e3t
      pXls5qZH+XqQR7fcjyZUdp3aP6kWAbLe6rQe67lBwhIOIHFuvp90ayEgQYbu+OCsPP5L0VZU
      rWZ4bIjQaIjSglIaSpcTCOVw8Mwecpf5Z/2w+htcJOOjvP35G2xcfDtul5uN6zZO+Z5hGIx6
      BnHnTc5fFRoMZHo52XSCNSvWZr10ReHRLY/z+gevMmj3YY5YiCKHnMWTPalM2MB1SSFbethA
      6/dgem1Uv5ixAlfVFfBrZCIGBaty8Jd7kLYkM2oTdUUwDOOKMtmzxbZtluavpLHlOJRnyJTE
      efXkj0mPW+hF8qY1jJG2xIzbSF+S1FgakVa5Y8N6wolxjjUeZcOajRQOFmGUmWiqRkV5xU05
      z5uFlJJUKkUsFiMvL4/mlmai0Sj5epDTPS3EPAYpl0VyPMaxWBuaAUm3hWVHsGwHS3Xok2P8
      r3d/SHV5JYuqp7bnu9Fomsba1WtYuzq77mYYBo50UFWV199/m66hXn7vN745K8lhKSX9Y9Pn
      /5+nprgSVVVpaj+LKeYuYJbWbo1suVsSwVXLZmh7ez6lz+xC86gcG7Swog6qphJc7Juzp6IF
      VPrsDjqPtLEqbz0Pbn9o0r9LKVEUBc3RccTkwLd0QB11E0vEGBsbIy8vD1VV8Xl9PPPIc7R3
      tHOwcT9Ch8Ez/bg8OmoZIMHOOITPxkEBt8eFnq/iq3CDULnNfxf7+3ej1Mx83qqu4Ktw4y12
      Y8cdRk5GyBH5HEscZsga5Jntz1+T4NJ59h3fw/HkQbQ8nTpjKV0jLRC0cS1notHKzUDRFXLr
      /Timg7+1nKQvxvH4QbRCQY/RyolPjlAbqAcb7rr97mn1y39VkVKy/8AB9h/Yj6IpWLZNQWEB
      Hx3bjc/WcfvchNQEbkulPdJHWjXBDYoN0nLQpSBX8ZGTk8M3v/Q1ysvKb8nWpuedHMdxaGw5
      zYHRJnLfCvLbT//mFUNCUkp09fIz7Y2LsxLvh1tPLoRxbiEUPaih+zWEKnDl6Piq3LjLtKvy
      RqWUpHoNDJGhe3DydHBoZIjPdn9KMpmkzFOJY00eAISAytoKgu4c8vPzJxlct9vNsqXLuHPd
      Vp7Y9hS3l27l4WWPUzO6nPX2ndS7VuAYEm86QK1rKfflf4n0aRufFaQgv5D0sEViIH3ZxbiC
      5TkouiDcEUNxCRyfhd4AvWYHoeHLezezJZwM4y7Q0UoEPaKdGmcp1SNLCe9PkRm4eX1NLyaR
      E8bToOIqVVE0Bc2n4pRnaHKOYqvmvM2GvihIKTlx6gRNA62YpoWVNjjV0oTf7aM/GGecbNw7
      o9kMqTEUC3xxBU9GRdoO9rm49gPL7qQgJw+AV99+nZOnG2+ZxeGLURSF5x95mqW+Kl4/+REf
      7PyIxsZGEomZ4/ut7W00D3Rcdr9neloZGBygK3r9kiwWmDvqi7///DWlgZ4n2pHECFksVpez
      onQ1AXeAxbWLgWzo4909b3Mm1ojPDLBqyWrO7G0lbaRAAcUlsOI2ywJrGB8Nk0gmyMvNQ9Mu
      eBVCCAoLC/F6vcSSUXZ0vkk0OEZHWztDA8OsLl3P177ydUKDId7bs4PSolKef+hFDh49yLYN
      dzHcO4KZl0Eo07sfQskWlakehdSwgVqQbYdYYdRQv7hhXlL7Ovs66BvuRfOp4JN0h7q5f93D
      HG0+jKdcR7/JNQFZJyDrDFxMJmywJXAv92y+b15mQl8UotEou/d8zke7d5JUDAbCw0TMBB3a
      KCmZwVIkhjJ54PYkBKmAg6k7WDqoFgjDobmjlY/37qJ3oJ99Rw7wyam9bGxYS35e3k26upkp
      LCjkzrW3M9DWy4HTR3jt9Ee889kH7D26n1gkRklBEV7vBUXd5tYWDjYfwxBWNhQxzStW6S+m
      oXoJH57cjcmt4ewsAOoLv/Pst8LJcaRk1ouQ1piDOWaj5VyYJSguBd9gHo7b5PbVm4knElRX
      VQPZ+OKOz97FW6/RHetgzzv7MNMm33zqd+k/M0h/5wD+Gg+DZi/dg500nm4kOhxlxfKV0x6/
      vaeNYW8/uk/FXaZjYjLWESYZS/HAfQ9SFCxm++33EAoNIqWkob6B/v5+YuMxCDozDgKQnYnY
      hoM0wTZsUiJJaX4ZpUVl1zxlry2vwx7ONtYRGYXlgTWsXb6O5r6z6IturZDAeYxxi+r0Eu69
      89fH+FuWhWEY/M/v/y8OHz+C2+1mXCZQbYi6DRwkljrVe5dS4soITA9wrhOcrUrcKYGtSZIe
      m5ZEH3HdYGWghlxvcCLMOd/39v3dH/PLT99jSWXtnEN26XQaj9tDXcUifnF4B6bqYKg2o2aU
      431n+OjAZ5T6Cqgur0IIgdvtwQ6nqfAX0x7tm3YAWFPawPbbt3Ho+BFGzZkLRxe4sah/8kff
      +lapqKKUCvq6+lCukN3n2JIl9kpkUpDIxHGEkw0XCRiPjmEHDfS4h2133sXQ0BCxWIzPGz8l
      URxG8yroPg2SKi8+8TVKSkroHuzCqIkjFIGii2zIoU8h15cPmqS1p5mqsupJxjGTTtPccwYl
      kH3J3Lk6jmrjZCSLq+upKK9AVVU+P/0ZpmlQnF/CsZajPLP9Bc40nUXmzrygpGgK7lydSFsC
      xjVK64oZHBxkRd3Ka+rBCdkaiPz8fIipbF/2ABtWZtNeP977EY5m4wrcWkJrVtpmubaWx+5+
      fNJs7FeZZDLJyz/7IcUFhbzx2Q4S6STDehwhIaVbCAfcSRAI7EtuiZQS3VaxLuqz604LXJZK
      PGhn2wOey2oZMsOcOXOWXcf3su/kIdo627EyJpVlFdfsCAwNDfHvf/FXNI130tfTy5bVm+b0
      +yUSCY4eP8aqFSs53XSageTopPzyjLBobD5NqH+QyqJyykpLWbliJYqE3a2Hph0AttZuZGld
      PbsOfU4ik+Su6g1sKF/B4NgQaWkurAvcJNTf/sY/+lZ1+SKWL1nOYGiAuCc87Y9hpx20AS+l
      VhVb12xDESoritbQcqYFYSo4uo3u13ElfaxdvB6fx8df/+1fEwgGOBU9ip6noqjZGYOlGOSk
      87Pl4cd3koqn0fOyHpDqUlADChXuKva3f85QsBdrxKG6bNHEi+H1+Djy2THUSmfiM8UrMEcd
      Nq24HZfLxdjYGHtO7OZL256gIL+A8oIKXtn1U1KxFGbGQg0ql50J2BmHdDTN5sXbeOqRp6/Z
      +J/H4/ZQV1VHMBBECIFpmhzs3oenTEfRbp0cN8dy8A8U8MjmL02p5fhVZXR0lO+9/H0URWFs
      dAyZtOh2RkjpFqbm4MoouDOCpNdCtxQsLdvUWkiQSNymiq1ILq5n8iUU0n5n6mAhACmJ6BmG
      zQjNY13sOXuY1Gic5bUN1/S8DQwO8O6xnWiKwraGTaxdunpiIVdKycDgYLZBkcdL3kUhKCkl
      Y2Nj7D68F5/HS1VFJcW+fD49fWBK2mYGi5axbj4/vh8zlqausoaqiip62rvpjw1NSUmsyyln
      7fLVrKlbwb2rtrC8dimpZJJFgVJydD9902yzwPVHffKPHv3Wgda9eNJ+kpkkY2Io2/FGgmNJ
      nIyDEXJY6lrFXSu3k05m+Lx9F11aC6NDozyy4Qm2LNtGvlnEEv8yXI4bB4fSolK8Pg+bb9tC
      ubeK0fZx4moMoWSNfKh5mOWLV2KmrGwaYk4aOBcGURwCyTwGMn34yz10dnayeemFZjGf7PuY
      rmQb3tJsNaOUEqQgk06ztGgFAX8Al8tFrp5HUVERuqaTSqfoH+jnng3303yiBaVYIrSpYnKQ
      ve5wc4xEb4a1q9dSXl4+bx2Tzp+vbduk02nS6TQneo6iF6o3JAQkpQSHGQc/aUucjKRgvIwv
      3/X0vGrF38oYhsHLP/wHGtuaGIyPIA2b3lA/Md3AFhKJRLUg4wXNFNg6eNIKmiVQTdBtBSHB
      8MhJPaw1U5D2Tt/c3NImf+4IyZmhds6ebWbt4hX4vDNn4vX09uBxeyaey0nfE6Cl4ZF12/nS
      PQ+jaRpSSkzT5OPdO/lvb/49tSVV3LV5K7ZtMzA4gHQkx0+e4E9//N/Z3X2Utr5Oujq7ONHZ
      RFd8cFqJBwSkpMHJ/mZGuga5c8MdLCqqZOeJPVNSPQfHh1lfs5KyklJe+eQt/u6jn7C/rxFV
      KvyjR19gf+NhUtOpPy5wXckuArvH6e7p4o66rYTaRgiaeRRaZURPp7hz0XYe3vQYNWW1/GjP
      y4zk92NoaVS3QiQSoWnPWSrKKli5fBUlxSWUFZWSHywgJyeHRVWLUBSFZDJJaX45B3YfpIZ6
      ipRSXvjSi/h8PipKKzjZfxTbb048xFbCZol/GSPaIKpfwVEciuwyCgsKsSyLD0++h3fpBZfK
      TjpEGpOsq9nI6oY1KIqCoig0t5wlNzcPn9eHz+tjRf1KEokEpzoa8YVzsYJplGmynRRV4Cl0
      4clx036qk0wyQ01NzbwNAoZhsOvzXew48ybHuo6glQvUG+T9SwdGj0XwlbsRQuDYEseU2ays
      Po3F+nLW5m/i3tvvw+f99Ur37O/royXUiVtzYSYzpISBZVpoJuiGQLcUMl6JrYM7I5CqIO12
      sDwCKcF0ySkDq9tUMN1zyPYREEqN0d7azuZVm3Dp+rSDQDwW579996/Zd+oQx0+fpCSvcKI6
      2+v1sm7Famqrss/syOgI33vtR7z23lsMR8dojfVwZ916aqtr+MuffIe/fe+HvLP3Q453NTFs
      R7PFRU6G9kgfPbHQFcMzUkBvPISWho6eTo4NNU/ZJi1N2js6WFXVwMs7XyGuZLLXmhzDb+uo
      UtCXHJ79fVpgXlBf+N1nvzV4YoQSXxlrl65nxeKVbFyxCTKCRx96lKLCItra2ojFYpxoO076
      lE1BuoSoFcZb5sI2HJaWL0dVVdwuN263e0IorK+vj2AwSCKR4Htv/h3FW3MJx8IwolFXW4em
      abx74G0iecMTWTgAiluhpb0Fb2U25TBzWrKkqp5TZxqJxeN0JdpQghcuQmgC91CAL9/31ES4
      QkrJ0WPHaKhvwOVy0dHdwY92f5+e8U7uWnkvVtomR+QxFh1DDU59wlWXgrtQJzoepa+jHyNl
      oms6ubm51+ypSyn58PP3yVhpCt1FpO0Uim/62ci8I8AzHsRwDFAhE7KoSdezOncDT9zzNPXV
      DZQWl87rjOdWp7W1lb9/+btYhsW2TVuyWTsjXUSVNFI6JAIOlgscnWwlqgBLzzZUVw2J4xJI
      lWwGwUUIIdAy4GjMuZXgUGqMnXs/pb6khtxgzpQYfjAYRBcaPzr2Dq3jPRw6dYzblqwlJzh5
      xtbR3cm/+8FfcHjoDGNWlIHECEVOkNHBIc62t/Bp52EMzcZQbBIyM2G4z8sJzxYHydmuVrqH
      +0krU5U9kfDg0i1sWruBo00nGM6cayUroD5YhSMdOqMDC2sBNxj1q7/5lW/dvmgLa+rXkclk
      cLldeDweCgsL6e7p5u333yQvmJed8SU0BlN9iEUWnjIXiqqg5gtaW1o53nWEYm8pBXlZNU0p
      Jaqq4nK5ONl4kp50J95SN1JzGBoJYSYs3j/9S9KFUcS53r4T/YiFwFPkynpTEuoDy7l97WaO
      tx+hvb0NozCJ6rnwRgkhsKTJ6sr1eD0XVCqXNizF5XJhWRZvH34dWZnBCVr0HO1nSO8jz1WA
      YisT4afp8Jd7SCVSdJ3toaW5hcHhQZYvXX5NxnpsbIwjY/uwsbFsi2h/HHfRjVsDcCf9PLT8
      MSqURdyxeAu3b7iDivLs4uOtmIl0Pekf6Of48eM8/8xzrFixgh3v7eB0ZzOWsLEVBxBYbs5p
      1jBpMdRWJC5LycoUzxBSs3RwpwSOOsdBQEASgz2nDtLb2sXWTVsm/TZCCE43n+FAd7awKmGn
      cWcEG1auA2BwcJAzbWf5j7/4a0KZ8IQ4mCMkCZFhSEZpj/Vlz32efnJbkaTFzAu6j63aTv3i
      JSTDcY72NU18zxVxOBRuvmX67f46oelBlb09n+Fu91KeX0HQn8N4bIy4FaU/1ou7VqNp6BQ5
      Tj4lxcXk+L24Sy94I4oqUBZnF8Pe7XiD0o5K/JqfoXiIpBLHa/vxa0F8pW4UJZsFpAmNJAnc
      tbPQGlEErdFm7jUfYEXVKt4MvUpOzlQpYrVA0NRxmq0btmW3u8iYRaIRImIUN9mFteqKRXi9
      HgzTpLygkkPpz9A805+LEILClTmM2BFGB0bQR1X2H9vHxlWbrloTf+ehj4kPJVEtDYsUgToP
      in5j4v+uET8PrH+ImkW1v3bGfjpygjk8/vjjqKrK8RMnGBwfYjSYRk9Kkj7nssZRCAFCIMk+
      /9OiQMrr4EuppAJzlH0VkBQmnw0eJ/Cjv+e3n35xkqBcx1C281OJnscdtWtZ37A62wQkEuad
      T97jl82fTW+Qz3v5czubWZ3vTLiFNrGeZDkXZeHJ7KBUquUxZIaxp0mvXeD6oaluBSpNMph0
      OJGs2FqeQCDwFWdDMImKMTr2tpPea1K6pghZIqc1Hmo+jNDHsJSIoEAAGREjLaO40XGcbPcx
      nxOkKrCIoVQvqneaRaxLT7IcDp88RF3VYnyF3umP7VE4Nn6AJUP1lJaUTvo3j9uDamUHLSvq
      sHTxUpYuyTaiz2QyHPv4ALLcnPEcFF2hcHUu+csdkDafHPuAHE8uy5ctn3P+tuM4pI0UecsD
      KC4FK2WjB27MArCdkNxb/xC1NXXX/VhfFM4X+KVSKZpazxBxkrgygoTfnpVnrEhQpMLlTLuC
      uCbv1lEk753dzb2921i5LCuu6DgOw9FRVCn4xv0vcNfmrUBWcfbP/u4vaIn3YN0qDVQkPL78
      HtasXE3/QD87Gj+bNJNqsQYpUXLw2BoJdZrw0QLXjUmPpVAEquucHPTFSQVCULA2SO46H/HB
      5BX16y82ZpfGEYUisEvT7Pj0HRzbmVXYQdEEjaNHef3zV1AKZn6obceaNm7p8/lYmbOekpFq
      Hqh4nIbFSyf+Tdd1StxXVvxUXdnZSyZsEGoc5c1fvsHnn39OV1fXnGKl4UiYsG8EzaeiaAJX
      8ILE9fWWBlAiGtUV1df1GF9UQqEQnx/aR8YyMDQbMUtn3VQclCv8bO60IOO5sEPhgOYoc3LB
      bUXS2d898YzYtk0imUQKGBgbwnGy+0+n03RHBrCU+QvtXCsBy8Vjdz+Ioij85IPXCBmTG7sY
      wqJXjpFwLRj/G82s/RLNp5IJWYz3R0gNX1tDEG+Fi/KHC3AFZ5/rLEstlHprkkaRlHKiubqV
      sKl06iguKp6yraIo3L/1Ab76wHOsWLJi0oCz58hu+lwds/bA9YDGkmcqidjjvPvhO7z8k+9z
      9uyZWV+Hx+1BRDTMxI1VN3QsSUP+8l87LZ/Z0NfXx39/+dt06WOM+zLY0kGZ5ath6dm00JmQ
      tkRcMgNQpOCBytvwSH3Wg4BUoLmnbeJvXdf5V1/7F/hx84P9b7Bj14d0dXXx+d49U+QpbjQ+
      U0OzsxfsNTUeXbOd4uJiRkZGaBvuvqnntsBkZl0eKBRBwaYAeq5U5y7oAAAgAElEQVSKJ//a
      iqKuJtyhaNm+wHbGxjElekBj9GQEX5kHb6Gb3EQRT9zz5JxCMuFImFPjJ9BLZr4N6XEDK2nh
      r/CeqzrOGtDc+gDSdhCaZEfj21RWVREMBGfcz3l8Ph/P3v0b/HDHy2hrpw+lzTfSkSgDLrbc
      u+26Hwsu9HH+IjAyOsoPfvojuq0RbE2C5aCjkdJmNwWQCggpsvm101yzUEA4ctI9sVXJsZFm
      nl39EB3jfRzoPYmpXH69ISA8PLLl/kmf5efnIw0by+3wN5/+GOUTMFVnDm7d/KM4guKMH6Eq
      jClJPJqLpx96gqONx/nrd77PiL0gA3ErMaf6ft2voQYE0r76UMW1GIZUyGC99w4UVeF4+ACu
      XB2zR7KIah6/+8tz8m4j0QhvHnkFpziDmOHNsw2H3p3D6Oiod6kobgVXQMNOO+Q3BDFiFuke
      EzXmxu+bXbcnKSX7z+zFu2aOnddmiZQSK26jnVtXcExJOmTwlTVfndUANRPDw8O8teOXPPX4
      lyksKJzxe/sPHmDP6YP83ov/jEgkQnHx1BnZrURvTw9tg11Y3qzB96RVUv7LG+OLEQ5IRU5r
      /LNfEDgKKA7ZVNFzhIwwu88e5I//6b/iyfFHeP/QTva2HiWlmFPWC1Rb8DsPv0jdolo+3rOL
      7sFeli5aQkVxOYaa9fZtMbXa+GbgKJJIwGSJp5z1pWtYvXwV6XSa//rad4iq6VsmLLVAlnMt
      IWevBurO11HUy8soXC6uPyejd0lyhepViYxF2L72PsKdUcZaIqxYvIrbVt5BYeHMRulSbNvm
      jb2vEM0fnbkiVkqkLQm6g7zw8G8S6hpiPDxGOmSgBTU0j0q0K4F72M+zTz1L7hzaRzZ3nSXm
      GZ9y7PkYEMy4DS0ulJKs6F1BuIwvr/8qldfQiSqVSnHg8EFOtTRxuOMkyxbVo6kqPX29jIXH
      OHTsCAMDA/T297H7xH4+6TnE2WNNVBWVUV42fx3V5hvbtnntjdcIjQ5lPXQjW8h1sZbPlRCA
      agosfeZZjxSgGdnq4Ys3jDkpQr2D3L5qA/fdcTcPrNvGsvwacoUPadiYpsnS3Gq+fvdXuH3t
      Jk6cbuRvPvwRR0Nn2NtyhMH2PnrMkVvOqKYxGTTHaR3r4Wj7KT4/vp8RYrfceS4wxxkAnDNS
      l4myXJqrfJ65LnCOn43hSfvR6yRaTvaAiirQFJ3TZ0+Riqapqa9haGCIsgfK5rRvVVUpD1Qy
      ag2iumZ+KoePhskVBdi2zQuP/ibf/9l3GXdG0QMqsd4k0paoqkZJcemM+7gUIQQb6jfS0XwW
      d8H0VZ7Xgh1xSGQilI2UUKiX8ODtDxMMXr3nL6WkpbWFH3z4Cl6Xh4FEGP+bP+O5R5/mP37v
      v5PjD9AdD+FJK8Q9JmlhgYBj8VbyDn7G6lWr501Hab7JZDK093QxHEhjKBbelErKN7vQjyIF
      AdNFWrPQLbAk2Zz6abA1cKUFyMkLs7aQ7As1En01zv/3v/3flJaUUlpSyj1b7yaTyRCJRMjN
      zcU0Tf72le+xu+MIhshmJ1k4HIo1z8dtuC5IAZbqECFJxE4uGP9blBsWLZxrkVFwkY+S0mLW
      6VvIjGazA2RMUKqXcyS5j6FYiFVL1hAM5hBPxC+7L9u2se0LC2OO49BQvQw5OPPlCyHIrQ8w
      OjJGTm4OLpeLzRu2YKQNhBBk+i2sHljRsGLOBq4wvwjfaC7yXGx4rlWXl2LGLVJNNpk2h9xk
      IRUllTy96Tmevu+r12T8IRsjf3PH23hVN1LLGj4pJR/u3cmQE+FsrIe4kiGuG6QV60KOuYD9
      3Sf4hzd+QiZzbUkD1wPbtjlw8CB9cmwijDJrJOSaHp5cez/feuaP+JN/+i/5/fu/jl9MXxci
      HIk606smQJo2lj35HNxuNyUlJaiqyisfvMknnQezi7ti8rYLhnWBa+EWiBpOj+ZVCYth3BEv
      aq+XUOswD9/2GBlXGl2qBPMLaOtv5vlnnr/iwHLy9AkOduyjOFBCebCKtrFmRswQpm6gMbPS
      pTvfRdHmIJ/t/pTnn32BdavX03S2ia4zrWg+jW88/bsUFRXN+dp8Ph/PPvgC39vzt3gqrt07
      tg2HpzY/T21NLYqiYNv2vOnLezxu7rv7XirKysnPy+cvvvtXHG47SVqzMfQLRivjciatpUgp
      Seom75/azWN3PUR52dxmadeb7P2RKE622nwuKZmBjM6z277Evdu2T6hprnRWcrKtiY97Dk49
      lq2Qdk1fVyAkrK9fTcA//RqSlJIzva3zX7S1wAJchxnATN7s1Xi6qkdhuKQHdaNJ0YZcRqOj
      hOPjaB6VeM0ovcF2/serf87o2OiM+4jH45weOIlZmWSgoJMj2m4ipUPoVQJ/+eVljhVV4MrV
      aA+10dvbi6ZpPPLAoyxRV2CNOwSDwasO4eTl5tHgXYmUkvGzsataWJdSogy7yI+XsKh60YR+
      z3w2FwkGgmy+7Q40VePDXR8TGQ+T1E0y6oU01svdA7etksnMLLVxMwiHw5xqOs1ru95BnqvA
      1g2Bqc/uNyjOK+Shex+YJKW8d98+4rHYtAOJpdjo1vSvmgRO9bbQ29vLj3/yE3bv/ZwfvPYT
      QqFsG1JN03hy88MoC1rJC1wHrlsI6HLGfi6DwfnQkRVx2LBsI+PpMeBc3wCPgmuJ4JXDP6al
      o2Xa7fcd30OkeBjlIunncEss2yN4FkZX0RW0Wsl33/kOr7/5OsFAkBeee4F/8tVvXlNOvRCC
      oCsHO+1ghm1GjkTmHgaSEO2Lc8+a+69rt669+/fx3icfcLavjU5lFEN1JjJVLmf8VVtQXVRB
      SXHJdTu3qyEej/PTV39OnzlKVM8gkRfp+18BCfeu3DIheAjZcNKuE3s4Ndw+7SYCkTXg0+1e
      wMD4ELqu85Wnn+btfR/y4xPv8iff/g/8/O1XCYfDZFIZvMavRze2BW4scx4A5urxXsnQz8bo
      SSlZrC+joqwC55IiFyEETonBjq7XaTx7csq2eTl52KmsBIWZtDGPq/i0AJHDSUKHxrHSV47/
      Bqq8FG4Kcqh9P3v27UEIQWVF5TUrZrpUN4mONNqYB98VZiPTIS2J5TFo72y/rnn32+7cyje+
      /k/4g9/6HZZ5qtCcKx9LIKj2lfAvv/57c25JeD2RUtLT38toZIyUll2zEA7ZBdrZIGB386FJ
      6xoHjhxkX6iRhG5MG+aRmjjXUGX6Y5jCIhqPEU8k+Nojz1Ck5hBzUnz/8Bv8X3/zb/mbXT8m
      rS/00V1g/plzGuiNKPARQmClbcy4ne1TPKTx5B1fxePx0NreQipwYdHXijtYcRs9T2XwzDBL
      qurxuC8Y05LCUsSYTrQzyVLfSrZu2Mbm5Xeyaf3thPuijEZGcBdqV7wuoQgUl0L7wW4W1y4m
      N3f2aZ8zkU6l6GnrQ6+WeKq1OQ8o6X4TV8jP00/MX8ey6Tg/C5NSEh4bp3GwNauMecl3AJAQ
      UDw8ueo+nrzrEWqqFt2QZ2a2dPZ08T/eeokBGcFRZdbw2xLNVmYl26w4gq/c9girGrIV5bFY
      jL989SVGjOhlF2QlEs0Sk7qFnSctTQ6fOU7j6Ua+8tCX2bbyNlKxBM3j3cSdFAbWglLmAteF
      OQ8A1xvpZHOx0wMma123UUw59615iIL8AvYd20trpglxruuSlBAYyafEKWc4OkxKiXOs9TAl
      vjLyc/Oz2TqZDGPDYzx876PULqojNzcPj8eD3+9ncd1iREylO9SJ6hWT5Jidi8JD5w2Y5lMx
      wzaF/mIqK68+r/48BQUFDIb7SJSFJ/VDmC1ajoKdY1JoltyQgqufv/4Ke5oOo6saKcdAXpL2
      qEhBruLjT174Qx7cdh+lxaW3jPHPZDI4jsN/eum/0Z0cIpjWSekW7jhoqEgFrCtF9CRUu4v5
      3Wf+MZqm0dPTw4/f+QWHh89csZ2hap2brU6XdiEg6WQYTUcID47id3k53tFEf3Lkai93gQVm
      xbxkAZ33DueD8MkEik9QnVPDXXfePSG57DgOJ84cp6JkET09XeiLJErIzV0r76G2upbXPvoF
      XbShBRUi8eyAJqUkY2Soqqpmx8fv8PC9j05qrBEIBFhSt4RTvzxFfCBG8PYLg0CsOUmZr5Ke
      aBeFq3MmumclzDivvPIKGzdsvGZdHSEEi0sb6Im2ofnm5uJJKbHTNnZYUrhi9kVw18LjDz/G
      lx99HI/Hw3uffsg/7HqVhGLgCEmxmss/e+A3qK9bQmnp7OsibgS2bfOf//y/UFZWRmQkTLW7
      gGE9gttQUNznMnSugGYJVpfU8+J9X0FVVZLJJN/5+fc5Fm+bnXfuSKR6+VHCUhx2dOzh/ba9
      2ZDRrTF2LvArjHiz6eeyN9119TuYZyVLx3BItBr8s8f+Bfn5+ROfX7z/tz95iyhjPLzucbxu
      L4FAANu2SSYTxBMJykrLEEJgGAbv73yP4uJiCoIF1CyqnWK0zzfCfuWTn5Epj6EHsgOEtCWy
      2UW5p4ohp5+oPo6/0kt4T5Jta7ez/e7t8+LdZjIZXnrzO1gVKfTA7Bf6bMMhejzFI7d/iQ1r
      N95wT9txHEKhEEPDQxi2SU3lIoqLi28Zj/88qVSKn/zsp+w/dZiwz0BDwbBMErqJP66QCFxZ
      9qHSVchTmx7irs1bCfgDfLLzExq7z7Kz61BWw2cWSClRDdCkguFZSOpc4NbgsgPAZWWdr4OE
      cWokg5CCKq2Op7Z9dUYPO5PJoGkaqqrS29/L8dajjMSGeeLOp6bo1DiOgyMdNFWb8vnFMfeR
      0RH+x/f+K/kbAiiqwJ3nwrEcrDaFLYvvIjQYonO0jUzc4A+++b9fdTOY6YhGo7z8+d+hVczu
      +1JKkn0GSwMreGL7U7ec0b0VcByH/v5+fvTaT2npaCOuGUQDk+WGvVFBKngZT1tCfsrNN7/8
      W9yz9e6Jme7/++d/ytF4G86VdKAv3Z2UeFLZHsHOQlLPArcAihDTz1/PL/zNqG9yjdWrl2Jn
      HNIdFk8ueZ67lt9z2fCK2+1GVVVM0+SNoz+nO9iM9NqTsk3On1s4Eubzfbvp6OrAMIyJf288
      1UgsHpv4u6gwqyaa21/CUnstdspB0RRcy+B49CB33nknLz7xW+R58+kf6J/Xaw8Gg7idqV3O
      ZsJK2qz2bODRrY8vGP8ZOHXqFC/94Ht09nUTcxmk3FPltx1FXtb5V6RgxaIG7t6ybeI+m6ZJ
      X2pkzsYfzukGOWLKAvoCC9ws1Bd/7/lvxZ3opDi+EAJFUebdyM+EdCRjJ+KsLd3Ils1bZi1f
      kMlk2HdqD0GRy1Mbn5loiN3R1c4v977F8pqVdA10sjeyk+bwaRpbTtLfPcDoyChnhk5xuH8/
      akqnrDgbMiovq2DNyrXU1zVgjjj0j/ZjCwtyHAaaQ6xdtp68/Hx0XSc359qbw59HCEGOnktr
      bwu4ncsK7QE4loMy6mLdqnXzcvybjZSS1tZWfvTjH9FQ3zApx/5q9nXs+DHeeOctekb7iXtM
      om5jWo9bOBJNKtgzeOOBjIvff/YbFF9U7a2qKqebm+iOh+Z8XloG0MQtodq5wAIAGmSNvKIo
      qKo6YfBvlPEHiPekWFW8jvvvu39ORtXn8/FPH/4dPG7PJKNxvOMocSWC7diMhcdQfQqqS8HJ
      y9BlNNOeakIv0lA0hV0DHyBNyYZ1G1EUZSIstG3D3awKr6G9q432kVbaelvp7emlIL+AosK5
      yz9ciYa6pRw/fZz2zrPk1F8+b173aWRcyS+U7v6V6OzuIhjMmVRdezVEohF+8fqr9KVGSLgy
      pFVnxiQFVSpYlwnFFOTlU1k+NS63tGoJn/cfv2Lmz8UopkSTKpk5KI0usMD1RhEia/TOG5Lz
      /z/fYu5GUOAu4u6td0/0Z50L+Xn5UzzGxaX1LA2uwuvxUltRhz124aVTdQVXjo44l5HhLtL4
      4My7HGs8OmkfQgjy8/PZtP42nnvwN/j93/gjorEob7z3OqZ5fVrXbdt0F17P7LxfvzvwK2P8
      hRA89MCDLFmy5JqL68LjYfpTI6R1C0e7fC/ebB+XGZ5zCZW+omnXepZU1qLOohjuPMKWuC0N
      49aph1tgAQCUS+P8juPcUONvjFk8uPKxaVs5Xi1rlq/lvjuz3ZOqKqrwGP4ZZzRCCHKWexka
      Dl32ugOBAMuXLSc3J+e63Z/CgkIqPNWkhi6vnmkbDlUFi67LOdxMiq9CWO9SVFVFVzViuoEt
      HPwJdcaZrOF20DMzSDQAG5aumVZio3uwd0bp5yk4Em9KJePLztZUVf2VGbgX+OIzEQKCrPG/
      UWGf8+imm6KC+Q2pXPyChYZDZDxJtMss9wkhaFYbGf1oGC9+SgPlbNm8ZYo36vP5eObx567b
      C+xyuXhy+1f4YOf7nB05AYCe8GB7DNylFyp9jbDJ4nWLr8s53EyWL19+zftoaW0Fw6HY8qK4
      VGxhE5fWtJk+igW6VMkwTR2AAE2fvl9DaGx4VuEfKSXelELS50xKqlAU5aa8awsscCmK4zgT
      evk3+oF0LIelOSuvKvQzG9LpNMePHZ/oJ3Axl77Yep5KpHiYvpx2GgePY1kWiURiyj0ZD4+T
      SCSuy/lCttl3ZWkVd+bcy0PlX+b5LV9DS7mRzoXzCNi55OXlX2Yvv5qcbjrNvv37LvudnJwg
      tmMT8RgM63HGPDO3IXSUbH/emf79WPspQkNDk56BbF9q67IhIMUBzVHwJ1Q8iiur+X/RPs4P
      AgsscLO5qVIQ5ojNo+u+fE1ZH5dD0zTqaus41X0CmTNVRO5Szn+2xLWchtqlvPPBLykvKcfj
      uaAttGffHnRdn1SkNt+UlZZRVVlNSXEJXq+X5HCK1rZW3AU6mbDJpsIt1FTVXrfj34pEYzH+
      9u+/w+bb77jsInwikeDwgUM4iiQ/7SWhmzN764rAlQJzhpKO3uggnx3eQ57wUVhQyIc7P8Y0
      TFQHEj3jGMk05jllVCEhBw+lah6PrdzOE5vuZ/u6OxnsG2DIjkxEmS6un1mYASxws7m5CWm2
      mCTNMG+7te2JhW1VVbOSDplWVPcFr2umly85nME+1xbw/u0PTGqkbtkW7ZFmIifD1NXW3ZBY
      rqIorF29jlBigJbdLaTNNK4H568I7YuCY9tUl1dSVnr5xjI1NTXkBfNIpIYZ8iWwL83XP+fw
      O0hUE6SmMNMigC0kozLOK3veoW5RLeNjY8QjMdatXctTOU+w4/336EoMEizIZc3i5Ty29UE8
      bg9ut3uiKc8fVv5zXvrpy3SP9tPDGFJcewe4BRaYL27qACBQUGYoRLtaHMdh16e7uPeee7Ny
      EKaBlbSRvtm9cL5iN+Oh0ezi8Lm6gvMcP3WMdHGM5vYR0pkvzTpj51opLCjkhUd/k84VnRiG
      QUN9ww057q1Ebm4uzz373BVVWHVdR1EEtipnzO8vSnoZ9qbwZBSSgSss6AsYSo5h2Ra/9eLX
      JqrQFUWhoaGBsbExKisrSaVS6LpOT28PDfUNKIrCicaT/GLnWzRFu3Bwso3HbmCCxQILXImb
      OgCoqPMeCxVCcN+99038HQ6H6aIFr2eWwm0KpJJpYrHYlIK0gYEByIHgCi873t/BU088dcNi
      uUII6mrrbsixbiUymQxHjx5l9erVs1orEkIQyA2Sn4yRkFa2Sf1FqI4gz53DiJPC1rmiDpDH
      UFkTqKOqsgpgUlpoYWEhgUCA9z/+gDcPfkjMSpJWLYq1XCoKShnpH6JLHztXAjzXK19ggevP
      TV2JEmL+6w0uzrYwTZOdJz/EUzZ7rXzHlHT2dvDJrk8mNZJPJBJ0jLeheVSEIjjadpC+vr55
      PfcFwLKsSeGRjz76iJONjfh8vln3PNi+7W4sVZJhsvF3WQorc2vZvulOStK+Kxp/zRKUiBwe
      vv+hSetAAL39ffz8l6/x01d+xt8feJUBwsR1A0txGLDHOTPYxqgZnd1FL7DATeKmzgCcPJOf
      f/IThALbVmynYfHSed1/KBSiL9ONR5v9AGBETTwBF+3e03x2IMjdd2wnmUzy8hvfxalJg8iG
      GMrvKeTTY5/wGxVfu67tGH+dOO8MZDIZBgYHCAQCROMxtm69c04zrcKiIsY8qUmLv0LCsxse
      5ZnHnkLXdU72nmVopGn6HUjIS7m5a/1mHt1yP4uqpza1UYSgsfk0dUVVqFJwcctfRQqeXvsg
      BztP0JxccBIWuHW5qVlAiqZg5WYwA2nSIYPldSvndf+BQAA1pdM11oHqnZ0B0bwqnnIXml+l
      Z7yTlgPtNA4dxVqURPNmx0shBMmhNKGOEZZWL5uyVrDA3DFNk1+8+SqqUGlpa+HPf/ptdhzZ
      STgR4bn/n733jrLrus48f+ecG16snFDIkQgkQQIgCDDnIIpRsnKWLM/IbodlT6/x9LjX6lle
      bvfYM9M9Y3t67PHI0rKllmTLFEVRFClmigBBkARA5FwooHJ89eIN58wft+qhChVQBVQBIIVv
      rVok3rvh3PvO2Xufvb+990NPzogsUFNdDYWQE20tlAhQCLY2X89Xn/o88XgcIQQHDx3mZFdr
      RAM9FwJqdYp/+/Xfo7GhESkl3d3dJJPJ8iE/+tm/cqTzJDeuup7A8+kfHMCXYVR2QsBgTz+D
      Xo6C8MZf/yqu4grBFUFGFlLQmm0hCMZXbLwYSCm5ef0Wbm+6Dz1N6r4QolyMLd7g0plspTQv
      i7THvio7ZWFiIb94+Xk6u2ZWGOwqzsLzPIwxnDhxgl27duE6Dm/sfIsBu0gClz/8wm9j2/aM
      WDNCCD7x8OP8/se/zqb61fzhA9/g97/wLRLxqBaDMYbbN2zBDief/g119WW3T1dXF0NDQ2O+
      X7VgGf/TV/6A++++l//+qa+SzCviOQlelE9z2ushXXImzTK+iqu47DBXiAIAoCqg5dSFN6Y5
      Fx0dHeX/v3HNBppLiy/oOhVLkhPSPZ2UTcOGatrFKY4cOXLB4/x1x4gC+NW2t9i68Wbe2raN
      PV3R+4z7Ft9+9vv86d/9Jf/w4+/NqAaTEILNG2/iP3zrj7lz620khnNNXtv+Bq+++RqLFi2i
      Kj05o6gyXVluIP+X3/2rMaXGPc+jM9PDT1/9OYVCgVgsRjGhKaaimj/xnMTOGs6ogQt8K1dx
      FXMMAyvS868cBSAsyOaytJ5u5d1dOzl05NCYIOxMMdJP4NSpUwghqHUa8LOzs8MY4XEbDMpV
      nGw5cZXXfYFIpaKidg119SSSCXa+txNLS7SAo3Y329o/YEfXfg6dOXpR9+nr7+P1t97g/3n+
      n/ACn2w2y21rNk96fEdXB+3t7bR3tOM4DpWjqpS+seMt/mHHv/LC0W0cPHoo6jc8bCOU4oZS
      wlBIGZR3ta3jVVyBMLCpcQ1/+pt/fJkTwUZBh4YXDz2HXSOx0hLdaXjlcJzrmm5g8/Vbps0A
      gYixc/r0aaqqqpg/fz4AixctZscHr5dbPs4GhBCkF8dp23OabDY77T4GVzEWxhiSySRLl0Z0
      y57uQwgoB3GlFjx80z0zmgOjMTQ0xH/8P/5Xin4JqTXXLF1JQ0MD9265k18efIsef3wMTOd9
      6urqUErx+5/774gPu4OCIOCnb7+AlqBNyH957tvElUveGt6diGjc0kiUlmDCq0rgKq4YCAN3
      LNrIt37ja6RSqStnB2CnLJIrHJwaC2lLrJTCzPfYFb7Nj9/8EaXS1BUyR8N1Hfbt38sLL7+A
      1ppSqYRjO8yFkT54PEfPkX76+vtm/+K/JhBCcOutt3KmrY3+wQESoYMYlv4qFKyrWMJN6zde
      8PUPHz3CkJcnK0sUYyFv795JNpulrraWT938sfK9RuCEijVLVhGPx5k/fz51o6qUFgoF+vKD
      SM9gBTDo52j3eqOs4lH1mpCCUF/4DvYqrmIu0GBX8bXHPlfOqbliFMBkkI6gp6KNl3a8OG0f
      cDab45333uFXv3qTbHYI3/dp6zyDW3FhFuRUSDTFcKotOjuuBoIvFEIIbNvm2nXrWLpoMdpo
      XF8iNSR8ixWNS8bx8GcCSynOxDN0x/IYKTh55hRaazKZDG/t2I7BRNRPk2Bj7WruW76FO2+/
      Y8LYj9YaOw+2lkgtiJcUiYKF7UuSOYnwIyqrGY6wxYsSGRIFg696Ca/iMsLF5oktD1JTXVP+
      7IpxAU0FqQTH1H7af3mGtQ3XseHajedtyr5pwyaWLFpKdXUN2WyWd9q3Yc+b/cd1K20abqnk
      l+/+AqkkGzdsvFrv/QKRyWTo7O2mRqWxggJnnCFCBS8fe5v6l+v5+N0PXVDORf/gAAIB2rAy
      3syWazfyt9/7NsdPHMdxHRxHYbThdx75Mjdv2owxZtL7xONxdExQGukH4I6S6gbsgkCWQGpJ
      4EbJjomsRAuDtqAYv7Rxgcm6oV3FrxdcY/Hb932Bu7feMSan5rLmAcwE0paEaY+28BQnjp2k
      1q1nYGAAP/DL3O4RxGIx1q5Zx6JFUdOUZ197hkx1N9Kamw2PciVOg6T7QD8rlq7EcZyrSmCa
      MMagtablVAvpdJqqdCVKKqyUy6l8J77SlPDZ03KAVTWLaG4a36LxfNDGsGP3TnwdYOUN+UKB
      I0Ot9Mocty3ZgF/0qHHSfOyOB0in01MmnXV3d/PyttfIWRPw+wWEFsRKinxFJPBDZfBcje8a
      dKixp+hBPJs4t9HT+T6fLbglSdyTeEIjNHCe/tYfBcz1O71YxLTFv33st7jtpvEJlR+KHcBo
      SFsyUNnFD/Z/BxQYH3TWsL5+E/ff/kD5uMHBQdo62nivdQeZql6UO7erToeGUwMn+L/+/j+z
      aP4S7tp6N01NTWU20lVMjNbWVv7zP/wNHX1dkLJZu2AFn33gE/zFD/4apSU1Ikk3Q/hC8/6h
      D9i4fsOMF1tz0zzqRBov9GisqCWfz3P/iq3sP3qQRx/5OF9vaEAIwXvvv0cun2Pl8hXlc0f3
      XW451cK2bdtYWNvMYMcRjIRiXI8p8ewUBYF1jsU9Mt5L5Pq5S3UAACAASURBVHCd6v3MRR9p
      AVi+IFFS1K1IYNUo/M4A40NbT46S89EugHcl77JqVJo/fOqb1FXX8N0f/BPFsMTnH/90mbDy
      oVMAECWOxepGCdYG8AbGBomfe/VZuivO4DbYqFmuODoRrLii+Y46Qi+kb6id72//Dktjq3js
      gccvyn/9UcfufXvoGOymENeU7AK72w6x+fgxti65gcULF/PqB2/R3XUABLxzYg8PnG5l8cKZ
      tcPMZrO4WARBQMpN8OB9D/LsG7+gtqIGpRTvvvce119/PRtu3FBeyHsP7ueVnW+wt+UQd16z
      mccffpTv/fiH7OjdT6A0OgmxvIis3GHbwg4kwhhKcc1Efh4pBOISxYWnEkizIqyMwfYFtbEY
      btLCSkqsSoVwoud2mm2MNqQGLTwxcezOGBO55mBc05wPC0Yr/ysR1fEKhjIZjh47yvzGeZQC
      b0xG+4dSAZwLYwxxd2xp5vnz59PndVyyrdnIfZSjkDWSoNtgCetq56cJYIzhhVd+SUvnafoG
      +vEsjdKQyEtEXFBRkca2bRbNX0jwXoAdSnxLc6bUy7/77n/i33/m91m1fPolsevq6ti6aQt7
      d/wzuwaP0vN8hqfueISsX+Df/9WfQTHk99O/zbJly+js6uT9A3v47ltPkzclEPCzA6+x7cC7
      dOf6sY0grm1CNIEJiRUlxaSB0BArKApucNbiPwe+bXBKEqHNlM3qR+NCrMvJel9P9f1UkBq0
      ACsUxI3CtSSJlI2VkDhNE7fNBDChwRQN1aFNzg3wLB29GwEihHRoES8qulMeRlzZlvRkuJJd
      PwDHhs7wFy/8vzSoSp7c9CArly3n/T276M8OsqBp/qVRAHOtJYUQnM6eKjfhALh9453sf/YD
      SF8eKp6zQHKqcJRtO7axYf2GcsLTVURoPXWK546/GXXUShhUKHACyZe2PslNG2+i9XQr85vn
      843HvsC/+4c/Z4ACCBgMcuz44F1WLltx3veptSabzSKEwHIs3JJkIF4gLHTy4ruv837vYYrK
      w4pLvvPDfySZSLJr6BgFIoE0YpwOmDwDJg/lZOCzcyqZkyQGNNoS5BMhegqftxCCQiIklVFk
      0xpzHq/kyPNdrGA89z2Nvt55r60N86wEIiawHYnTaCPd6WkvYQtq1yQRCirafIpDIX26hBFQ
      XxEjvThG9kQRihf8aFcE5kKuzZqrTkSNjTwd8LNtL/LpdIqnX/85R7w26p3KyRXAbGrjkSDJ
      XDbCLpTy5QzdYrGI4zjYlkNIYU7uNxWEENgpi2LB4+2u19n97Ls8svlxli9ffsnHciXCGEN/
      ZrDsJBFCoC0oKY1lWyiliMXidHV30d7ZQaDDsv9cacHeA/vQj+oJmTpaa44dO0Z3bzctp1vZ
      cXQ3eb9AQIhnhViBYMgqsq1nb/mcQGr2lU6RzLvk45MUb5tkLfq2AQs8d3rzWkvIJkNieUkh
      NTEj6FIYCtMxyoQQSCPQRU3l6iTCGn/OpNb/8DEqHf1wsRUu5kSJei+Ok1I48yyEFKRXxhEt
      ks7BPIH6cO0CRnb3s+ZS8wS2EdhK4jiKfD4kFxs2Ni5ySvSRpWQcfvTGs3QWejE2dAWDEyuA
      0ZZHNLbZUwRzpgByBX74wn9jafMyVi9ew2BmENd2yV8GBTCCWL1DrN7Bz/l093ZfVQDDkFLy
      2ac+RfF7BXbmjhAMV+Q0Alq6TgNwvOUEf/Xjv8dzNIE4G0QMLMPRQhu7du9i1cpV47Kvd+/Z
      zZmudr79q3/BEwHJgsVQcrgEyBRpIBpzQZU7fUsTywuYZpfOeE5GjeVdxi3q8wnTyY6bizU1
      co9QGgrZEOd4icSq2EXdK77EHS/IBKSXxtCHNe2FIsiJ38OVphRGWs7ORj8TYwwNtkvlwjgy
      KRB2ZDBX5wy5M0V8T9MblC6KPWYEZG2PrN85Zh2M2cudS2eard6ll+LHk1UwL9lMy8mTVFZW
      0tjQyNLq5YT+5WcgFLs9XPsqG2g0lFL05gZw/bOzWhrBknlRgLcimWLtolUUVICvxv6GgdD8
      2dN/wx/8n38yrhLrtg92smfvB9goLE/gyem5AMXZcOSMoLWevOn8BAiURscEnj13a2J0U6Tz
      7SbO933aUzRsSuEunV5F1illxiS3MsaQWuiSCD4c8bIRyz8Mw1mRbRVFi8rmGKpKIh1Z/k1k
      UpBaGaNqbZxa250TOXrBb3y6EwzOTgohxJwFRa16QYd3hicefgopJYODg1Qnagmzl18BWElF
      Z3fX5R7GFYNsNsuzLzzHCbrJuZF1ngodFlLLTddFTJyqqiq6Cv1jzhuZa4FlKNkh/d4QOjz7
      ++bzeXa3HuBYZwsl7UfN36dpNQW2wfJnpgKMMSSKiuI0+00bY9AYnIIgMSRIZARu7vz3PN86
      m8lanA7K19EGicQEZtIcmtkyEqUrqalyYbicxmxddzoQOgp0T+vYYS/GbHYyHIqFDJwoTZgp
      PiIz0/NdEnOQQDJpDGAyP9/I56ODFNNx7Wit55QRI6Sgr7KTn/7qaR679UlOnTrFka6D2NWX
      t1uXMYZKati0cdOccLA/jMjmsuw/fBChBDaSjU1r+PqjnyeVTJFKpdi+cwf/98++Sx9ZENHi
      PJc14xqLT2x6kPr6eiCaX8889yxd3gBeIsQtCuxAkk1NcwcgRFS+YQYQQuBbBjcPSkuUEXgE
      CCXxLUNoR1cUIlrbibxCCgk25GMBCHCKAsuH0JmeIriQY1QgMMIght/juUrx3PU78v+JoqRu
      cQyZPP+6vWhhLSA+3yG5r0TWvoTEDW2os2PEEoru3gKeNGhlJmRyzRWZRWqI1cgp/fxWpSJt
      2xTM9GuiTQdjMoEne8DRk+pirI25FoBCCYbkAP4ZQz7Ise/YXpwmecmFrgkNXn8AAwrZ7aAH
      4UzrGdatXneVFgokk0ksJHHP4uFNd/Olxz5DVWUVrutGTd2TKVbUL2JBop7cQBa7KMjKsf75
      +mKSO2+8hcWLFhMEAS+/+jIv/vKXlPwSGIMMI1bOTDJRpRYgxLQpmgAiNMQCm1wqxIsZQlcQ
      WqBCcD2J4wnsksD2BK6xGEoF+LYuL3bHk2hJxAia7WlqonE0peJU2g5V1S6uJ3BDSQmNnkjh
      jXwkogB3OKCRBbArVLlR0lxBWAKrJMgUfWQYGXVznR9QEdrUX5PEqbWorHFJSYuYLzEl8KWe
      lNI7azBQr1wqVsTPu8szOcNg0Z/VeTItGuhMBPf5dgNzva1TjmJ35m2EkcTXzv2knQhhh+Du
      BQ+zePFiXt35Ei0NR6gpLL8q/IchhOC+e+/jvnvvm/D76qoqUskUe04cwDM+vXbUzk2FAi2j
      +TPgFOnN9PPWju28tP01dvUehoSm5BpEUZMsKUxyemvFGIMKBMoHZSR5Nf0SzqENvjfWYjUS
      /Bj4w0XmRlDSfvn5y5/Fo+xhJ8ukrKCZYPT6qvAsaptjOA02QkUXdocTtNxTRXq7ihF7yUBF
      YCGUIBZXZPI+OStEABkroNQXEm+yUdbc76ZjzTZV3TbpeoehLo8B18fWglioyFsBgZyeLDLG
      IIxAmOHd4ySnpJNnaa0iJojNd6K/0x7Fnuycl+1wAkHFEndaz2RXKew+ge/Mngyddh7A+ZTA
      TLZHc6oEBNiVly+/rdjlc+fi+7l+3fUcPX6UE8ERkoMVrN08u/2OP8oIgoAfvvoMezLH2VC9
      iiX1CxHaUGtX0LiwmcaqOmpragl8nz/+3n+CwCA9QyE9PEddifQUljbnXcCWL3CKEq0M+XiI
      FRpSQ5JSzAxb6lMvTCNA65BJw2mjTp8oHmEklBIGNwv4GmMLjDYIObNddtk1qyMlUh041C6M
      Y9Wr8XkAUpBaHMPWklAZQs+QXhEr3zfR75A97SFVZJW7dQqZuDTGi3QkdasTyJTEqVKke22s
      lMKut8geLnLGmwarz0DSs6itcZGWINvlEWjDkBugz3mMfD4gGRqkGvuO7BqLRJfFkIpiVMYY
      HC96X3qWxIsxhgrLwaqZ3gWtKkW149DF7LmBxtx5RMhfKF3zsgv/OUKY09Tlm1FGIYioX1ob
      bMvCEx6d/hls41BhV/LImvtYuGAhxhg+OLkLu0rSGDbT1Nh0uR/jiocxhjAM+cG//ogqJ8Vv
      3vQJbli3nkULF45zQ2qtef2tNzESPFejLEGqX+LHDKWYiRq0aFEu0zARbE9geZBLhcPXlwQ2
      5OyQVNbCzQtCGwqJcEJFYIxBFwO0e/ESwYtDrGQhSlF5BF9pQodpCZvRcbkq3yKUBm0MVu14
      4T8a7tKzzDQhRHmXYNdYVFWpsvK61C5UlY5+NKvKwqo6+wISixyq9vtk7PGCHIYrAviKmpRL
      cqWDjEXu39hCJwpkf5BjAB8rEPh21NHPCzX4Bs5RADIuaLwmSexEEa8UkkxZJBY6GB+Kgz7d
      mWKU2TyFh8EYQzqwcJRkIIxcN0aejWcJA84MapQJIYhXWqg+j1DNEjX/mQM/MqeLLWNuMjL4
      iQYwFT6Mwv18CD3NWnMjW6+/FSFEJKCe+T4yDSvqr2HdqmtxXRfLsrAsq6xAe3p7+N6736aQ
      LRAMaNbV3sDWLVvpH+hn5YqVF1TW+KOOQqFAqVTC8z3qauuQUpbZIPv27yMwITdedwPdPT38
      zT//Pbs6D+GJsGywqCDyqXsExH0Lz9F48SluaCCeFxSSE/vCDVFyjutJ8nGNVmaMcSR9g6Ul
      /nlKPc1IgA7f1/IFKhCI0BC4katp9G5i9I58ZDyuJ1m4JI1wwB8McedPXqbhwwrta7r35BiU
      Pq4nKSR01Nxcg+tL5i1JYtdZEz53mAsJ+kNETBBkNIV8QHqei10zuaI0etiNJ8fKxqA/JNNa
      oksUJzxXhFAlLOpWppAxQdAXYjxDqTsgE/gUTUBdOkZ6SWzamdUAfr9P+7E8BSvADMdILhgG
      xDP7f2RaiyfPDvw8rpwL2ZZOlLiiQ03v/gz111ZdFj/9+WCMQQ+A6nN5/JZP4Hs+A0P91FbX
      kUqmeOX9X9IydJy0qOSxrU9RX1c/5vyXXv8lH+idWAlJkA/J7C9ihTaJqhg3XrOJOzffdXke
      7EOIEydO8MH+vTz9zgvcf+MddPR08ssz70x6vFOKGECh1nix4S37JFPMzYPnGIwlxgRARyA9
      Q6woEVJS0h62sMAYLGlhQk22Qo85ftYrbWpIDUqGqsbuQiZanynfovnaFNL5aMeagmxIMBgi
      JHSezmPZguq6OCopsKsmFv4T4WJJKWE2pO94AT8ICbXBx+AgibuKRJVDbJ5dzp4GCH1N2BVi
      1Si0Z1AV5yeonCuPjTEEAyHBkMYvhHTni/jnVp+dAaxse4G+zsykimTSS4soecaYSQJXpnzY
      xF8Z0CVNsb9ErNrF6Im5xjo0DB7I4TgOVnXUL1jF5naCG2Ow+mLctuAespVZntv1E7LOINIV
      cEZyjbqOx+5+ksHBAVrbW8c9Y3tHO7vPvIe9VKIchXIUNTdZYMDLeAz0D4ypW3QV46G1ZnBw
      kMMnjnLdmnV4vod5/0X+cdez0QFTrBvPNXhuiAjBKYGTUwxVThzYLcUNTkEShgaJwCoBCnxl
      sEOJRJBLh0CI1IqCNMPsmoBUzkKYmSWCzRQaE7FRpoFQhxAAH/GcQyulsFIK77RP07IkekhP
      uduZzKV9scpapRR11yUxgcEEkbLGZkIFbIwh6Aqw6y2kI5FT7UwnGN/IMwghsKst7GqIGYM6
      I+lpL1CIzTwvwQolVqo5Tm1N5YxPngrnFps6FyPf6UAzeDJLvruEDjRujU2qMYEJI2WgA0Pm
      vSLLqq/hgfseIDOU4c0Dr5Fp7J7TrW3YC9cmr+ed49sYSHXjzLNxdCTATcxQyOSRUlJTU0tN
      Te24Z3vltVcIUx7x2NlfWdnRpAhyIYdPH2Jf81Kuv279nD3DhxnGGJ7+2TP8ZNcvGTQFlr3R
      TCY7xECQnVHqolFQihlkONXiECgjUH5E/8yno+zORE4RulBwwuGyxSCMIJW3CE2IGqaZniv8
      jTG4pYjOGDhRPAIuXNgIGPZPn8fKM4a0cqYsd/FRgQkNfluAsMGqsQj8EJ3XyMSlp3wLEZVu
      OO97N2B8Ex17Efc6Nz8rMd+hciik4BfPGjgGRGBwQknJndxAr7XTl7cctLQk1SsqovEYQ6nf
      o+9wBjQExZC0rKQ5vpAb1t/A4OAgzc3N3KHu5pkd/4LnFonPn31TJyiEVAzUs0e+g5oHDjbF
      fg//pGFF80p0aNi66dZJJ1r/QD+5mn6StWMdwyPa20ooFC7dPd2zPvaPCoQQ2FJR9EoEVsCh
      wVPRFxew8VMeUd0dTETZOednixckRTeMXEAMl4QQglJck87ZeHZIrCSRARglyCaiBC4ThiSG
      JJaKXEdGRQFbWTIoJQldQyjBzRiMI/GnYfGdCxmA40vEdHb4QtAjPJxWi9Syj3b/CZ3ViKTA
      HmbP2E0WfndA0O1hVVqoy5z8ORHC/hBZKQkGQ1RC4rf5yLjEbpxYc8yEdm+7EoZbLijP0FSR
      IFZpM3SmRJeYmDGUEjH+6FPfGh8Enm1Mt8DV6M9Vd4yN9Tez9pp1WJZFLhfxwHO5HMViEaUU
      7xzfTm9t26yO1RhDfm+AqhGomiixbMRyNyH4bRo5ZPH1J36r3FTB8z2OHzvO6tWrAWhvb+P1
      va9GTBXPEEifoa4c/f19hAmfYrtPrMpBovi9r/0BqVRqVp/ho4IwDOnu7uYXb7zEWwd30qb7
      0dOShKOgDfGsxBISbQxJGSMnShGLy4oyZFUIuXiAPicQF+8zBEmBFUq0gpIz1gdv5wFL4NnR
      7kJqEVlcw/+O5wVeHLQ0Ufnnc2IF54MMoizhghOAJcfFySZaP8YYkp6Fi6DummSZTfNRQ9gf
      ggMqOfb5jDGEmRB8gVV39ru5yuCdCYw2BG0hMiHReY01T2GKhnAoxG4arwRmIjd1SeO3BxgD
      VoXCqlXowNB3KE+PHq8ApBb83r1f4r7b75n7HcBEgZaphL/TnmTzoltpqGsgl8vx/qF32bXv
      fb71+X/D/PnzKRaLtLe3syC5iLaBFtyq2dvz5tuLBK6hkPWgP+JAJ+pjxGtdhAWy1tAsFhAE
      QdmH75U8mpqayOVyhDpk3rxmPj3vc+Vraq3JZDJ89yffZvnCFdTf2MiLe5+jpqaSRCIxxWh+
      vaGUoqmpicfvf4Q7b7qVP//uf+G06J/2IjbG4BYFfgIKKkrUCooFnFDhO0AQlWkYqpiA6x8a
      hKPwXY3PiPtoeIcgBCIwWEJScHS5hJxRUTnrEeTjmkReUUyZqOFNGPULhoj+Z85echwqRJxF
      6QYq6lKc6D9Nu5hez24hBHk3JGcM1skiNesSCCnQWYMYADFPIDICU3XxCWeXEmE2JOgMEa5A
      pgQ6Y7Caxis3IQSqIooNqFCWaa1XAjtRSIG9IJoAqmY48SwZ7R79Hh+77sLlmHQlsaVny9Ea
      Yyi1+/T5pQlp0KsqF3LbTbdEY7lUTeGns6XxMyH+YMD+o/solYpsP/M6vakOtB2S68uTUEkO
      tRzgg1O7OXb4OLlcnljD7FHdlKsIQh8nblO1LE281iVzKkeiLtpSS1vgZX2O7zlJZWUFxhg8
      3yOdSvPctp/S0dPOioUrxwVvHMehpqKODdduJObGCIohSxtXsKh58ayM+6OMWCyG67q0d7Vz
      rPf0tN1AtidwUJQcjcEgTeTjt/2I1unFDIFtSBQUIhg2VDS4RYlblPgqJLTHz1shBPG8ohSb
      OvgrhMAZjgMIRFSbyHVYlVyA6g8pKn8Ml10awfL0fK6tX8G3HvsKKSvOzpa9tIf9Mw4yCxFl
      FicabOpNPZ+98bNsWr6ZZms+G5o3cqrjFCV7dmvKzCWCzhB7gY1MCIwPqkIi4xNPBCEEwgI9
      ZC5Z8tpMYIxBD2qCrpCgL+qbTAiqYqykvhCZNjpGUOjwyGh/nHFja8k3H/gcSxctAa6wlpBO
      pQWVYAUuZzg2zAqSJJpdTgaHOLTvA6yEAksQLA4oHiuSaxek55/tcXkx2l45ktKgT/XyivJn
      o9+fEIJiVRY9IPjJ808TWB6L65ezfOkyjvQcJDFQwQ3LO5g3b96Y60opWbV8FQCNjY082vj4
      BY/x1xHxeJyvPfVFvO+WeKX9XYJpuIIsX2CFAktFAV6lBTKEUGmyFWdbMuYsTSwLbqgIlcFz
      DYlQYkkFnonS7o3BLgkcrZAB+DEzYSLSuTDGoLwoN0HYkq/f+Wnu2nI73/5v32X7yd0ooegr
      DlKp42xZvYGvfOZLuE4U1+rr76Or0Ie+wLLRJRdWeKu4b8t9rL4mck+uYQ3GGLYf30aGuTf6
      ZgMmHM65sAQgkMNhvyl7BsgLK+091zDa4J3yUXGJvSBqiDMZFXU6TXcmO0eHmkIhGJfcBrC+
      cRWbrt9Q/vdlUQDn88lNWHrWGILTsG7lepSwOHL6MNcsW49tWRw9coigooTbYCGVJAwvrJpg
      6IegzzJ2APx8UP6RjDaU+n2ybhcVlRVUFOoohHneeuctSj2a2gVx3Ng0O4NcxYwQi8VYvWwl
      r7a/N63jiylDUPSJ5y2KCY0vQ6QWBOfwBlK4LK1voqW3jUAEOIUo8ze0ohyAZNZCBJogIcnF
      QxJZScmZbu3gKIhbSGnuXLKBe265E8uy+K0vfYNb9+3jRy//hN4gAwXDdavWYVsWvu8ThiEv
      7HyNkpr5PJYGanWKO1bfxBc/9XlsO3ItjGRZh2FId6Yb6Up0XI9xERhjIIzYKjIuL7vv3BiD
      zmpkavwubCKMfK6HQqxKe9z4J3qeiSodzzaMNqDB7/CxGizUqJ3JbLKWRuRUsctjiGDc9ykR
      47P3P1WeE3CZdwAzKTmh2yW3XHMH69evZ++BvQTzChxWe2j0FvDYlqfI5/O8ffJXFJszKKWm
      VALn3tMYQ7GvxODJHHVrq8aMT1qSzPEcAsGi9DJSAyGHOvcTNoaItRG3POvnuXXJbdx7z70f
      uczLKwlVlVW4eYGfPP+xEDF6vJgeLp4lOFdsJ0KbP//KH+N5Hv/L3/8lFUWHIaeE7UuUp1FG
      UXJChA1xT1KKaXzXRO0cE+cP6pbihlROkspIHr7pbizr7HLr7e+lI9ODLzXdyQLfe+FfePP9
      7QhP01rq5mSxc8qqpJOtnQZVxZ985Q9YvGjxmLn45s432X5sG2ExZKhniGXVy+nMdFBozKPR
      hL0hOm8QlkDFJF6Pj91sTdoHYC6htUb3GcJcGLVfdsGqnskFBGFfiLYFIsE4euj5FMjFKAJj
      DMYzCGe4DW5eE3QHGAF2nTVjt9R05YkONPnjHrEKi0yHR3BOcpgVCn730a+yesU1Yz+f0Wjm
      ANN56UExZOB0ntSSFAePH+ClQz+n5toKLOFwuuUkFRUVhGHIpiU383LPc9hpa9IFkmnNURrw
      kMPMihF2hRVXNG2sLY8n9DTKkSRrE6Tba/nUJz7N7oPvs8u8Q9PyWryMj9+hWRpfyc1330JD
      fcNV4T/HyOSGKMambxUbbQgn4V0LISiogK6ebjbccCNPbn2II0eO8M7QIayiIB8HT4bYvojq
      6A/3s/btiFoqvcjaCidhIgshMDbkKg3rq5ezaOGiMd/fedsdJBNJ/vSnf01CuDx8231cu3wN
      bizGM6/+nLYDPRSkP+Z6E95j1BxXRnD/+ttZsnhJ+bPW1lY6OjrYeegdOlMdGNcgSoIW7ySm
      KtoBBMcDrCYbu+FsoFtpg38mQKTCMfV45hrGGPwTAapW4iyaODB6vioFdpOFCQ1hPsTkBGFf
      AArsRqscGJ4KF7qOjTHokiFo8xFEfR+EA/aiuS3JoUua7r05+m0fKycI5dj3o7Tgd+//Crds
      vHncuZddAUwHQgoqFiZYtmQZP3rz+9RcW1F+oa7tIqVEa83pnlZwGGf9G2MIS5r+g0MkGl3q
      rq2a8gcxxtC5rZ/6ygY+88CXqbu3jldee4UD8n3cBhu3pYKtizawdvVa4vGp63hfxezBUhZ6
      Bq86UIZEEbQSrK5aTN4r0prvJJRRfSGlBbFYDNu2eerxJ9mxYwetP+ukTw1hiUgB+C6gDWpY
      AQghKCYMrqdw84Ihe3wymAqjMsSBZbiudgV/8pv/A44zXlM0z5vHN2/7NDffsImampryPPrG
      b3yJ+07dyT++8M/saN+LEdPzCcely3Urx1adjSfivLj7Rfrpw8QNSNC2hvpRDZ0siUyMrT4q
      pMBZYBMOhvg9AXbdpREVQgjsJRZBW4hVNbN1NdrVIyyBrJAwHM7TnsZr86MA+YK5y5bTfRp7
      oY20Zbky64UGdM/FVEZySUfeiHMtf2Hgk+sf5O5b7pjwmlcMC2iq76USNHgLWLnwGnae2o4c
      +VEDQ6wtze4T79OYbmJv9y6ojIS/9jXmtEWyv5rqQj2yzyZpp5CLwinv5fUGJDuquWfDfdx/
      +wPU1NRgWRb92T5a8ydJFNI8sfU3WLFsBbb90Su2dalhjKH19GmGcllsy6avP6J6uqME5kgL
      vn96/p85nZ+iteY5tXyMghorza2Lb+CPvvJvuH/znai8Zm/HkSiZS8CRY0dZUN1EY31D1F3M
      0+zuPkwipyjZEdPHAPGCwnOHKaMCtDBYHti+wgqjom3KCGQuROiIdeSWJNcvWM2WjZsnHG46
      nWblshUkEolxLorqqmpuXreRoZ5BjnW3InR0zynnLgGtJ06xtG4BtbVRhnoikWDVglW8c+Id
      wljkF5bxscJeD2pU5cQ+fxmX6GJk2WJFAUajwXg6ErRzUcdLRFz/0WOa8SXOZW8pgaqQhEMh
      Ki6ntRO4oPvaEPSEyLSccUnvMdeZJnUeonlc6gkoTlAyZEmikd/99Ddx3Yljk5dsBzCdwkuT
      uW20r1las4J4PI6r4wTkgYgZUFg4SFDQ9Pb3EoqzgY/8oYDFiUWkKlJRfoHlcsocm5JFGBRC
      1sVv5K477xnjrwW4cd0GxB7JmmvWlJPAruLikC/keIYCRQAAIABJREFU2b33A/7rc99FW1Dp
      pOnO91HpplnRsIiK+NkkuVKxxL7Th6OU+wmmUYVM8Nj6e/B9nz2nDnJksJVat5L/+TO/x9LF
      S8pz69YbbuZf33+RgojcK6f8bv7jj/+K/+D+IatXXsNjjzxKZU0Vz7/8Imqom+5EHrsosLTE
      0hJCoprw0qBtSdENkMiIZgoEKVkuERwTLtdds+6C308sFuPrT3wB64eGPd27GcwUKQYhIQbP
      mZjLfybbTTqdHvNZQ30DSxJLOKQPzjib2hiDVaMIeiMufvQhSEfglXyc+fa0lYAxhiATIm1R
      DjJPVDJGCBGNMwrdzBqEENiNFn6njz3LlVKNMZiSIWzXWA2XLgHPGIOQ4ChFla8YUqXIBWSg
      yanmd5742qTJpmEYXloX0IVW3wt9TbwyyqWvjtfSPawAAOyUhcFn54ntJNfY4EOpP0BYcLBz
      HzXNqYgWJgVqmEo2GYJOw0133zxO+ANYlsWmDZtmPParmBy79u7hf3vm7yhaAYTQV4h6AGe9
      EmdO94w92EAytEh4Ek/pqE+wEviuQRj4/NbH+Pj9DwNQKpXYc2Avi5sX0tDQEJ1uDO++9y6x
      WIx1dct5t/dg2XWTNSW279nJNStWIYTg2lVrwdO88as3yGaOIYygv8ojMSQJLbCFpORGLiEj
      IZSGs05HUR7vPdds4babb7modxSLxfjmF7/Bex+8x7N7fkq/7sOEkGkr0lsqYYeSQBkCNexu
      kGJckUEhBI/d/jg/fLVIq9dKmAwmzzQNDSIr0Gl91kUkBFat4tysIlkweC3+mL4CY65lDGG/
      Rhc0qkYRZgOkUeiSJugOEdYwXdMItBfFI1S1QtoCYjNLVpuuXJG2RDgSvyNASECIs/8VgASZ
      kqCmvua5hmqQCQmyAe4iZ1Z3F1Na/tqQ7EzRX+ynkgoeuOUeXtz1Bh1eHzcsXMOXH/0sjfUN
      k163pbXl0rmARjBTBTCyzWzSC2lqbOKdI9sJ0qOSWAwMtGZJLnJpyCyiNjOPZL4SS9jIZSFW
      UiHV9Laqsttl87otEyqAq5h91FRV8/6u9+kOBs8/LwT4tsa3I1cLVlR6IVaQCN+wqnkp166O
      /N+WZTG/qXnMTu1nLz3P9195mgduvptbbtxMy5HjdJcGokbwAlp727iueRV1tXUkEgkWLlzI
      1i1bWdu0gtaWUwzls8gQvJhGGEE6a1FSIdqdeNwxbL589yfLCuhiIISgubGZRreRXZ27kGlB
      rM4mLW0qmh0qbJviYECgDCUT0Hm6nTs23jLmnaZSKTavu5nWY610DnYi+yXa1UhLEg5oVFXU
      eyHenuC25tspDBYYKg4hYpO7MYQtMPmorPFECDMhpgh2g4Ue0OiswW6yUGmFValQaYWqUKgK
      iVWtsKoUJmvwTgY4C+xpM5BmKlNUUmJkxHgSFtFuY+QSBoK+kHAgRLpyXPG2kXITQXeIyUI4
      pAkHQ4xlcOqnvxua6lmmQ4wxxlA5WMUD1z9I0B3yuSc/w82bN3PfLXdx3413cO+WO0klJy8z
      MzQ0xN/94m8vrQKYzg81UealEIJMV5b8QIEWcQQZO3tMsdcn1pmikflsWLWJIgWO+vvRi4uo
      GTRaCAohJVPk6DsnWL50+aQ+s6uYPUgpeWv7W2R7M1iBiDJw7fNYfiJqragV+FaUuCUcxaOb
      72PBvPmTnvbme9vpzPXyxF0fo6KigntuvoMKHeP9k/swAjwd8OYHb/P2e+/Q19nDdWuuxbIs
      mpqauPPm2+g73c2B0mnSgxbaFWSTIa6volLNoxa9CqBWO6TjNp0dndx6jiCGqOXlm++8yZu7
      3+C1Xa/y0+3PYAqQiqfGxQNGwxjDO0ffJrAjC16lolLjKilJeAoxCCUr5MxQFxVFh1Urxmal
      G2PY/e5uPnPnZ3n45o/R3zpAR9COzmhkUrLaX8Mn7/kNli9bzvXL1tPb0kev6pny9zAFQ1jQ
      qOTZtWZCQ3AmwG8LsBsi6qNMSawqddY6nmgzHoDuNyhLourO70YZLSxnCulIpDv8Fxv+i0d/
      qkIi05KwLywrA1PUhEWN3+WjbIndaKEqFDItIyUWn7r72nRwvpwEXYiy2nWP5jrneh666WFW
      Ll/JbbfeSm1NTfRcUhKPxc47lkKxQCFTuPw7gKnYDeV/CyhYOdpNK1ZqrFCXloRQkHASHBzY
      S2eyFav6/MGj0NegDV5fgBmQiDabxfZy0IJ1a9eNSZa4irmBEIJt+9/lmN+BP5xcJRET9s6d
      CBLB0uQ8vnHPp9m68eYpf/O6ylqGuga46caNSBnNjxWLl5HSLgdOHkYL8ERAr59haDDDuoUr
      qaysjNwfloXvB7x5dCdWKMknQ9AG25fEfFVuLSkDSBQU6VqX1MoYeTtHtj2LK2Nks1mCIGBg
      cIDvvPAPvJ3ZTptuY1ANEMR9jvQf5u19byMLChEKKtIVSCnxfR+lFAMDAzz96tO0tLWgswbt
      a/AhzGjC7sgBFYspbBNlQA+qLq5fsH6cFbhu9TqqqqqwLItFDYs4deQUxcESoRdy77X3Mr95
      QfnY3FCWo11HMUWNtOWE8QORFPjtQWQpm+GiZ+1hxMDRgIJwUCNTE6/JEbdw2B8S9kX+c1Uv
      y8J9qr+5wojXQaWi3YmqUJjAICyJ02ijErPr45/O8xjPsDm+haX2MoxveHDLQ6RTaSorKy+4
      r8jQ4NDcVwMdjZlSm849Z6oOYzONL/QfHCLbUqDKraW+qp5HP/4oNTU1eL6HYztIeeXVEfko
      4n//zl/zUsuOqAZ/QZGPT83SGkFC23zhlie495a7zltR9cDBA/z8rZd4t3Uff/a1/5HFC8/W
      YNJGMzgwyN/9y3fZdno3noyEaYWIc9vyTXzyvsdobGjgh8/+mO+89xNiOYEKwFeawIpKPc9z
      aqhQCdYvXcuv9u4gvgjqknU0x+ajUBw+cphiVR4n4YI0lGKlyZ8xBOkpGkQDKSdNd6GLukQ9
      bfkz5OO5cvmAoDNABxqrysLr9HGabEw47N7QEUFijVzLZx/4HMnEWVdYGIbl9eJ5HoODg/iB
      TxiEJFPJiGqrdfnYzFAGgeCHv/oBfZW9Ew85q9H5yBVCaLDnOehiiM4ZrGoVjbcnxJ5vR+Mb
      zjhGQtAVYnyDqozcQh8WzGbWsBAC4xua/HnkTZ5M4qxBbozBFGCZWMbHtz6K4zhnG8PYNrW1
      tRekAIwx7Duw79LvAGaKSXcF5zluKhht0P2Cj295nIfue4ibN99c3nqP9PW9irlHsVjkn1/7
      KX3+EIKobMK5pRomhIFH1t3FZz7+ybKrbkSowfi54Hkef/vS98lLj1U1S1g2XAhr5Nh4PM7a
      pddQRZIPTh9EY7BQ6FLAjn3vsmbxKs60n2F320FUIPDj4MdgVXIBJjRsmreWr37iC6xZeQ3L
      Ghdx4oPjVFvVJNwE0khOh62YKoOOh4T2eRScBGMbslaWPtFLySnSL/oIHH9MUNZgkIGMat8b
      AT5Y1VF9GaEiqmpPoYdTu1tZvWL1GJdmJpOJei97HkopbNvGdaN8mnMNn5gbFeOTvuLo4JEo
      iHrO+KUjUEk5XH5aEPQECFdgChFDhZKAOKjKiEXlnwkIB0L0oEHEBG5z1MD9w4RZlREa1thr
      +eZjv4UoSo4MHC7vtuLZBA8tfohbrr+17JWQUpJIJKiqqkKpC3c9/eTNpz8ciWBwVuNeKJPI
      GENpwEdIQVAMSaZTrF61hnj8Ajp1fARgjMH3/QkTlC4V2js7aM10RVmaBRExWc4HA2uqlvCF
      Rz9VFlZHjh+lo7sT42m2btkyzn03v3k+9W4VHV4ftVUT1xSorq7m4/c/TCqd4v97+QdsWnQt
      v/O5b7Lrg91kh4a455Y7+cU7r9DPULnsc2VlJZ+77ynyhQJVVVW8/c4OBrMD5OfnaEnlaOFk
      NFcbKZeNHo2LKT1gxS28AZ/wlI+qVIS9AapSgUW5FEFlWMmXP/XlMXNcCEEikWBoaGjSa48k
      Vo7G2hVr2dv2AW3+mQm7WpkwUsBhNtphSCkIjUErg0oK3EqnnOVrLVCRwNdcUJOfy42Ltf5H
      /+4yr7h34b3ccdOdtHW28UrLS+CAPeQQC2N8/IZHWTBvwRgvR2Vl5UUnoGqtKerila8AJmt8
      MePrBIbBPQVUGtKLE6xJX/9rK/whokpmhjI0jKKJTdXGcy6w+8AHlGSUu+H6klz6/EXWBPDp
      2x4lHouXx7tjz7skEwmeeODRCc8peSWGSjnioU1TfeOk17Ysi3tvvYs9R/exo3Uvh48dYfPG
      m4BowTx0w13800hPYuD99oOsb1vN+muvx7Istmy+mede/DmyzUKvCCalA060q50oFjbRPC+f
      a0XJTQTgt/kYZfDavSizJyewF1pUqqqyZT/6fMuyykJ+tGE18l8hBFLKMZ8lEgm+eP+XeG3n
      q2zreQuRPmeXdcpHKoFVbYExmFLUnMQEEVNG9/tR3++0QMWHXRYfHo9PGRcj/Me4s4sGQsGW
      hi08dEdEX969fzeFXJFF3mK+8MgXqa2tJQgC8vk8hUIBrTWO4+A4zqys0Qq74spXALOBSHuC
      V/Sov7aCtWIDt224/XIP67JipM7+CDzPo/V0KzXVNRhjqBlmFcwVjDEcaTmG0oJQGYpuiBVK
      fDn1AjPAy7veZNOGjbz3/vusWb2azzz6ySkXZhiEfPH2J1mzag31dfWTHhcEAUopVsxbypHO
      ljEGgpSSp554klwux08Ov0rRCkh6Nq++/QZuIkYYhixfvpzbttyKlIJfZd+YkYC7kAUtlYBG
      gSyIKEnLEzjNNkFHgBmAJx95ckL/sJSSVCrF0NDQGCUAZxXARArJsizu3nwPy04t55ndP2Go
      IlOmPdrNNt5JD3fhKBfqSCJXQLQzKRr8jgAdaqS6/Kb/TOKP0zl+utcynuGheR+jMlHJTZtu
      Kl+7lC3ylS1fZc3qNRQKBYAxlHQhBL7vUygUyiVMLhSFYoHD/YfmTgFMltV7ORAWQ9pf7yNO
      Ej+nqVlUc5Xrz9hJmclk6GjvoLl5PuoSBcCfuv9RWn5whhN+F1ILwmnM52orySO33g/A9ddd
      h1LqvAH7RCLBg/c+AIxf1AODg/T0dNPU2MSx48fp6u7iX7c/z6fueJTlS5aNOdYYQz6XY0V6
      Pp393TRU1dEz0MuPX3yGP/6tP6JYLPLCCy9w/MxxdLMZQ1c+9zqTCZdzM2Inqlw78p2oEYRd
      Grv5bB9cIQRWs4V/NKC6qnpCxTJi4QMMZYfIZDKc6TpNIpZk3TXrJqYgjnIJLVywkK9Uf5WX
      332Jg/0HCFMh0o1q7xg/cj8ZbfA6PCQSZ6R3dwxUWuKd8COe/4fM73+hGPcbCPBM1ElQa11W
      0p944pNluTRCbNBa4/tR/GdwcJAde3cwUOxnceNiPn7PozM2HEqlEmfOnOFU+ymKyeLcBYHn
      mqo1E0hboo1mee1K8u0FHrz7ocvq+74SkUgkWLRoEbZloZRCa83OnTtpamqaE0aUEIJkIsmr
      779FrzeI5QmC8+QASCN4ZM0dPHjHfREPfgYBsInmo+d5/Nd/+nu+89aPee3dX/HCvjfx8iWe
      uPUh7rrljgmfOwhCerL9HMy1okPNPLeGlYuWE3o+tbW1rFyxEjR0ZDoI4uNrso8ezwjOV91y
      MuqjKRp0MSxTLEcfLxOKetNAfW39hMaO1pqTLSf50bYf8nbn25wIjnO85ziZjsGo7o+Jdokj
      vueRP601Wmssy2LZ/OUsTS2j5WQLpXiRYChAJVSZCmpVK8KMRsaihCoTDpdmdqKxX4kduybC
      bPL7IXLdnRw6wY6jb5MoJVkwbwHPv/I8qWQKow1KqbJS6O7uprKyklwux9O/fJqDzn76nX7a
      +s5w3bzrSSVTZQVxvszlUqlEX18fZzrO8GrLK5ScOVQAVxpypwvUqHrWr72BZUuXnf+EX3MI
      IWhqagKYM0psPp/nX159Fo+AZlmDciwKxpvw2KRw+cJNj/HAbfdO2EtZa00QBOWxlrwSuVyW
      fCGPZVnkcjl27XuPk6dOUFVRBUStOtcsvwZZMhzpOsmQLnD/tbfxsXsenPCZhRDMa2qisaqO
      1/dsx4Sadc2r+MKnPktvby8dHZ3DClNhhRatmdaoJPC5LpFR15vI/VI+1kSlHUxgCPpDwsGA
      sEdHmah9ITqrMYWIanluBqqwYX/nPvYd2sfC6kVUpM9W0DXG8PwrP+f5Qz8nWzGEiEVCybia
      Dt3B/u79HDx6gGV1y0nEE+Vxjh5rd08Xb+3axusnXiOTy+AN+uADHoQ9USE3lY4an6u0wu8O
      CPsC/K6AsC1EVIpxTd0/qphQMEeEKZYll/Hu4Xd5Y+B13jv+Ltv3byPTlWHNiiirPZlMRgaZ
      0bz13lvkK/JR3oQdUuwuct2K68jn89i2PeU63b5jO6dPn8ZyLF44/At6rSjB79fGD1K1Ms3p
      wy3c3nzH5R7KhwciEqxqjqJ1iUSCP/7s71IsFVm5fAXv793NXzz/dwRoUrgsTDeipEJJxYaV
      1/HUQ4+VF1MYhnR1d3Lq9CkGCn0M+QNoGeKaOFXxWs7kT+KrEsqS6H7FQKafeTfUUAo99v/i
      A+7d9CDVlTVUV1fzhcc/zf1b7+K5N16kIpmecsyWZdHcNI97lm7mcNtxbt28larKKnw/IJ/P
      0dfXRzKZpO1YG/HuBKmVCXqdXnCgLl+PEopuutHxEF3SEEKtriP//7P3nsGRZded5+8+l94g
      EzbhgUIBVV3etTdkN5umm02KoiSSEiVR1M6EQpqI3Y3Y2A+KUOjjbsxEKDZ2ZjdmQtJKI1GG
      0ogURU82Tfuurq6uLu9QBRQ8kEggfeZzdz88IAsoeBSqq9nsfwSiKjOfue+9+865x/2PW6JB
      a+B6+jpCCo/Hl4WWgapAjam4mkeM6GsxEJqXO27POB6bZ2KVZxSAKSb5i5f+nMP1R0glU+SL
      eeaKc1yavkg5Wlqxi1AFIgylYIm/fv2veLLtKTrbOqlP1i/b7qWzL3HDN4ioF+j1GppUsecd
      1LCCUG7z7ougQvl8BeEXHsdOUKJHNeyyg5WxvNTV++QpuO9uagO+O/Yd0ECRCi1aioH2PQx0
      D6zYNJ/Pk1ez4EpQvdX+dHYaKeUK8r/VXIxXJ64wW51l4tYEbuA2c9UvjQIw8xalSoXTp9+m
      ra1t4x0+RE343itomsZA/+0ORQ8dPcFjF04xMjPO//wb/56eru4V+0gpmZ+f58V3vk/RP0co
      4UeJK3jdo8GhQFrm8dcL/PgBKPnLGKqCaigEDT+xYoze7l3LjhuPxfnic5/H7/dvOO5wOMzv
      f+l3mZ6ZoVQsAvDM008zm5lFEV6O9uc++znePv02H3/243z3le9yefISz5/4NPv69zEyMsL/
      +fX/g6JRIOQP0dbaxvMPfZq/+fF/BwH6kkDq0hfZvrlANraw2he6QGtRqd4wUdapfi/487yU
      /xnMU6sRYEFmrOWKEorATTr8pPhjjl87wVPJjwBQLBY5d+kcw+YQIrg8XqHXLRcniwyZ/l0+
      CC13w+lSpzxUQY3fjl0sWhm/TEWYwieQRUmfvpuvfu731yzqqk/WE/SHMNXbFrLt2DiOs+x+
      VatVLl68yOHDh2vfnb98njPFMyjBlfPjl0YBSEcicSmbFVzX/aWaZL8o0DSNEw/sJz6q0dLU
      vKwiVdd15uYy/Pzsj5l300TaA0TESlcQrGJyK7dbBQDkyFAsFZdVyAohyOZym1IAALquk2pp
      IT2b5s1TJzm47wDRSBRN0zBNk+HhYZ568ikCgQC/+rFfXXaembkZgt1BAq4fWZScS5+j4Xwj
      83PzGKm1aYoVXdQ45pcGg41mg+pFE6NPRzFWn9dCrLT3N7PyFopgaGKIickJYtEYf/nDv6Dc
      WELExKq1DXdCViTUs0K4CyEwEjrmqIXQQPEpaAlP8S0Ktbu1DDabWntfIaE/PMBXn19b+IP3
      bgT1IPPM1b6zsGrvRu07ywIV3jj1BkPpIQIEGJwdRNyR8S5diZz6JVIA5SmTvQ0HaEzePTvj
      h7g3KBTy3CpfI77Xz7+8+neERAyTCnbJJWxEKYRm8aVUomsI/rXgmK6XMrkAEXaZmp6iZ0mW
      j2EYNDasnSK6GoQQGLrBu5fO8T9++C2QkscPPsRjjz7G0WNHCQZWH+fI1Aizl7NMZrM0B2I0
      HI0zNTeJL+pbVjtwpwB0rdWLIEUQRFCsS0O8KWG/WtaRKxmzxvj7s39HyAxRra9sOoVTCK8n
      ryxJlIhXV+A4DorweIWUqILh07HGbVxLIsNeBtF2sJFgf98Jfrwxtdpt/NbzX96QzuHixYvM
      lGeQhkSWQC/oPHH8iWWp3OnZNH/xoz9nWiz2k164Zr9AZiX4QfgFMgOd/m6KsvDLoQAqExYt
      /nZOHH2Qzs7O++Zz/BDr49L1i/gaVFRdIdAFLt4EVaVkbPAGEX8QITbnklq64ivOlok3ez4P
      u+rQYLajKTsz9WOxGF/6ld/wrBUhCAYCG6YY93f2I05+j7b2JPFUCGELett6mT2fwc7ZaE0r
      93eynn99teuzswuZQDvAQ3/nStmettHqVNyIQ57clo7lWl6MQ4l443ZdF/uWg2JIpC1B8agg
      jE691jxdbfIYQz8I7+hmriFnZjl/5RzHD55Yc/tiscjgjUHcnCQyF+Xw7iP0HOlB4NUFSCl5
      59w7/PDq95kX88gKyIykVWtlujyNu9shWoyTcBOousYD/Q+QiNbR3z/wwVYAruVSHrc4Vv8w
      T37iqQ/EpPogQkrJrdFhrmcv4W/TVqzWhBAEIgauvX6l8GrPd34iTyDsJxDzXDtORvBA7wGv
      /eMOYSMyujuxp38PX3z613ht6FVc0+VI6igNsUbGxCiuvbwewLVdrGmvqlhvWPm6CiGgKFE3
      6EK1XQoVtyzRm7YeBzLHTNyyREssL2TCAW1ByC/tl7uYKSQcd90Cp6Wur/fjqn4rEEJQCBX4
      x0v/QMQfZc/AnhXbLD63jz3zMVrOt9DX11frH33p0iUqlQo/feWnvHHxDRxsRM6Lddkpm3y+
      4NFqF+BjJz7GQ0cfrqV437p1y6sZuQ/X/Z5AupLG+XYee/BJmhqbPhT+7xG2SidRLBV56e2f
      kPFNEGg11nypVU3FNjfHFLoUvqBOYbZ8m0GxHv75lb/j0d1PcWj/4W1T6d4tnnn4GR499Ciu
      6xIMBvnrf/kr7LSN0aPXhJs1a+OUHXyNBso6vS20Jg1rxkJv3tk2h0IIj69ngdZ5s5BSghAY
      rRpKYLnVogQVlvYCcN0lncc0gdhkbO4XXfgvhQgITg+eZqB/YFWakGAwSLFYpGpWaxTlUkpM
      y+S/fu2/MhWZIBKJ0uHfzYX4efSgRtAM8qknP4Wm6szlMjxy/NHasRVFoaOjw6vnqGYtCrMl
      Qs2Be9Pg+T7AKtpEc0k+8dhzK1KkPsS9w9T0FKqiEggENtU3uVQq8f23/xUlZRHEt25BVCDm
      Y/zSDPHU1p5nIOYnPTRf+6waKm1H6nnlzItcGb1IV2MPpmvSkmhlV++uTSmEC5fPk55L05xs
      obend9tV5YtUE5lMhjO3zuCqLijgVl3MKQtpSowWfV3hD57gVDQVc9KjhV6r+ncrqAkL43Z7
      xM0KXWvGs1iEf6Uwwwd22kZr1JYJfwA1qmLPWGity5/BL6Kw3+r9vjxzEdM0127ermkc2H+g
      NteuX7/OhQsXmJgaR1UVssl5CuUEUTvKidYTPHniKfzrNIaRUpIv5FF/7fc+96czczMUJspI
      R6KHfrHpkIsjFR6KPMnzT75wT7p6TU1NEQqFfqHv0b2C3+dHVdVVC7VWw+vvvEq5cXWO+aXI
      ThSo5KpU8iaaT8UIbp4DRQhBMO5n7Pw04fogiqrg2C7ZiQKxPj+VWJZKKMdo6SZvn30LWVFo
      aUyteqxMJsP33vgWk74bVOM5Rgo3GLk8TsgXwefzbVsRvP7W65y7fA7V8CpnpelipAwUQ8Ge
      clACXgbPanOuZnEFBYqmYI3ZC7n4d68EAOysgxpVt1TZb0856K3ayuI04TWDd/MSK2+jRdTb
      2T4OVG5W0eLajjdcuR+4U2FudO8sYSFz0Nve6wXJ74Cmacu4qYrFIsePHyeXzjFSvoWiq3zh
      wS/ywkdfoK97N7q+vjW4WEmv+esMIk4Yu2DjKg7pi/OoukKwMYAvvvwg2ZsFr5OWBCOsEW7d
      WjbGvYZrupxofpSHjj18zwR0Q0PDh8J/DWiatmkhWCqVGCvdxJdY+166tsvE5TSuI4k2hUh0
      RAklts7gqvt1Uvsambg8S0NvnOlrGVr3NaD7bysSX1jHt0vn/K1T9BcHVrVgTl88BW1lDMXb
      LxD1UfbP8rPR71A4VWFf4xHaUu3U1dURDodXpBoXi0Vm0jPE43HisTjgpe2dGnoL6Ur0bg2B
      wJ5zsEYsUARqvYo77+JYDlpSX9Z6cSmEEIiAwGjVsaZsjNaVSnJbcQDpxdIUQ1lVCdSEnAvm
      lAVIVGMlRcfSz67pYjQtr1wVmkCJKOjJ2/PnF3Hlv4i1OJxgFZI5R2JPO/z0xk8IyzBPPP7E
      hs8plUohkbS2tUJO4Cv76Ozo3PT7J4RXCa8BGNkAn97/PBdvnud620WUIBSnK+THikj39sBV
      n0KiLwZAJWuSHSoQ7Qi9b1xHsqDQv2/PPRXQH9YP7Ayu3LiMSDqslYkshCA7WSRY56euNXrX
      z1TTVWzTpjRXJp6KLhP+SxFKGXzz9X+kKdBKe2Mn7a3tBBfqBQzVWMFVpBkqWr1KuVjmmjzD
      8MxFnCFQTI3WSCf9XXvxGT7OXTvDSHkQJQpyVLAneohytczg8HXGy2PLVvhu3sVo0xHawsli
      oLoq9qyDk3PQm26vrlfNb3dYE1tVAnqThj3t4AblMuG8FNa0jZtz0Rt0L99cY21OJwkCjxL6
      TiGpBzUqkxV89T6vBeUHFCsUm+IV/6lzKpmmD5oTAAAgAElEQVT5zKaO4bUptejq6qLxVBNP
      PvrktvjNNAALk0Q8wUdOPM34z0ex4kWibSFoW9uPG6jzoRoKc4O5mlLYSbiWl1bnlB2sgoPQ
      QFogDPDVGcvyumHhpuYVkonkjo/lQ+w8LNtEWaWxSO33qk05W6GuLbJjCl0zVPLTJVr2rJ0B
      pGgKwW7IuRO8nR/m9Cmd/Y1HSTW1MW2Or9m/ROIFqgN1PljoOTNr3+LFm9cRroIvqRKqX3hB
      Y3C98i5KWODrd9FnNdy62/5wrUnFmrYxWvSaIBWKlwXkVlyscRutUV1W9FW7RxpIS4K78L6s
      4gXdSqBe8SsIn7Mms6lb9sbt27U54WNl7GXMpUuFoZJUMIoG1piFklRqSkAxlHVJAt8LrGn5
      bGKfzWwri5IYcXb37SabzRKPxzfcR9M0IqEIzz7x7LK+HluBIl2wg1VmMjPouk5vbHctFW0j
      GCEdRVMw85Z3Ea7EKltYZXtTF+1aLq7tUpkzvbxg6RXtAGQvlyicMnk6+Tyf7f8Nnm5+js/t
      +SLPtrxAdCqJlXeQoxrm/O1zzd6aJ5v94BPbfRCQjNVjl1dfquami0xeSZPsjBGM71zTHkUT
      JDpi6P6NzWSheIFnf6vC+cpJvn3+64gWc02hWZor11JNb59PIdToJ9hsoOrL/dp21UHRFIyA
      TkSEYJHjqOw1R1eDqws9xa+gpzScaQendAeXvyupTpjIisQY9rHP2E9btd3j418HdxK9LYVT
      8nr23sncKaVEuhKn6C7L9FkNi/fMnnPAlMt6/y69n0J4fEF6h441aWON2dgzDvbc5uTJe4XN
      9BFYjUBvPbh5l5JW4Ac//sG63dqWwnEcXOlSn6wnlVo9brURtHixHtW4yU+v/4AHJg/zQO8+
      Lpw6A6nNDTzSHmL2Upa6ngj5cY+pTiig+hUiqfUzQebfKbGro4+Oum4kLrPZNNnZHJmmCTRV
      Q0WnuamZZHL5qr411crE5AT9j/RzbegqP771HdQ6gQw43BgdXLH9h7h/WGw+vjQgL6Xk3K3T
      +FKeG8auOkxeS2PbDrgSf9BH+4HmHR9LpDGEWba2vJ8vouOLrB949oUMrLKFGtk48cCxXabe
      ytLxVD1CEySaoswMzmFlLWQe9GbttvtnFQhFoLVqHhFcRaLGPZ+7NW1j1OkYRT9/9IX/QGuq
      lXw+z3/65n+kEF4pVO50B63mHhKqwE67SNvyKDUWrQdHgAJqUEUJbVyBLF2Jk3Pwda60FO60
      BOy8g1GnoyY9ReFkHaxRCyWhoAa33wPXKTgIv8CetNFT+pZc19uto9gslCaFYrFEvaHQ2Li5
      1bxpmihCobOzc9vn1Y7ve5DozRgvWz/m5OQrJOrqqA65+JISdYP0MwBVU2jYF2f+Zh49qBJO
      eYHh7FCBat5a8eK4louVtzFsP5978tcZ2D2wzFSSUnLh0nliHXGCweCqmTx1dXXU1Xl2dn/P
      AIVigTfKP6PxSB0nb77GwT2HPuT7f48xOTlJXV0dPp9v2cty+cplDN2gt7cX8Cbti2/9ALup
      gCIU5sfz5KdLtO5rQNHurd83GPMzMT5L4h5wARpBnVK2gn8TCkDVFPxNGvOjBRJdUUrZitdK
      0ZEorZvjwBFCoDdqOFkXZ8LFNV2woZo3kfHbKaZ+v5/HOh/n+5PfhVV02EYrVMWnoLdpKMYC
      m+cq47jTpXTnZ9dxsUYstKblRX53rv4Xf3NzLmrjbStNjakoQQV7ysbOOaj1ypZiBE7ZxZ1x
      EQHhHTuoYo/a6O0LN2STcn2zq/ntWiuaq/HQ4Yc2lb3oOJ71vBlX0XpQ/+AP/uBPI6EI5BVm
      45Okx2f58qd/h5lbs+TUuU2VlwshCMR9+CJGzfzxxQzmBnMEEr6appVSkr9cocvp53NP/jqp
      ltSKSSCEoKmxiVgsRjAY3FCQCyGYmprilnkD1VDIzxdoVFvWbf33IXYe2VyWSqXCGyffpFgs
      1l7ol155mUcfeZRcLse1wau8ef1lzIYsqu6t5CYuz9B5tAVFvZ1lcq9WWkIIZoey1LVFd/zY
      lXwVgEB0c2RywXofMxdz+CI6I5emcevdWmOXrUDxC9SoglanoiVVtJiKM++imioDvQOoqkpL
      QwtnLp6hopc3PN5q51cCAjvr4M66qLG1n1OtoOsORWCN2+jNK+sZ1tpfi6iY0xay4LmXhOLx
      HCkRj0PIHnEWklNkraLYrUiQEnPCQlYkQl+wXgo2MifRmlWUsHcMV7g4cy72vIO7wFN0vzP7
      pCXxzfr43LO/is/YWAEIIfjxiz8m4A8Qi20/Bqv+yZ/8yZ8O3xriwtg5ZJ1NqVKkt66f/b0H
      KAxVmC5PoG7g4/NGBHc2u/DXGWRvFPEnPcWQHy6zP3qEF557Yd0iha1idHSUm5lB9LCKHtHx
      FYJ0t/Xc94f6y4TMbIaGhgaam5oIBoIMj9yiNZVi964+5rPz/PO/fZ3x/DA2Fua8S3XOoZpx
      yGdKJLt2PolgLcyN5Ei0338FIBSBqin4Jus4se8hYsQZrY7cdbBTKAI1ppCdz9Lf1E8oFMIw
      DFrCKbITOQpWAUd1lgnxjRSvEF7zFrfkxQKWuk7WYty0ZmycWU/QLq7gVzvuat8JIdCiXk8B
      e8rGKbmeS6zqxUC0Bg1ZdqECTtrFHDORJYlddtBbNLAF9oyDOVlF1VS0JhUpbvvjFV0Bn0Qx
      FYRP4Jbd+96cJpyP8JtP/BapVGpDuWXbNhMTEzQ2NtLW1nZXck79kz/5kz+tSyQYmxsh72YR
      AbgxMshA01662rsZHh6m4ittK9VTURXK8xWMoIaiK+Sulvj4I5+8a7PlTgSDQc4PvYsSAUUR
      ZKdzHOk77lkc+Tzlchmfz/ehQriHiMVi6LqO3+8nFArRmkp5hSaaZ/b3de9moPMB+loG6GsZ
      YFdzP7uaBxgZvkVVLeEPG+/J85kbzb8vFACAagiatHYeefBRulu7OXfxHEW1xE7chqpW4cK5
      C+zr2k8wECRZl+TYnmN0h7u5OHgRS7dAgLQl6oxGoBzECljrKiBpuTgZBzW2urBcfH5O1kUo
      YDTrXrcy3/aK0oQuvPiGJnCyLghwZpxacxk1oqLWqVhlG82veRaUIbz9ggpOTqJ33HYlKYoC
      DtiTDhS99pRavYo1ZS/jLHpPIYGc4OP9n+DY4WMb3hcpJel0Gtd171r4g9dDg0g4wq889ms8
      GnmGyEwSM1LkX3/2LxiGwecf/wJd5d04lfWJuNZCJBVk7rpXQOav23615Hqoi9dxKH6cStpr
      lpA1Pc7ss+fO8sMf/ZDvfve7vP322zt+3g9xG2tNRMuysCwLbaHX8OLfYtFYIBZAURTGL81g
      W+sksO8AzLKFL/z+iQ1pPo10ZQopJYFAgBcOfwZR2aGDKzAfn+evf/RXFIvFWm+F3q5evvzw
      bzNg7yVVaWWgsodP9n+K3336K6jF1d9NKSV2wcbOOxvSUoBX1OXMu14PjlWI/bYqtNSAgtGi
      oyc09HYNO+tQHTGpDpmYtyyoLvRHnnexpmycWcerpWjWllk30gVr1EJv1DA6dbQGr5Wm0O8f
      sZysSjqKnTx8ZOPi1UqlQi6f43vf/x4tLS07smBS//iP//hPF/tJtjS1sL/3IDcvDzHJGG2+
      ThoaGtCkzsXpc2iBrZtJqq6i+RVywwUqhSp9jf33xD/f0pzixvANqr4SkWod+7o8xseBgQEM
      n4Fu6DvKAPkhNoaUkmKxWHu53j77FheG3uXG2LXaX5Ecie4IwaiPyaseLYQvdG+EdObWPNHG
      MEZg81QSm8V2LACAkl0g6tZTF6+job6BiZsTTLtTO5L3LgQoVRXm4NWzr7K7qx9d10kmkhze
      e5j+VD+PnHiUN0+/SbIuSSaTYU7Mr7BApC1xJl2Mdh01srYMqMUAdI9FFOSGfv8tX5Mi0MIq
      elxDjaue/x6BMADXkzd6i44SVrwahiUKwLW8QPlSC0a6Eifj3jcLQJQUPrb/WTo7ltPUO46z
      Qlm6rku5VKa1tZV4PL7M5TY/P7+MKmKzWKHOVVWlOdJKoMng3I13cV2XlqYW+tX9VKc2SChe
      A76YQXJPnPqOxLYLFjaCYRg8f+yzmDck9b4GNE1D13WmpqZoaGhAEQonT558X+UTf9BRqVRq
      2QoAmXIaY7ez7C854FEpaz6N1gcaKedMRs5N3hNroKEnQWYs+76aA8Gkj9PX3qyN6eMPfoJg
      cWMivc0iq2S5MHSBs/mzpGfTte+FEMTjcb75829yMv0muq7z1Rd+n9/q+S0+Fv84+9WDdFpd
      tFbbkOOg+lV8eT/avE6vuws9axDIBmivdpAorky71pq9YPTSmqKddvEJIVBUBS2hYk84GK0G
      TsHFHLO8OoIZexmTgT3loDUsp5pYDFDfD0hTEs1EaWpqQlEUrly/wuT0JLA644BhGNTX16/a
      02S7bvUVak9KycxEGrve4VrpIrduHaKrq4tPPvEc0dfivJV+GV9ye7SzdbKeRCKxrYFu6vjx
      Or7y7L8jEPTcCo7j8N2Xvs2h/iPs2b2HoeEhJicnaW5u/jAecI/hOA6Vyur+jLXufX6mRH6m
      SDDmZ/LyDLHWCOG64I49KyEEvqDBzI056tqi6L77z4YuhKASy3Fj6Aa93b00NTbRGeziojy/
      I9ct/S430zfxVXzEojFM08QwDBzH4TsvfZvXZl7BnDa5OnaVvl19HD50xNtvISVbSkmhUCBf
      zNOQbEAiMXSDSqVSc+WdevcU33j1G1htnhUkHelVIYcEMufCag3r1xrvKi6jjRS2NWHj6zNA
      BV+PRynuOi7WlIVaVBCRhWNIlsUynXkXERar9sq915Bzklatja9+5feJxWKcvXSWr73zNzzb
      8XHvPktJqVzCtmzm5+fp7u5edz5st06h5gJahBCCvt4+mFWZzE8wOHSd+lA9iboE7e3tVKdt
      ppxxlHUKVVYfILTRza7Ovi0PcrMQQuD3+9FUrfY5aIQ4d/YsBw4cJBKOcOPmDeridRSLxW2Z
      TB9icyiVSstW/wCDo9dQk+6aE9Wq2AhF0NJfT6QhRGGmRD7tKYSd4psKxv1eIG14HiT4dygm
      sF0XEIDmVxkZuUVHoge/308ynGTw5iAlUbzr6xZCICICu+DgZB1OXniTc5fOc/Ldk5zOvI0r
      PF/9hDtGs95CKBiqMUkKIVAUBb/fX+t3rGmeX13XdTRNQ1EUWptbSY+lGZkawUpbXkeqious
      SrQ6LwFkM8Jpu5aZElKwJxwvYKwspIXOu8iSR6thZ7xrV4PLs5HcqsRO27h5FzX63qWCSlPS
      yy5+54XfJRaLUS6X+YsX/5yyW+HTR18gHA5j2RZnzpyhs7OT+vr6Dce23fTpFQoAPDdQR2sH
      XXU9DM5fIZvLsrf7AYQQdLZ1UZ4ymbbG161WXHHRtktK7aSrtWvLg9wMXNfFcRxKpRJSSlTV
      yzNPJpJEI1EaGhqoVqtMTU5RKBRq1XMfWgI7D8uyKJdv55wv+ihvTF7D17h2JaeUkuJchUiD
      R7cdjPvRNJWp6xn0oL4jK/ZFK8AfMRh5dwrHclB1Bc3wVqlmySJ9c65Gc7LZ+XE3CkAIQTFX
      ojc5QDAYJB6Lc6T7CNeuXCOvbq0N41rHFxEYHL5OJjrLtDLFrJZGBIQXFG3TwAfvjp7h1KVT
      zE6n2d3Rv2niQyEEu7p3kTJSXL11BdHmdfhSY+qmC7buxi2nqApO3kGNLCgAiVclbbqouoo9
      56DVaSuEvNC89FZZkihhsa6ylVLiFB2Efnd1Ktq8zonIg3z+U58nFo0xOTXJa6+/xhXlEo1u
      E08fe8ZTrqpGR3vHhrTOsH3hD2sogEWEQ2HCRFBQ6Uh11E7W0dxJcbLMjD25aSXgmC67QgO0
      NG2Ps+JOSCmpVCu8euoVfvrWi7x5+g3OjrzDm5df461TJ3Erkkg4gmEYNWqIUChEW1sb4+Pj
      2LaNaZofcvvvMBZdBktf6ImJcV66/GMifSs5cZZC0RTyMyWijbd94JpPI1wfZG4kRyVfJRC9
      u/oR6UoyI1lyk0U6Djaj6Sql+QrZiQJzYzny0yWS3XHmR3PkJosEoj7UTVQo340CcF0XRRfo
      xSDNDV52h2EYGI7BuclzoG6ty9pqEEKghlWqwyZO3kVWwK24SFuiLwZAdTANk9HyKJmxOfb2
      7F2Vm3416JpOKpWiNdHG9RvXceddXOmumgK6FHcbj6ndE1ciywucRS5ezUJUIMve4nO1RjmL
      GUDCJzBvWTVKDSk9Mj2n5OKWXJyKiz3roLjCsxiKclNFe27WRTqgOAp62aDOrOPJ/qf41Ec+
      hd/vzROf4aNQLHB+/hwHYgfZt3v/PS+IXIoNl1T9uwbov+M7RVF44vBT3HpxiHLT5sjXFFVg
      2uZ2xrgqXNfl6z/8e7JijsMtx7HKNm/efAW9XiW0y8/rEz/jxb/5EalwO09/5Gm6u7sBmJub
      48SJE7z22mu0tbUxODjIrl27dmxcv+yoVqsrXD/FUpFgStuQhE1RBHZ1ZaKBoio09SUpZsqM
      np+iub9+W9ZAtWgyfT1DPBUh2eEFzTSfSrDOTyVvYps2+ZkigYiPQL8Pq2IxdX0WRQia+us3
      VARm2aKc31oe51LahHcyr1M5VeHBow+jKAq7u3fjO+OjauxMbqhQBf4er8rUNV3csgslcB25
      nF1XhdPZUxy5dpiB/pV9atdDV3sXTW81c8sYRoQXslRsEBmQDfeGT0eWJEIXuFmJdCTuiKRb
      9DDiG8acthAb+PgVn1cf4FY8mgi34GKOW6ghdSGTCIxWT4GoUsUcMjd0zUkpcdOSpJnkmY8+
      w57+PcsydxZhGAZ7B/YSO11HX/9uXNd9T9uUbsumzufzOI7D8a6HeXHmO+jhjQesGArXJi/z
      EA9v+jyu6zI+Mc7Y1CghX5hEIkGqxbMgrl69Sm/jbjpbO/m3732LB/r38ezB5xgYGODNd19n
      RB+i1Fsip83wjZ//M59Tfo2O9g7q6+sBePhhL+92PjvPqVNvUSqXOXH8RE0zf4itQ0pJJpPB
      su4kXBObzupx1tkulAgQiPuZuDRDMO4nntocVbSUkqlrs0hH0rqvEUVdKcj9EQOr4nETLUL3
      67Q+0IhZthk7P40R1GjqS656TtVQyN8sIeTdEYydzr1O860Wurt6MC0TeyMqz21CMRQUQ0Fa
      NrLiwh2VsBE7Qltb+5aPG/AHePzY43zt9FAtx1BmJG2RDsYY2VlSNQlqQaXD7GImPUNbUxud
      8U4SPQn2Duzlz/7hzxivjGHs3jjLx+j0aKhtwwELtLiGU3TQEsvjBkIItIRG9aaJaqi0RlpJ
      yxkc3UEaErKCpJGkwdfIRz77EXb17qrttxZCoRB/9Kt/dF9ikttSAOFwGNtenJibN+Hm1DTp
      dLomhNfDW++e5M3hV3EjFmpEwc25hG/V8eWGr6BpGnv23F6Z/O6Xv+Kxhy4UGX30kWeYm5vj
      5tBNXh3+GcoDDt8a+jrijMaJjoc5fvBBFEXhnTPv4EqXo0ePMT8//6Er6C6Rnk3ztX/7a+q6
      wsu+l0CsbXPd4zZ6BooiSO1tIDdVZObmHI0962eVlXMVZm7M0dCdwB9dv9pY83k+ZLNiYSw0
      jPFiBjrtB5uo5E1Gz04RiPlIdMTu8JELYi1hGnvvLstNSsm7F87Q3dVDPBanM9zJDQbv6pjr
      wS24aMnlAlKpKnz20OcIh8Jr7LU2hBDs69/H72hf4e/f+hpVy+RQ22FC/iCj87d2lNdflAVf
      efCr9PX24TjOCn/5I72P8I3Sv6yS7H7ngTxOJb1TxxzzKL8VXSCSKm7RxSk5qGHPGgDQHJ2w
      jPBbH/syvT29XB+8zt/+7L/TG+3jC1/6Qi1Avng/NoPF7MhyufyeKoJ1YwBrQQivn+TJs2+Q
      9c9umsVR+CT2jKSnvXfd7RzH4dtvfxPRbqMukEE5pktTuZ2BvoEVwSld11FVddn3i9lAUeJo
      WR+zchqjRWG0cIurl66i2Qa9Pb0kE0l8Ph+BQOCeVCn/MsHQDWKhOuZ9U0RTQYIJX+1vM350
      gGKmTKRx/biMEAJ/2CA/XaJcqKD7tFUDtrnpApWcSVNfEiOwuWBaMO5n+lqGSMPy9FMhBLpP
      I9oUQjqSqauzuI7EF/bSDisFE8dyt9WycsUYKnF2dfWhKArN0WbOD57D0qxl2+wEXMtFll20
      mDfvpZTECjEaK0088+gzd8Wom6xLMtC4h8f7H+fY/mPks3nOZ86BspIFdLs+77hbx8eOfIyA
      P1BL+liKVEuKm5dvksnMIiJrH19KiZ1xsKds1IiC0Wp4JHQ+Aa5HSWGNeY1sBIL9gf383ue/
      SmuqFVVViUVjvHPxHQ7uPkhvV29tLFu9HiklI6MjNabj9wJ3JfFSTa0MZa9sentFU7iUf5fd
      I/10tK/NYT05OYkZKKNz2ywNzsZ4/pPPr+sfW/Sn5nJe5kRjYyMNDQ28/HqJurlGjGkdTdEJ
      hyMEAwFm0tP868++QVuqHdXVKIo8rdE2jh94kGBg5/LPf1mg6zp10TqKVyv4Y9sTHkIRuLa7
      brB4Ec39SQqzZWZuzKEZKk19XrDfdVzmJ/K4tqS+a+sFMoq6PjFauD5IKBEgO1Vg9N1Jyrkq
      wboADds412oou4Xa/9tT7fzh0/+Bf3zpHxhWhu56BS2lxK1KnDkHWXFXFEGd6HiIZx595q4X
      Q0IIWppaap+Hpm+uuxLfUjDYFDTTzBee+CLRyNq8ToZh8BvP/Qbf+LdvcDl9EdGw8uZZ017a
      qhDg6zCoDFZRQgpqwBPiakTFyTsIBDjQrfTwmY99ttbTuVwp888v/jNFt8gr116mr6uPluaW
      FefZDKSUNDU2bWvf7eKunvLBgUPkTmc5O/U2WuPmNJ4aF/zw/Pf47abfW2GySSmpVqu8fvll
      1Njt2SJdj/Z1o7S0YrGIbduEQqGaohBC8NhDj/GI+0hNM0spsW0by7JoTbQzlRgmfWmehn11
      zFlTvPtPZ3ji8FMc3Hfowx7AW4RlmxjBu5hWEmzL2ZQCAAgnA/gjBsOnx7GqNmbRwgjqhBJB
      6rsiWz69XbXRNhFgFoog3hIh1hxm8I1R2vY37tiCoepWvMwgxbNqmhqb+Pwjv8b/9dM/ww5u
      PiawmM2CC07VwS142T/CJ9DqVJQlfZGlBCyBKtR7YgmHfRFkDsRdHjpQDfDCwGc5tHdzPT8a
      Gxt59qPPcvWfriDrl9eguLYLltePFzxZYaS8WIC6y5t/i9aBmvACxQ/ufoi62O0V+g9f+wHv
      mu9AEgKVQE0xbAfvnn2XVEuKUGjnKsE3wl09DlVVeer4R9mfOcg/n/x77Pryhu4gIQRmU4H/
      9sP/TF98D48cfIzRsVHG02NMVyaZHplG2+/UjuM6LplTBU70P7BhdDwcXumzvHHzBkNjN0nG
      6jmw70BtDD879RPGpkcZGxlHKbnoIY3KrIliKJiJKj+69l0kkgN7D3Lx0kUqlTK7evuIxWK1
      cdzrLkG/iOjs6OKtm2E8ybN1KJrAsba2r2aotO5rIjOSpbm/nmB8+4H8cq5aqwnYDIQQm3Zv
      bRoJk7fOvcmJAw/V5lcqlWJXZDeX7YtI1p93UkqsKQvsRWtKQfgUZMkTdqvl5teX63n+4KfZ
      vWv3zl7LAjqaOhBTa/++mYpfqvD5/b/OoQcObenc9fX1PPfg83x79FuwJBRlT9kovuWuIyUs
      UHJKbSzOnIOWVJGOxJ51uDlzk6Pu0drCULgCWZQEZJDPP/r5bfvvXzv1KoOjN5jLZAiHw++Z
      EtgRVZ9MJPnyE7/HhUsXGJ0dZkwMoSbW8eEqArVNMuhc4NzPT+NL6mhhFcKgJyXzNwrYJccr
      vqi4hENhDu09sq2xKarCeHmEwcxVzKrJ8WPHAehq6sFHgIMdh5krzfHO5bd5ZvcnMXSD1KEU
      2WyWWCxGOp3m7M13UAMK5lWLR048Ujt2LpcjEAhQrVaJRLa+2vwgQlEU/FoARxa2pRx9QcMj
      7doi/GEDzVCXcb9sB1bZ9hq730cYUY1LE6fJ/CTDJ59+rvb9l57+Ev/lO/+ZKX0S13VX9TNL
      KTFHLfR6DeFf/rtap2COWfg6bq+clbJCg2jkhROfoX/XnQnfO4fGhkY0U8M2tp7VJKUkWA7y
      +UO/zsG9B7e8fyQS4aHjD/HyrZ+T43ZhnZpQcbPL54tblDiWgxyTYOMJ/6IEP+CTvD72Ku1n
      2nj4iCcHPv30CxwZP0o0Er0rGfDzyz9nJjjNxZsXOHTo8C+WAgCPk//YkWMc4xgj47f4ycUf
      Mq/P4ouvHWAWqiDUtny1Vs1aVLMmDfsTWEWbylyViIhu+8Xu6uiiLfVbSCmXmbZ9PX309dym
      pTjQf5BEIlHT7IsPMxKJ8Juf/m1vvHe8bPl8HkVRyOfzH0gFYJomtm0TDG4ugwe8ZhU5c44Q
      +orWgJuBHtS3TQQnFIF7lwrAtd1aBtAWznxX51wK23SYH89hVR2mfaMUi8WaMAgEAnzpsd/k
      //nZfyE7nvWKMIV3elVVFnr2ekJrtUbtQhUIAa4tESpQgUebHuPRg4+RTNzbPtr1yXr8ToAC
      azc8X8puWYMLHW4nX/zYl+7KP24YBj7FDwsKQJa9xYqj2rgFt9buUgkI9IiOmlRucwdFoDps
      YrTpWBmb18+9weEHjuD3eUWJba23e4yWy2U0XUNV1E27j13XpVgtIkICK2AxOz97TznTlmJH
      bdfFFUlHaydfevK3ea7jV2mcbceeAruy8qVezeQzIhpGWMepOl5xigN7Wh6gqcl7+KZpYppb
      KyhbZAZdTxDV19ev+cDWiui3tLRQKpfes4f1XkNKl9HRUa5eu4pt24yOjW64Tzo9w8ToJGPn
      pxm7ME12srCMWGy9P/D65S5W1W4VlYJJILr91bvjuDi2c0/oojeL3FQBCTTvTuJvULl282ot
      5dpxHIaHhtkd2I3iV/B1Gvg7ffg7fDWo1PoAACAASURBVOitOlqjhhr3GqevBikloWCYnmoP
      H40/w+8c/Aoff/QT1Cc35pq5Wwgh6Krr2nC7ZTLBBn8uwG88/oW7Do7m83nmZ+e9KuEpSZ/a
      R7fTgxbRlrGGCk2g1S9k8Swt9loQDXq9xo2ZQf7y239BoVhYIcM0TaNcKm/6fkopKZVKVGyv
      2E8qLuXKxq07dwr3LO/RMHy1VfZ8dp7LNy5xafw8ef8c6JJAPkp7pJO8lWMqMIIaUHBsl5mz
      GRCCatbCF9NxpxQaH2jm5Jk3yWazC6s8B8Pvo7u1h862ldSo7xVUVaWpsakmwD5o8QCfz09f
      X1+toUs2m1222lkN129ep2l3An/Mh6arzA5nmb45S0OXpySXZvjYVQfVUGqlJFJI/BGD6UFz
      1cXBRn5v1/L83Ws1Hl8PUkomr6RJdMQ3TcAmpcSqWEhne/GOxWMsRSVv0tCzUKUcUBkcuUy1
      ZHLs6DF0XefBEw8y99M59ObbqZuL1yhUsabwB6AEv/PY79K/u/++zNXe5l7OD59D6qu/K8vu
      RR4ea3mCp555akc6CJYrZfQ5Azcr+dwzn+HIoSOk02n+84v/N5a4s3BxJfRmDTvtoDWo6K0a
      FwYv8p++8R/50sNfYnfvbdfZYhdCy7JqFDTrwXEcvv5v/4gMuQhTcCx2nIFdA3d1rVvBe5L4
      Ho/Feejww5w4+CBTU1OUKyU62jvRNA3XdTl1/iQn515hfiJHw/4E6kKQSroSmSzxr+f/iUhH
      ABEWC2asQLqSd949yQNXDvHRJ59mq7UMO4mRkRGCweCmCtx+0SClxLItJiYmGOhff2JWqhXG
      q0NE2m/7L+u74+Smi0xdzRCI+ZgdmffcFQgc08Ef9a2oJVzKBbQUriup5Kpofm+FlrmVwyxZ
      uLaL67okO+MrgombUcxSSmZHsoQTwS1ZEMW5MlNXZ0l2bl1ArRXwNMsWqqHWxp3T5zh95m16
      e3prVupsZnYZB9d61yilRFgCX8nH8fYT9O3qu28LlWMHjvPK4CvM6ul1x6zMq/y7x/493d3d
      O5aRlGpJ8cf/+x9TKBaoT3rvaUtLC37bT1ktb6j0FV3BVhxkVXotKWOCrDbPP731T/wvqf+V
      YMBzkxqGQWtr66bHpaoqbsBFupL6aj3PPfb8XdVfbBXvaeWToii0tLSs+O7EgYdIDjfwD1f+
      dhnNdDVvohoK8Z7l2T2uI8lcyeLYLq+Wfs4De/ZtuDK9l+jo6Lhv577XmJiYIBAIEAgENvRp
      vvj6D1FbbO70LEYbQyBh9NwUez7ajetsLs9/KQqzJWZvZQnG/OTTJQRQ31lHvCWMHtRRlFX8
      xwvYyJooZ6vYZYf6jtUF+Wr7O7ZLZiRL19HUllhD1zreUlSKJhMX08SaQriOi5mw+NHJ7/Lw
      vsfp6ujmsQcf491XziA2iBP6Sj4OJg+zt30vvd29953+PBgI8uy+j/P3l74G68i4sBJi165d
      O66o/H7/MqoXTdOI6THmtLk195FSIm2JrErcqosbEpATUARiglk3zdCtIfb2793WmIQQ7OvY
      x+Cbg2T8Gb75rW/ywvMvEIvFtnW8rWJblcD3AnWxOg7tPsL44ATpTBqrZFFKl3FdSWm6guZX
      QREUJosUxkrEeyJEUkF8fj/9iT1EI9H7trJxXZfBwcEPZCwgEokQDAY3xZqaqm/lnZNn8DWo
      mGULu+Kg+TxBr/s1yvkqsZbwqlw8a0G6kuG3JzDLFu0HmgglAoQSfqyyQ7IrhmqoLB2WWbbI
      T5eQSDRjbeppuK0EMqNZwskgRnD5e7CeoK4WTeyqQ6RhuRReLStns5BSMnpuCmlLmncnQRGo
      mkogZpCZzzCaG6YxkMJQDS7cOE/VWB4rEUIgTYnICdr1Dr760f+JE/tP0NTYdF8t5KVIxBK8
      c/4dKobn517t+VRyFT6y/6PvSWX+rdERRorD4AqUO5hL7bSNM+1CBZBem0tn1kWNqthZG71R
      Aw2aZQs9nT3bHkNdNMHw4DBpI40z7fDWxbewKzaZdIZYLHZPLYL3DfeBEIJoNMrnP/IFSqUS
      I6O3uD5xjdHKMAUzx9yZIkrSJZgIULcrgLqQq91AMx3tXhygUqnUaCHeS5imic/nuQ7ms/PE
      orEPTDxgK9cRCoUIigjnf3jRoxmQEIga9D3WgVA9mgWzZG2q56/ruExenqWcr9K8O7mMYsEI
      GPgiOpOX0zQP3Ha7zU1kyU+UiTQGyU2VyIzmiNQHKWbKRJvCBON+rIpFeiiLogoCMe9zMVMh
      N16k66EU2iYtk+xEnmjjyrqTu6E3Ls1XaNqdpKHbKzRa2sA+0hBi8sosP373O5zofpzGYFMt
      pVG1VZrdFrrquujq7qanq4dwKPy+pDbx+Xz01w/weunVtedWUDA9PU17+9bJ6O7E+Pi4F6tr
      Wj2IfHDXQU6PnaI0X8KvhIhYUWaDaZBew3aj+7biVOtVr7xFAddUcfMSNaowlh27qzE6joOh
      +tht9RNsClIsF/nJuy/S7uugp6fnnqaEvu9miKIohMNh9gzsZc/AXiqVCqVSiVfefJkrnCPY
      tJwPvjBXrFGo+ny+bQveUqlEIBCoZVxsZcWUz+cJhjwfoKq8t8rn/YZMeo5IMoTuU72sGtNh
      /EKaeCpMtCnE1NUMHYeaAbCq9pqr9OxUEc2v0d4TXzUrJ9oYYmxqhonLaZIdMRRdITdeouPI
      7Xaf1aJJeb5Koi1GbrpIemgeTVdrPvvSfAV/xE99Zx3XXh7h1tuTdJ1I1dxJa0FKSXG2TDi5
      cy+mVbGZuJim89jaNAJNfQkmLqX56bkfoJUCBLUQARHgkd2P8vjhxze98BkdG2V8YpyB3QNE
      o2tTKdwLCCE42HeQ1994DYKrK0y1qu5YPO3KlSscPXp01d+klMTjcZr8Ldws36DL38Ojhx7l
      G2//C2W9hCmXB4eFENTYaZYMey6fqVVubwfRaJRUW4pXr7/C8/2fprm5mZdfe5kbN24wm5n1
      4lubCChvB+87BXAnFv12n3j6kzhvmkw4w7VRSylpi3XcrsrbhvC3bZvTF05x+sZJPnnsM1Qr
      VSLhMLOzGfbt2wd4Lh7bttF1L7fddd3a6kpKSTabpbfXI7j7INYDbAUP7N7PT0/9mMb+GPVt
      caavZQjW+SnOVXBmHErZCkNvjyMEqIZKIOJbEUQtZkrMj+VoO9C0Ju+/Zmi0H2pi/MIMt96Z
      QPNphOoCy+aAL2TgD3uWmT/i/btU4Pgjt1fYrQcaGHx9hPxUgVjL+s9QCEHnsRRTV2YJJ7fu
      Vy9nK0xenUVRFDqPtiBdj1yu42jzulXIiqqg+VUcxaEhmuQLD30Rv9+PYazNciqlZGJynFAw
      RLFUoqG+AcdxSNQl7puF0J5qp16tZ5b0yh8l9Cf7d4yWPZvNksvlVlV0UkomJibIzM0iDNCk
      yp6BPfT2/G/cuDXI1771d1Td5QFi13axpxywQVkodo357s7if/PNN3lw/4MU54tMTk4Si8ew
      XZuWphb+5gd/Q6IuwR/+2h/ek+f1vlcAizAMg+ce/AzfP/lthtXrCE2gqIJ4bGWThY1g2zbp
      2TQT0+OMzg9xbeYyrbKXRDzBj3/2I+ZKaXo7+ygUCoTDYVzXpWpW0XXd+3/V870u9kfdtWsX
      xWLRY3LcQtHUBw1CCI4fO86rr75KdqiEVbFBCCKNwZogb+mvx1mgJ5Cu5NY7k0QaQjX/u5SS
      mZvzdB5pqcUKXMe9Lbi93t4IID00j1W1aTvQxNxYnmDd+kJjLfeMlBLXdgnE/Atxio2VuKop
      uI7ELFtbrhsozlWoa48wN+IVRVUKVXxhY8MCNOlKrJKNIlSckiQcDi9b9S/mlM+kp0lnZimW
      CxSdHHP6JMlqK5940qsq7uxYm4jxvUAgEOAzRz7L//f2XyL9d6TQShhI7dkRF2qxVKQl1bIi
      8WQRruti+AyCIkTWnudo37Fa3+MH+vfxmac+w9ff+cdaIxvpSqqDJkazUeMqExXB3j0PbHu8
      ExMTRGNRotEon3j6E3zvp9/jW6e/xWN9jxHyhbj1zVuMyhFmM7P3hCjuF0YBgKcEPnr4Wf7f
      /3GFsq8IJlzxXeahEw9v2vyam5vju+98g7IoYSQVSk4Ff9Qgm57ln177W0SzQyBmMOZeZfbN
      GR7b/xS5fA4pJS3NXru+b3/72wRDQZLJJJZlofs0LMvi8UeeuMd34P0PwzD4zAufwTRNXj73
      E1In4suCvkIRtVWuUAXBOj+ZkRxNfQlyU0UQYAT02j5SSq6+NEwgvuDeE5CfKYGErqMtNQbQ
      RJtgbiy/go55Mz750lyF/EyRjkPNTA9mNtzedVxGz05hmw7F2TJG223lBRtborpfBeldi206
      TF3L0Lhr4wQCV0psy6GQyRN8wM93X/0WTx/7OFeuX2GumMZ1XCbsYURI4gvrqBEvO8moqiSq
      97bSd6vo7+mn5XQLY3J0xf0qVUs7co5QMESiLrGma0zTNPw+P3lyNMlm9u/bX/tNCMHRw0e5
      eOUi5zJncTUXZ95jBVUiAmlL6qsNfOrQcxzYe2Bb45NS8q3vf4vHH3q89l3ZKpOdnueNuTcI
      GSHMkMme6F5yudyHCgA8H3s4EULaNuHdAYpmhldPv8xjR5/YlBb++dkXEa0WIeHxuOcnizT0
      JairpsjER2s0xkIR5BNpvnnx79CCKoqqoNzwkQq3Uw7nKCSnmLJusls5yIWrF+jp7v6QORQv
      r3nv3r1IKalL1vHTq98j3GYgpRc4lRISbdGaWV3fFefKS8NYFZtQwk9uqoh0IZ8u4QvrVPMm
      mqHRedjrBCelJDuZZ24kTynr0TALIaiWzS2RuC3F3FiORHuUzEiOwkyJasnEF1w7UJ0ZzVHX
      HiWcDDJ+YYZwfRDHdpm4PINA0H6wCUW7XZBWyZpkRrPEmsOouoJVdUh2xPBFDK6+NEzn0RaC
      sY1dHooi6DzSwuxw1mOpbM3xD6//JZGWIGqDN/fCYmUdQzVr477PchJUVWVf837GMkuqyyU0
      VBqJh+I7Vli56JpdC0IRiLLCgeMHawWPi9A0jS9/4cu88sorjMyMcDZ4BtdyCQ9G+eRHP8mJ
      wyeWVbGvh6pZxdCXu+pGRkeoT9TT2NiIoigEg0GeeegZglqA81cvUCqX2Ne2j+mJacql8j0p
      Nn3fpIFuFpqm0RhqIWhGSKdnIOJy5eoV1JJOqjmFEIKh4Zv85J0fcXP0Bm7VC/QoisJMepoz
      Q6cwkt7LUsmbmHkL3dA51vEwNyevY9TdngCqoeCL6Oh+Dc2nosRcCv559HrQAxp6SGXGmcDx
      m9Tp9Rs2uvllghCCWDRGKtTOhWvnmBnOEIj5MQI6c+O5Zf760nyZ9kPNBKI+6lqjxFNh5kbz
      ZMcLIASF2VItM0YIgVm2kLb3/EKJAELA5JVZWvZsndKgNF/BLNu4josvZNC8O4nm01ZN57RN
      h/TwHP6Qj0h9sFZ0VslVydzK0ba/iWAywMSFNHNjXlP50lwFs2TR1JekkqtiVx0S7Z7PWDNU
      cukCibbYlhhFAzEf82N5FFUh0hxc1s93teu35lyePHx3DV52GkIIIoEIr1x4BeFfqGQuCz6z
      91d49fVXmZmfoa/77ovWbNuu0Wqvhmq1ysmxNwkSwCpatLW13a6sFl7jq66uLlz7/2fvPZ/j
      ytI7zedck95beMIQNKAvFqtYVSyr7la1UXePvGImdmNXilnN7B+z+0WrD4qJ3R1JM9JIq1ZX
      Sd2tdtXlDU3RW4AACI9MJNJnXr8fkkgSJCwJkiCZTwSiisjEzZv3nnvec17ze23O587jyqn8
      4NUfcPzYcSRJav6si8Oy87g1cYvTX5/mh7/zw2aKtRACr9fLxxc/Qivr7OzdydGDR0mn03xx
      7guO7D+y5RmOT90OQAjBjq4d7OjawcvVl/mr9/8S0zT5dPI3XM1ewu/xMy/PEKiFKbkKDE9f
      ZmRuiD09Q3wx9Ru8/XduluqWsWwb4YIPb/0Mb+faD4gQoiGidde/PWEXnjDcuH6ZvVMNzaLt
      mH73JBBCkEqliRkdqL1S00efmyxQK9bxBBtuHVO3MXWrGScQQtC2+47LQqvoWHf1CAjEfeSn
      y6huBb1qUJyvkOyLbnqyWOoV3HO4DUmWyIzlUNwy/ujy+1cva0ycncMf8xLpCC6Tm7Z0i+xo
      Hl/Ug+ySUNwyO442fM6mbmFbNqqnYVCiXcsDkXrNQJZkxCY3jkvXZ254gdxEgWDSRyDhQ1bl
      +1aJlmHT6el7rBrzGyWdTrMruIth6wZu3c27O7/D7sHdfHb1Uz6c/Q0Hbh2gr7fvoT6jXq+v
      WcNSq9eouWqcN85hzJq8skLPciEEmUKGdqudf/ed3yUZS276PO6eEyanJjl95jTf/MY37zMe
      iqLwx9/8E06eOcmhfYc4+fVJzsycoUSB7EL2gZvNrMZTtwO4G1VVibsTTI/M0dHWSV5doB4p
      EchF+IO3/gSv7md0dJRZe4LzX1wgesC3LKIvKRL+uIeFkQLxXeFlK6nNYlkmpy+eZG52jt72
      XlR1+6y2niRCCDStTsacQvU2HoL8VIlytopRM/GFPcxczhDrDq3qwinOVfBHvU2JECEJFqeL
      eIJuFJdMvaQR69l8Jsbc9QVi3WFcPhUhCXwRL7PXs4TSASzdQqsaLIwXKGWqdAwliXaGUD3L
      jYMn6G40hJ+r4ot6lmUtSbKErK6c5mrqFuNnpon3RvCGNp++LIQgEG90JtMqBgu3CpTmKo2q
      ZsNq1hBoMzZvH/pt3K4nK3G9Ggf6D1CYKbA7sYffeuW3cByHf/nkfcyEwfjwOC/ufvGhFlRu
      t5uz584SjURXPE6lXOHi6UvoIY1cIceJ3SdW3Cm1Jdo4PvQKyXgSSZIeeCVe1+qcOXOGd7/1
      Lh73/W6/er3O6Qun+M3YB9y8Msq5+tfUQzUQ0OHqpLvj4Wsj7uapd1oPDu7iP//p/84P3/g9
      koVO6sMWVaOC3+fn4MGD7Os+iJE36Xh1lT6bQmCZjZWabdkPLDstuQSKX6LeleNHn/8PCsXC
      Q3yrZ4v9ew8QLXVSma9TK2qoLoUdRzsoL1QZ+WyS1K7YfVW4S1imhWM5TeOxhCQJFLeM7TjY
      1sZ9o47jNO+1XjPwRZbXleAIxk5NM3MtS2G2TCjlo31PYtXiNSEJop0h+l7uZPpyBsvcmDCc
      EDSyjvL1Db1/NWRVJtIRpPtgmva9CQzdaI5ho2ayO3qQYGD7piZ7PB7++Jt/wrsnvn1HddfX
      MHCzziyj46MP/RmdHZ2rKmymUin+/I//nFS1DVuxOXX61Io+/UAggMfTGCsP40qzLYu9e/ci
      y/KKn/Phlx/y4akPSdGGK6TiBBo5b45wyFfyD/y5q/FU7wCWEEKgKAp7du1lT8cQh/qPNNMx
      O1OdZIvzSAlrxUlCkkQjpXCkQHm+SilTw+1TmxIGG8E2beav51B9Cv64j5pZZfircfbs2tNy
      B9Hwfe7sHSRCiktnrpA6GEaSJTxBN5IiGvn6wZVXqNnRPOH2IK57DEBhptxY5QrQShrhtvUn
      uaXq4sxoHq2s44t6lgVfq4t1HNOhc3+KcFuQQNyH6lE3JF0hyQJ/zMvs1SzekHtdrSNJlgil
      /DiO04iJxLyb3gXcjeM45GdLeIOeZhqrPavy5gu/9dgr41dD07QVn4d75dYvDJ+npJRAgQ6l
      k77uh3MD2bbNyM2RFdNBZVkm4A/QE+/hqwtfMpG/RWmxREeio1ndv5X89Oc/4/LVyxzYd4Bq
      tbrMmDiOw6VLF/nBN37I26+8zUxmhvHaGN6yl/BClOOHj5NMbN79tBbPhAFYYimSfrfolaI0
      NGjm7alV21W6gy5C7X5CbX6CSR+ZkTz5yRKl2QrF2QqB9No6OMXZCt6Qm0hXsJmq6CQ1Ll29
      iFxzkS/kKVcq6JreyD1eo3DnWUWIRs3G/sGDjF+dRFMreAIubNshP13EG/asOGmWMhV8Ec99
      7iHFq1Aa1omQIOXtxK9HUEpeKqUqUuD+HYFlWMxcydK2O94IwkqCcDrQfJ9t2cwP5x4okNw8
      J1XGG3EzdXGecFtgQ7LSLp8KjqAwW7kvhXUzFObKyLJMKN2Qp6jlNV7qeHPLJ4yHYakn91oI
      IVjMLDI2P86Qbx/vvvruQwevXS5XM4Xbsqz7/O7ithdgdniOCf0WY8Uxrl65ykDnzi3bPTmO
      w5XrV/in4X9kzpglUAsy0D/QvB5Xr12lWqkiCZm+3oYKql7TuTp+Bb2m8+4L32bX4K4td+WJ
      arXqPGmVwEfN6fOnuMzJhqDcBnDs224FCaYvZOg8tHbD73pRIz9RJtjmxxe748/VyjoLw0Xi
      /SFsw8E2HPRJwR9+60+IRqPbZmX2uLFtm8/PfsK4fQ1PRMU2bcbOTNP/0nJFV8dx0KsG2dE8
      nftT2JZNZU4jQQdRd4KD+w/h9zWCm01ht8Uc/3LyH/H3qssm4MkLc80Mn5WwDIvZawt07k+t
      fM7W7RaMq0zqju1QL2toZQPbtinOVuh9sWND18M0LEa/mqJrfwrvBtJB76UwX0Y4NCd/AHUq
      zHdf/8FTmZps2RbFQpFwOLyl528YBj/6lx/R1pFmT/9eAJKJZHPsXL9+nb/8/C8wCyZySCbs
      ivC/vvGn7Oh6uMI5x3G4MXyD//HV35PzLoANIiexK7mL3z3xuwhJolQsobpU2tJty3ZJ+UKe
      r05+xeuvvf5I1FyfC/+EZZmwiU2OkASy1Kj8E87K3cDuxhVwNbRcLs6z41g7qk9FrxrMXlyg
      bX+8GZCzTJtkNY2maWQyGUKhEF7vw239n0YkSeLVIydIj7Vz5uZXaIESjuVQnqkTMGJE3XGE
      kO5Km7tFbVwn7e3iraEjxG/rua903WLRGEPpw9yonkNSBUbNRCsbVBfqSGu4ZSRFwjSsxj2/
      Z5Kvl3Wyo4s4tkPb7jtGpFqoU8vXqd7247u8LlSPQr2oYZs2+ekSvogH07BQXPKKFcO2aZMZ
      ztG2J8HcjRydB1Lrqpg6jsPiZJHKYg3bsom0hQi23cnyKU3X+N6B33kqJ39o1PpEo6vE7B4C
      VVVJpVP88+iPUG/8K8KB7w79DideOIEQotF/4AMFqbtx3UpOkV+e/gV/2vVn9x3LcRzq9Xoz
      LrAa2WyWT059wqmLJ6n2VxAIHMnB8TpQgbHxcXRN5/jx4yumq0bCEd5+820URcE0zS13KT8X
      BkCWZBzTWVODfEVE4+fu1Lr8ZAmtYhBIesGB8nwVvWoS6Qwgu0MsjBZID8WpLNRI7oouU3SU
      ZIHlNFpjWpZFLpfj5MUveev4O0QjWz/gtzNCSOzsG6Svp5/xiTHG9XEO7D24rC/z3RiGsWGB
      vkNDRyifrFCrV5EdlWQygXHI5Pzol4S6vCvuAhppmkEWxgsk+hraREtBuvkbOboOpHCA+eEc
      9ZKG4pLxhj34wl6iK+TxO45DfqZEdmwRxa2gVwxSO2NIikBIjSIxS7eYuZqlfXcCl19FK+rM
      38ghZEj2x1DdCo7jUCtqLIznCab8mLpJdbGOP+Kjc1/qvviEUTHZFztKLLr9pMmXcvKfpGF6
      5egrzBRnOF04ieNy+JfL77Mj1UNP9w5UVaU/OsCwcwNEY0yMZEdWPdb03DRtqbbmLvReCsUC
      /9eP/oL5zDwiKHBGbRzFwTGgzd3GiyeOcejAoXVdY0vj/rPPP+P4y8e3tJ7jmTcAjuPQlmzn
      zLCJ6tvc1xVCILskzLrVzEIJdfgZ+3wGT8BFraCRHIw0G4LYls3iZEPfxR/3Mn9tEVdAvSN9
      IARZMd1UHr02fJV8YpqTl77gW699e2u/+FOCLMv09w7Q37t2Ed1m4lSqqvLWq283/+04Dj/5
      +b/yYvp1zmY+J9S18jgIxv3cujVLIOEjO75IJVtHcUnodbMZP2q/LT+9nuyDEIJoR4hoRyP3
      39RNxk/NIrlEI53VESguiUhHkMJsmdTOWNPwGJrJ/I1cU2dIyIKOoRST5+fwhT10H2xb8XON
      mkW3vZsXD7204Wv1ONkOCREul4s/+tYf0fZlGz8Z+1cMn8FfffhXfGPnN3jlhVf57ivf4y8/
      /At0f6PveCNF5A6VSqWpPKzpGra9ctaXaZq898l7FOJ5XFEVs2wimQpKXMYecfjWS7/N0SMr
      q5Tey/j4ONFolMHBwdYOYLPMzM7wyaXfENixed9qowWhviwjSJIkVI9MqMNPuHO5HnwlV8Mf
      abh0XD6V5GCEhZE8qT0x6gUdSRYodTder5d6vc6N8iVC7R6yi3NYlvXcxgQeNUIIXn3pNUKh
      EMMfXKXR4WOF90mC7sNpxk7N4Par7H5rB0bdYH7k/o5Rm3XbKS4Ff8JDrCu8LOXVcRzGTk4v
      e6/qVpqxCNuykWQJvd4wBsmBlXeKpm7RoQ/w6tHXV3y9RQPLsvj63NecePEEM4sznK6dpOqv
      8N7Ej5lYmOD33vl9drp3cdm+CFLDNTg5OUlHRweapjE9PU1XVxeO49DX3Ue9Xl/27A6PDHPx
      5kWuZa6SUeebM6ydc3D1NBYRSkohkdy43HU0GiUYDC5TNN0qd9AzlQV0L/OZef7pq/+Gq/d+
      v+5GqOW1hhyBwzKlSVmVufGrWyQGljcQl2SJcqZGINEI1piaxcJInvxkGSEa0gV2UWIyN8bN
      2WH8gwqSLFGtVvHr4W2VsfGs4fV60XWdDz7+NcVigczNRSqLNYrzZeaHc5SzVUrzFWzTpl7S
      SO1suGCyo3niOyKbbmG5EqZhUZyrEEzcUYwVQlAv6kiKWDFGsDS+Kos1HMvBH70/EFid1+iX
      9/HK4RPbOp6k641V9ZN0AQkhMAyDbDZLzBdjZnaGChVQYLY+w/TlGfra+nBVXSwYWTS3TlAL
      0d3ejcfjIRaLoaoqQghUVcXj8TA3N4dt26iqyt/+9G8575ylopSbvQOsRRvJI5D9jV/YLhs7
      53Bg8MCG7lc+n29WM9u2zaef9fB8HQAAIABJREFUfcrXF79m7669D309ntkdgGEYfPLZR6hx
      eVMtCLWyzsTpOdxBFUmRiPWGmL+6SKyvYX1reY3FiSJ7v92HuKdyWPUoICA3VkSv6sgumcRg
      FKNqEusNIckNCWSEjYs7AR9fu4sPrv6MeCxOKrVyFkqLByObzTabi0zNTBLf78cTiXDzqyk6
      96VBwLUPxoh0BIm0B6ku1pFkudkroF7WNy33vBK2bVMv6UQ7708rVNwyjrVeAeL9E4WlWyiZ
      IN/c+y6pZHpbT/6wdvP6x4UQgt4dvdi2zamzJ/nTb/4Z73/wPheMcwhVcEW6xJVrlxhQBnk5
      fpxLlUt8eupT3n7l7RXPXdd1/vsH/43ifJEdO3qZYgJbszEzFrJXwhEOdsnB1aMuO4fR8k1G
      RkfY2b8TgFqtRj6fJ5VKLfMEnD53mmK+2JwXpmenuXLzCrt37t6S67ktDYBhGMiy/MArhUwm
      wy/O/gStvURltoZW1Yn3hrFtZ91uT9B4sELtUcLtARzHQSsYzFzIolcNfDEP7fsTTVmCe0nt
      ilLJ1gi1+1YONq70+Q4YNWNb+EifNe7uLDUxMcHMrUxjte1Rm9If7XsTWIZFYa5MYkeEcHvD
      tbfUJ2ArmL+RI9IRvK/gTas2upYlelduSH+H5QbC0m3ilW7ePPEOsvx0jJtHUVj1oEiShOGY
      nLlwhm8c/wYXfn0e1IZEOSkYLt3g1te32NHWg+my+MlPfsL3v//95uScyzX69Y6OjTIlT2HF
      TbITWRzdQfJJuDpU7JqNcARKt7TsuXdssIoWv/zyF7Sl2pianeInH/8rM/Y0YSLsTA3idXkp
      1PNMLk7y5z/4T82J/tq1a1yfu0YqvTULxW03cqZnp3GpLnB4oLZwjuNwa+oWZrqCx+PCE4mR
      Gytw69QssiIhEMR3hnH51RWtZ2GqTGIg0izKEULQfjDRLPGX5LXTQoUQBJKbawqTvVpk9uIi
      v5B+zne/8z18Pt9Tm8K3XXAchytXrjA0NNT8XS6fWzbBLxHpCDJxfo7OoeUuOMd2tmT1r1cN
      bMtZNvkLIRoKtSOLdOxLbspFaek28WoXbxx5eiZ/oCm3/KR3AUu8cuQVSqUSk5OT9Hr6GDdH
      mzOiFBBo3XVulm7y+6/9AdVyddkzGYs1sqy6u7rxfOahHqk1XDx3fTU5sLLbUK0o/G8/+HNS
      yRSapvH+b97j6NCLvCi9iGmZ2I6D49h4/V7efumdZkqs4zi4VBcBEcAn+1hYWECWZUzTwO8P
      PFAzqm03eq7fuMbV61c5dvgYoVCo6W/bKLqucz57Enf3nYsf6w0T6w0DcOvULNnhPOGeAIHY
      /RcsmPZRnKvcJwWxGbnezVLP6bQfi5FRJ/ibD/4Lx3veBMlhR1cvoVCoFRx+AIQQ7N17x0da
      LpfRvZX7Jv8lFLdMOVcjlLqT0lcraasWjm2GymKtuZvEacSKJCE1dn51E9WjbEBT/nYDGc0i
      Ue3mjSPvPFU7Rtu2KZfLRCLr7XQeH0t595VKhT/93p/y1z/7r1x3rjWr+eW4hFVo6ITdmrjV
      bAt7Nz6fD7ftpu7UVvLSrYiZN/G4PUiSRL1ep7RY5viR41SrVT7++GN6+3oJBAMM9A0sm/sM
      w+DCpQvomsEbJ96gUqmwsLDAh59+yEDfADo6s6UZemN9DO0aIh6Lk8/n8fl8q6oPbLsgsGND
      JBbC7wtSqVQIhUKbWg1/+fUXLAZnV1WWNOoGwZSfSqaGWbfwhJZvS1WPQmm2ii/mfmyrcF/S
      TaDNiy/uQatoLGRyZKLjnL15mus3r1FZqOPz+J7rdpObYaUUzes3rjMj37xPVG4Jt18ld6vQ
      rKbV6wbZm3nadscfKIHgbqr5GtWCxszlLNXFGqW5KsW5MoW5ClpFR1LFqlpIS8iKRGGmTIfS
      x9svfvOpmvzhtnT6OkVTTwKXy8WtmXEkJHZ37ear61/CXbdC+AWTc5P8zuvfJx6P33f+QggW
      Z/JMZidwPM66RkDkJX578F0Gdw4iyzKfnfmM8+VzxESMkZkRzs+d4+q1K0zcmuDloy8v+zwh
      BKZpMjQ4hCIrxGIxNF2jUqrwwfVfc11cZc6e5WrxCleuXaE32otW1/jZz39G745e3G73fVIY
      284ARKNROtKdJBIJAoHApvK/AW6Oj1ANLa440KqLdbSiSaQ7gD/hpThbxrHAHVAbFaC3V1nF
      mTKh9sBjG6yyeicgXCto+HplZJeMO6RCyOJW9iZnL52hLzW4LXXdtxumaeI4zrKBnkwmuXb1
      GiK8XBRw+nIGf9yHVjHQK43FgW3ZzFxdoHNfclMJBKuRHcsTiHkRiiA9GL/thgoSbgsQ6wmj
      lQ0yN3MoLrnZO+BehCSwszLvvvw7j0QS4HGw3SZ/uJ2FVdeYmp1i185daDmd8frYnXOVQXdp
      BMtBLt+4wq+//DWH9x5u7sqz2SwH9x9kcmKSrMis+VmO6fD9/h/yzuuN3ZvjOHz09YdkvPNc
      yVxmdGaU3endfP+NH5DLLhIJR/jn9/+ZzHyG+fl5wqEwlWqFmbkZ9u7ei9vt5uOPP2bnzp3s
      TO2klq2xKOfABvKCV4ZepVQukc/nmZqa4qPzH/He6R9TyVVIhJN4PJ7tZwDgjjrgg7g+Mgvz
      jIwOUy3U8cUaqZuO7VCer1LN1knujjaP74t6yN7IU1moUcpUyU+WMbWGdEBkhWyNx4En7Fre
      Q1cIPCEXslfi0kfXGJm5zkI+i2Q1qgd1XW9uTbfjA/YkWCmBQAhByB1lLDOM7JUoZSqMn5nB
      sR2KM2WqhRrJgRiKSyYzmifaGdwS/39+toSl2xRmS5TnaiT6o41YlBDNdoKegItg0k8lWyU3
      UcDlV1Fcd1b4lmEjTwf51rHvEN2GFb5PO7FojEgowoWLF3jp8Et8ffFrdJd25w0CxubHWZjN
      MV+YQ3Zk0vE0o2OjdHV2Icsyk9OTjNfG1i4QFNDvG2BgR6PocXZ+ln+7+lNM1QQNcMGh9BGO
      7D/C/n378fl8DPQNMNA/QKFQoLOjk3QqTX9fP5ZlUa1WaUu3kUwk6d3RSyKQpDpSpTJawTRN
      fMLP0ReO4kgO7198j3nXLIZPZ7Q6yhcXv2BybGJ7GoCHoT3dwfj5ScxoFdWvUJqrkB3O4/Kq
      xHpDy7bzQhIE23wEkj5CKT/BtI/M9Txuv0og9WTcLatN4pVcDd1Vw7tTUFCyXJ64wNXpi1ye
      Os/lqfOM3xonHkji8/pahmAVwqEwiuZlKn8LZAfLsOk50k64I0CkPdhs5lLOVvFFVlYn3SyK
      W2H6aoaeQ+0UZ8vEe8PNMXi3318I0ZCWiHqZv5FDdsu4PI3ncnG0xO+/8e+XFQK12DqEELjd
      biqVCrV6jc5wB1ezV3Dku+IyXgc9pOHX/QSUIDIyP/vopxx/oaHhE/AE8ZV97PTvYnpuGtlR
      CBthqkYNJBAS2AsOPzj2g+Z9PH/lPOcXzyFMwav+E0zWJxkt3WSHr5dELNFoWu/xIMsyhWKB
      z899RtAb4sfv/5h/O/lvfHrlE05fPU3IE6KzrZNiqchnlz+nkF7EiljcyowTskP86PyP0CNa
      M+IrJLDdFnPO3PYLAj8MjuMwOn6T4flr9B5Mo1cNqjmtoea5ih93KeADUJyuoFd0AqnNVw0/
      aoJpP1JH40RlSRDqWm6gqvYC/3LlHzgYe5Eje19cNX7hOA66rm+rlLzHyZ7+vdg3LH76xXsE
      0t5mLvXSatyxHfS6uWqsYLMoqow35EavGgSTgaZRWS3oq7hkUjtjzI/kUN0KsiKzK7b/kfXz
      XU/S4nlBCMGePXtwHIcBZ4CKXuGn4z/Fcd2VBiygu62bP/rBHwFwYP+dQq7Ojk462jtwHIfu
      tm7i0Tg+r4+xiVHe+/I9LNXCZ/qxLKt5uAO7DzA5M8GXlS8IBoKktBSz5iwjt0YI+UPN/gVC
      CHw+H2O5MWK34rx87GUGc4N0d3dT02qcuXSand076enu4Z0j7/DTcz9BEQp5dZF/HP4HCLBi
      bEII8WzJQRcKBf7+q/+XmZF5gm2NlXCsJ4TLv/oOx3EcjLrBwkgRBOgVg/Te2LpBue2KWbXp
      Z4jjB15bUV2w9cA3rsHJ818y4lxg5lqGcFuAxckigaQPvWqQ6l+9Q9mDcPOLSdx+F+1DiQ3H
      FCzDYu56Dh9B/v27/8sjM9jz8/O4XK5tlZ2zHXAch8/Pfs4/X/0nLM+dSfs1/+v87rd+d1PH
      mZ6ZJhqJYlkWgcDy2OL14ev85Yd/wZ+98h+xbZv/54v/Gzkr891Xv8ebb7x537Fg+bNbq9fw
      uD1kMpnGsSXB9NQ0iUSC0fFRfn7x31jQFzC9Bo7a6ER3N8/WDgAHoTrseqcHvWpQmCqvOfkD
      ZIYXsQ2HxGBkWT/XpxXFJ3GzfomxX4/glf2kgx28cvTV5o7geZ74lxBC8OKBlxj+8Q2Muomp
      WXQdTDM/skjbrsSqGWQPiupRSfRHNhVQllWZ5ECUzsourl69wqFDh7f0nJbwer2txIIVqFQq
      HN13FL/Hz9+d/W/oHh3Hdgh6NhcbFELQ2dHZlI++9/nLLmRBFvj9fqKRKL2f9DFavEmhWKBW
      r+H1eJcd616WXk+lUtTrddxuN+l0mkAgwODAIPuH9lMqN2odzo6f5Wzpa3Df2X0+UzEAVVUZ
      Hh2GsImsyvjja+9sjLpJLVenbSj+SPP8HzeSIkHYwgzVmS5O0KZ2Ewq2/Md3I4TANhzOXTyH
      rEqUMlVs06Y0X6UwW8bSLXyRLXIFOg2xNk9gc26cWkYnZCY4cODgprPh1sIwDKCRB+92b74h
      /fOAYRggoLOtk4HQTqYvzxDT44Q8IQzdAKfRz3hpYWXbNvV6vXmf5ufn8fl82LaNruuoqrri
      PazX6wSdEFbNYufOnfT39uML+jh25Bi3bt0ilVq7GdW9x/r444/x+rzMzc3xd+/9d1499ipe
      r5d0Ks3BwYN4Kh6u5q42ZWyeKQMghEA2FSZnJlZsC3gvlUwVSZXwhp5Od89aLGU6qT6FyrTG
      QM/gkz6lbUcoGOJG7hLt+xKE0oHbP35CKT+5WwWCKf/yEv4HdJ+ZholRNTdtUBzHITda4vDB
      I1tak7LkGmxN/KvjcrlQlUZmXTQS5diBY8SCMX5941d8vvAZX177nA/PfEjKnSIWafSwyCzM
      Mzk7iXAE4XC4mY2mKAq2ba94veOxOIO9g0xMTNDT04Pf72egd4BAIEA8Hl/RjbuEYRoIRDMb
      UFEU+vv7iUQiXLh8gdHRMY69cKxpeIQQpONpzl84T81VBZ4xF5AQgqFd+2hPdfDjr/8eV8fq
      D6tl2lQW6qSH4o/5LB8vQggWawtP+jS2JT6fj8HUEEV55j73jDfsoV7Sm5N2brJIYaaEXjGa
      Ofze8MYWDoGYD71coJy9oxS7EdwhFT2xsnT1w3DvM6HrelPdssXKKIqCIiu81P0yH49+RCVY
      wZRM/ubcX+M77UOyJTS3hibqKIZKtB5lR7gXt8vN8ZePMzc3RywWo7u7+75jS5LEwMAA5XIZ
      VVWb8Z57i/2Weg9IksTi4iKhUKjZ5/jK1SvYls3hw4cRQrBv7z72D+2/r2ZEVVW6RDdzk3Mo
      XfKztQNYwuvx4jK8TJRHkd0rr5y0so5l2A/ViPtpwS4KhnYceOz6QrVaDWBbS1mEfVEujZ5v
      FN3dhTfkZm44h+qW0SoGmdFF+l/qJJjyI92uyr1bNmI93AEX88OLhNtWlqJYjfq8SViJNbVn
      HgWyLG/re7RdiMVi9O/opzvcQ1AL4pQdPI4Hx3YoiRKaooHqYLksKkqZgBzE4/UQC8bYsWMH
      sVismW1W1+oocmNnsOSKg4ZxdmhIhjiOg2maCCH4p3/9Jy5cuUA02OglHggEKJfL5HI5LMvi
      Jz/7Ca+99lqzxazf77+vU5njOLz/4fucnPkKGxvJKz1bWUD38qPf/AO19tyqu4D56znCnQHc
      /keTYrcdcByH0Gwb333j+499y28YBpIkbevJxXEc3vvgnzC7i/evjGsGhZlyo5+vX21q8Zu6
      xfxwjo6h9fs3VAt15q4vIMkStmkTTPmJdYc2HBCWpwK8e/x3ntu03e3O0oSeyWaYmp3i5uwI
      xXoJj+wmX8wzW5lFKsjIIYnju19hNjOD2+1hYuwWoViI7kQPGhoThVskvUlSwTSj06NYVYto
      NIrjOLx6/FVsxyYYCCLLMhcuXGDf/n2oioplWei6hu046/YTqVQq/M2P/wYFhXQqTTgUfrYN
      wPDIDT5Z/Pl9q7slTM0iM7xI+747qqPbQbN8K9GKBm8mv0Pfjr4nfSrbEl3X+cdP/hZ398Z9
      +6ZuMj+8uCEDcOvrGboOphu9IByHwkyF/FQRT9hFaiC2riFYvFHlf/7mf1xX+8c0TQzDeGpl
      Ip5VDMMgn8+Ty+VYLC+SyWSYLk/RFexmR2cPLpebK9cv4wv5cXAIeAMM9PQTjcYolUp8dvpT
      4qEEhw4cagadt3J+eqZiAPfS19vPV6N+COkrvi5kgazIjH85Q7grQGGqTCDpJd63PCe6ltfI
      jRewDZu2/YlG45enAKNqss/1Ir09vU/6VLYtqqriET4cqhv+G1mRsS17Q4sF277TjU4IQaQj
      QLjdT62gceFnw4RSflIDsVVdke64zOTkBDt29K75WbquUyqVGr7qFSSXn7WFzdOCqqokk0mS
      ycZi4e5Egnq9zl//w3/lZu0mv9fz+xw9cLR5j3KLOf7Pf/4/8Kpe/tOx/4zP92gq/J/JGMAS
      kiShV0zmzMlmU+/lrwv8CS+esBvbsHEHXEiK1FQINQ2L7HAey7BIDETQqiaqR34qDIBZtdgl
      DvPSweOtB38NhBC48DK+OILi2ZirSgiBadjYhoPLp645uS5JTN+r6qh6FHAc0jvjLIzlmyqk
      96J4ZC5dvETElSC2hg6QqqrNtoGmaS5zuzmOg6bVUZTVn/N8Pt9KCX0M3J19JcsyRw68wO70
      bmYXZmlPtjM5NUkoFOLnv/w57eF2vv/G90nEE4/svmz/mewh2dO/l8unvob21fXWPUEXnqCL
      aq7O/HCOhbE8nqAHISDeH8Hla6yoJEVgb02DqEeKZdh0GTt56Whr8t8IXR1dfDriwCaKYSVF
      MDeywMKtRg3BjhfbsU2H8F0TeaOjmLXqMWpFDdWtYFsOpmbiODT7UJQXaji2TXG+gsujMjk5
      wUD/QPNvDcO4L2tnaXK5VzaiIcW8tmsoHA63xspjZul+9XT30NPdg2mapFIpCoUCQ3uH2DW4
      a91jGIbB3NwckixhGibFYpF9+/bddy9nZmZIp9P3JYI88wbA7/czFDvMlfppZM/a/lZfzEPv
      Sx3UChqVbI14//KHIpj0UZqv4otu35WS4zgwr/Lyy6+1uoptgs1q/oeSfgIJH7IsMXpymtqi
      Rr2kY2omikumnK3SsS/V7OTo3OUKWsK2HIQssAyL+eHFRtFQzURWJEJtjQyO9j0JJEnCk18+
      gf/6g1/zzW98E1i9ybqmaRsOHm/X8fw8seS+83l9zS5g63Hz5k3+9ZfvM7hrkO7UDr44/ylj
      2WF6kn309fSjqirFUpFgMLjiPX7mDQDAob1HGP/0JvW2/IYGuifkYnGiiGXYy2QB3EEX9aLO
      7OUF3AGVYNq/rdxBlmFjlC1e63mr1TxmE4zeuokcWa8j13IkWUJiyafrkBxoyIyXs1Us0yaY
      9HPr61lcfrXxX59K+547yQa27WDpFvWyhifopn3v2u1Ps+X5Zf9+9ZVXuX7jOrIsM7jz/iK/
      mZlpfvX5L/i97/zhMjmBFs8WAwMDnKi+zkR+lOH8Zdr3xfElZCYrw1w/exHJlnF0gWXY/O63
      /uC+ZILtM3s9QhRF4a2D3+Sfz/93vO3rxzsaMgF2s2n43b+PdAXxJ73U8xoLN/N4Qm7CnY+v
      ecxaLF4uc6DrBQb71986tmgwNz/H2cwXeFKbSwWevb5ANV+7LfNwxy8YSNwxvKF0gPEzM8R7
      wxSmK8v+vpytEusJobg20g4ShFj+nmAwyJ7de1Z8r2HozMzOIvdrfHX+C9586e3NfLUWTxET
      UxPMOmNEB5bn/Hv8Ljy309trpTquXHjFdOznwgAARCNRErRTIbvue23LRlblVVP0VLeCmlYI
      pHyUM7Vmw/l4f2TD1aGPgs54N28ef3tbGKOnhZ+fex9/3+Yfg3pZo+9YZ/Pfq13zjr1J8tMl
      Ih3Lg7yVxRrx3jCyKjXaPc6Vl8UP7sXA2NB5OY7DB7/5gJHaZVJ7I0xlxprFRi2ebrILWWzL
      JpVKAQ0X37mxU4T61t7tL1wvcXzfoRWTFZ4bAwAQ8oYpmRkkZf0J0tRXD94tIYQgmPIRTPmw
      DIuZSwt0HU5txak+EKZttib/TVAqldDkKn4eTChvI9da9SokBxr+XMdxqObrFGbKaFWdzMgi
      bp+LUNpPfrqEN+heVYa6ptU2NJHX63WuzV6i43jDJWW66+Tz+UdaSdzi0TKfmePTk58g4gZC
      EhzSXqa3u5crNy7jaWus6pd6WtxNI1vNoq9jJyOjw/T19T1/QeAlhBCceOFN3vs0Sz2dXzPo
      V87WCKY350MXUsNt9CTzrS1nfaPV4g5jt8YIPqbOb0sVwYG4j0RfBNWjYJs21bxGdqxA+1CC
      mStZug6k79NsB1DV9R/VarXKzz74Cf5uV3MMKgGJ+YW5lgF4SqlWq/zq5L8RHwyiegKNPgVX
      P+TCjbNUShUie7xrzje1fJ3+ZCd9x+6f/OE5MgDQiAV85+Uf8IuTP2XBNYMrIq948WzdRvFu
      Tr5ACIG0yUySLUc4T33Bj2VZt6/lo3VZ2LbN6MJ11I5H+wjYtkM5VyE3XsQf9xLrDjW7gsmq
      jMuroHoa49A27RUnf9u0SQc7VryvjRx/jYmpCb669il6oEyks+FK0so6xZE6xv6NuY9abD9+
      +tH7BLs9KLd7lQghCHf6cftl/GL1nevSWAkkfFyYOkWtVqWjvfO+hcBzZQCgoeH9vRM/ZOzW
      KCdHPqceKaIGlk/2roBKfqq0LKC3HkISCEUwcWoOBPhjXuL94a0+/TWRpaf/dhqG0ezR+ijR
      dZ2MMU2UzTX4WEJWZEzdWrN5jOM4ZEcXEUKQ7IuSny4xczWLYzskB2K4/eptLRmYH15YUSjO
      cRzMGYXjJ15Z0QD85Ff/Qs6axw5ouDpVwv47x7Ath8O9x9g9sHKwuMX2xDAMFhYWuHzjEoXq
      In2RrmWve4Mry4qvND6EEIS7/IzmrjB6boQDA4fp7uymVCoRDAafPwMAjYvSt6OfHd29XB+5
      xsnRzxDtRlM51LGcBwrmdh5q+P8dx2H6bGZLz3kjBJTQU736h4aBfhw4joNW0cmO5UE4xHsi
      m7p2bbvjzF5foGNPYsUqc9t2mLmSQXUrJPobx16SezANi8nzcyT6IgRiPgLxhrZQ+57l2kJa
      xUDN+fn2C99dUap5IbfAvDpOuDcA3L9YkVWJYrb4yPoJt9h6TNPkw9O/pFbU0EMVeo60b8lx
      AzEfxOBc5gsujp0l7krxwgtHn08DsIQkSewZ3MvunXv49We/ZDZyEySYuZil77WOhzq2O6RS
      nKkQan9M7fYciHqf7d4GW4kkSRh5G3/KiyQJJs7NISRopPU3XGkNSV5w+13Ee8MorjsuQ9uy
      8YRcXP1NI45gmw7hjgDBpA9Jkpi9niXZF0X13q/Lo6gykfYgWllvGICEb5kWUD2n46/GOdw2
      xK43dq2Yvuc4Dicvf06oY/XxZcwL3jjx5qqvt9h+TE9PU3blscIWHr8bWdlaJd1QMoCTcJif
      neSLM9rzbQCWEELw1vF3+PCU4MLMaQIpLws3C6R2P1jgTAhBvD/C1Nn5x2YA9Gk4cOzgY/ms
      ZwFVVRvNOW43XPFHvbDKBkCr6OTGCug1E72mk58qN+QVQi5cPrXh/hMOM1eyFKbdCEki1hVa
      s7G8rEoYmgnclgS4XXOi5U1eTr5Df+/AmjsSIQQKa9e0qLJrXRXRFtsL3dCQFZlw8sFckxtB
      CEGwzYtpl1oGYAlZlnn7pd/i1k9HcQ04TJ+f33RA9e40rEbp/+PLve52DbSae28CSZLoje9k
      WDvX0N9Z4za7/S7ablfx5qdLhNoCxHvCDf0V3cIybDwBF7VCneJchfSu9XdilVyNaNedIJ7j
      OGgFk72+F9ad/JdIBFPkjMlV4xBhObqtezG0WE6xWOTy/DkCnY++cntp0dGqDrkLIQQhbxgh
      IJD0UZpbXyLYcRzK2SrzN3JMX8xw69Qs0xcy5MYLBJOPrwTfr/qfev//4+bQviPYs5tTwnUc
      UFwystJwB6lupdns3Rv2YGgmtaK27nFMw0a+HTuwTBt9UnA08jqH976w4fvY072D8vzKY7Re
      1Olr27nlY0LXV5ZWb/HgOI7D3Pwcn136EH+H67E+x60dwD14ZR+6KDRW/2stC29TzlSp5XWC
      KT+ekAshCSzTZuyzaToOrd8wZCuozRrsPtjK9NgssixztPcVThV+s2rToBVZ4wFt35tkfiRH
      dbFGrGd1hU1PwEW9ohNwK9Rumfz+if+waf2mYDCItYqt0Rcseoc21wQot5jDtmwSidV1iTRd
      awWVtwDLshgZHWZ4+joWBqa7TrgziBCPd03eMgD34FY9DZVGxH1aQCtRmCrTeSi1rLBMViRi
      faE1pYC3ClOzGAocIRx+vCmnzwqDA4Nc/vAcVrC8phtoOatr98iKRNuuODNXsuSnS0Q7V87V
      rixUie9o3DPhahT8bNYAnDp7kkjPyn8TU9ObTqUtFApEI2urUAYDj843/SwzOTVJLBrj+vXr
      FCsFcnoGJeng7/MCrts/j5+WC+geAr4glmER7giwOFFaU6hrSTNopapid8BFvfRot8uO46DM
      +3npcEv3/2F4dehNqvNbd6+EEKR2xihnazj2/eNHrxqoPrV5z7wdKmevn9rUZ8zMTnOzdnnF
      FFRTs+iJ9m96TPT19hH7LIFPAAAdwElEQVSJbKIpQosN4TgO1VqFn515j/ngGGZ3kdCAG3/4
      yau0tnYA91DXakgBCSEJFFVuqD0aFvPXcnjDbhS3jDvoInNjEUu38MdXvommZmFWLcrZGopH
      wu3fet+epdu0e9paQl8PSTKZpOvmAFlzfMUJdYmF8Ty5iSLpXetnh8mqRLQryOSFOVx+F/6I
      B0/QhW07zA/n6Nx/RzNKkgTDM9f5Lee3NzxGzt84i6d95Ur2wmSFvW/t3dBxWjxaLl25xEIx
      Q9GbIbpjdbG/J0Vr5riHcr3UFIvzhN0s3iqSuZ4jsTOCJ+RCr5mMfDRJcleUxM4oetVccZUX
      SHgJpH3UixqFyQqZG4tbcn6O42DUTIyKSVuxj9eOvr4lx33eeWHoGEZ2bVnmcrbR+SuYXD/b
      SgiBrEg4toNt2Wh1ncxYnuHPJugYSt63a3RHFDRt/eAx3B4D6KtKQ8TVdMtPvw2wLIsz179k
      QZlppBlvQ1o7gLuoVCrM6VN4RSN1LtIZYO5KrtH71auCV8UTdhNM+VA9Ci6villr9A1ODC6v
      JJUUCX/c29whTJyZe2CdHsdxqGY1rHGZ7q4eXHgQErx69ESr2ccW4XF7cHSxoqriEkJuZP2s
      dw+XMsPKuRrdh9uW9wN2QK+bzcyhJWzd2VT3roHULs4UPsEbXn4cy7Dpi/a1XILbgFwuR7Dd
      Rzi1/Vb+S7QMwF14PJ5lmT+SIhFI+zDqd8S0hBDLCnxCHX7KGcHspQU8IRfhzsCKfQQkSZC5
      vkiow48nuLEH3XEc6gsGlbk6x7pPcPQPjq4oCdDi4XEcZ83sns2gVw2K85XGSv+eY0a7Q+Ru
      FWjfuzxDzNEElmVtuHCrp3sHn3z6y/sMQHVeY+Dgzof7Ai22hMxCBndwez+vLQNwF6ZpYjs2
      IOE4Dou3imhlg/SetX2+gaQPX8xDNVdn+kKGYNJPuHO51U/tieHYDvPXcnQdSa97Lrbl4Eyp
      fHv/90kcSzQqP1tVnY8MRVGQtsAjqlV1Zq9lad99/+QP4PKpmPfIhju2QyS0OS0i27pTR3A3
      XiPYkn7eJtS0CrJ/exfitWIAd1Gv1xFqY/tv6Ta1fJ22ofiGGoZLskQg6aPzUApJFUx+PUe9
      cMenu9Q7eC15gCVMzSKR6+aP3/qfaG9rR1XV1uT/iJFlmaiydt1GvahjGndSex3HQb9rd2ho
      JrNXFug6mMblX/k+CyGwbjcbsi2b0mSdUKaN7xz/4aaqdv1+P2mpB1O7c6z8RJnBtqENH6PF
      o2VHZy+VbO1Jn8aatGaVu6jVazhqo7+rZVi4A+41fcIr0egS5scX8zJ3eYGOg3cmlXpRpzRX
      IZj2442s7AZybIdALsE3X3+3ld3zmOlK9nC+NIUn6Frxnrt8KrNXsnQdTCOEID9dorJQwzJt
      Qik/5YUqib7IqgJeS7EBrWygL1qkrR1848gxwqHVC8ZWQ5IkfvvEdzh97iQT86O0+bt559AQ
      kXXy+Fs8HorFIpOTU1BStnWPjpYBuAtN05DUxo2SXTJG3XzgYxWmSsR6lxcB1Ys66aE4i7eK
      eCMrrzb1ssGLHQdbk/8ToLO9i5Nfm3iCq2TQCIFt2diWjWM7VHI1Og+kmv+fGoituvKHRoOW
      0kIFo2ZSmdR54Z1jRMIPnnevyAovv/AKx+yXW+Nlm+Hz+cjn80zenMbX24PLsz1jAS0DcBeZ
      /DyKr7F6s83GTmAzq/8lbNumtqgR23GnOtcyLMy6iScUpLyGxpClO/i8LVG3J0EwEMRrBYHV
      K7gdG+auL+AAbbviTVGtlVJDmz7+22OoOF8hnA5SmKiQLy9umVBba/LffiiKQiKZoN0VR3Vv
      32l2+57ZE2A8O4Lc1QgAz1/LEel+sLJ3o2pSK2hMn8+geGRsy8HSLWK9ITLXFwl3rH5cS7Op
      VtcXoWux9ciyTNLTRt6ZXPU93YfSmLqFy6uuGRu6d/IHiPeEmbmSxRtxE48kH1vzmxZPhj27
      93Djk0vb1v0DLQPQpFqtkrMzBIWHWkHDHXStWuW7Hu6Ai51vdjckfss6sipTyVYpTJZJ7oqt
      3UbQcFq6Pk+QfYP7+fXIOHIEjJqBN7R8kpYUCbe6sZX7vbtHWZXpOtjIAHNPRVspvc84iqLQ
      n9jNdGUEj//Rtjh9UFp7x9sM37yBJ6VgmTa5sQKJgYfXRBFC4Am6qWRrGFWT9FB8zckfB7xy
      YE01xhaPllQyzcvtbzF9PsP05SzlbBVTN6kWa8jqxh8X27apLNaaPYDvRisbDLTt3upTb7EN
      2b1zD7U5Y/03PiFaBuA2+eoikiqoLNTwJ7auuraar2MZFonB6LpbQWtO5ruHN5cO2GJrWeoX
      vbt9H10HUpQXakxfylKardK1P7Xh7Xx+ukQ5WyXSEVxmBLSSwYA4wO5dLQPwPODxeOgM9mLq
      D55Q8ihpGYDbRH0xLN3GNu01BcE2g141KM5UiPWun+anFQ1eSB8nHm+t/p80QgiO7DqGWbZp
      2x2n50gb6V0bqwcBMHWLaqFOejCO6lUwb7d+tHSLDmOAYwdf3tZ+4RZbSzrRRrVYf9KnsSIt
      A3CbfC2HpDRa/K2l975RbMtm6uw8pmZRy2vrZhN5C2F2DbRWhduFtrY2omZ6RaG/9ZAVCcdy
      yI7nmb6UIT3YMB7GvODY/pZ09/NGJBTGqG5PN1DLANxmIj+OpAjqeY1gamNpmEKIVR9mvWrg
      jXjoPJSkPFclO5LHXmUyqS8avDjwSqvad5txeOeL1HKbf3CFJGjfm8SsW3QfSuMOuNDKBvtT
      Rzfd9KXF008gEMRlbs/73jIAt/EqPmr5RvbPRlim8LiCEajlNYJpX6M5yJ4YgaSPmcuZZdIB
      AGbNYrf7IH09m2vf1+LR09XZTaAWe6BaEFmRaNvdqBMw6iZtei/7du9/BGfZYrujKArdkT70
      mvFAY2klHMehnKuQvZVj8uos2VsPJjffWnLexq8GqARU8pOlB/r7e/O+tZJOuPNOvr837KY9
      kGD+2iKBpJdA0odeNtinHuPo/mMtt8A25cCOw3yx+Cu84QdL49MqBt3GLl598fVWwdZzzO7B
      PVw7dZ5Ub/yB/t4yLfSagVE3MYo2SVc7+zv2E+4OEwqFKFfKfH3lFIv1BUyhEekIom6g+rhl
      AG6jyI3CHusepcaNcp9ldwS2YSO572T0SLJEem+M7I08kizRbvRx9ERr8t+uOI6Dbjx4q0it
      ZDAg7efFF1pSDc87DzqOtKpObc6k3ddNOBQh3BYieSCFoizvSxEJR3jr5d/CsixM0+Tzs59i
      JksoLuW+47l9d7wcLQNwm9nqFCImcPkUtIpxX8OOu9lIQxDLsBArPPNL0gHUJA4MHm5N/tuc
      sbkRvO2bX/1rBZPdniMcGTrausct0DSt0WJ2ExTnK/Sog+x9aWhDVeNLkvGKorCnd4hPrv2a
      RP+dotLCXJncZJ6+o13N37WWJdxevd9e9YfaA+QnVncDrfYw3/17x3JQPAryKjfc0eBY+wm6
      u7of7sRbPFKEEBzd+xK17P2B4CUjb9TN5q7RqJuURusw7uVw6FVe2Pdia/JvQaVS4cPTvyKc
      Dq34uqEZ1Ep1aqU61WKNaqFGOVehU+nj8IEjDyQZ0pZu4+iO45QyFaCRlBK32+9TGWjtAIBs
      NktZyRPEh2M7KzbaWGIt99DS723LwVXxYZQsJI9YVkFq6TYHOl7g4J7DW/slWjwSfF4/9Qkb
      JWCiehWMqomWN/HLIdpcnXhUL/VajYVihrZgmv0vHyQUDLUm/hZNhBAoPglJWh4ndByH4nSV
      Lk8/QV9jzEhCIISEoij09PQ88DgSQtDb08fF0XNoPp1IrQ2P18t0fQzLsJqLU1GtVh2v9/nt
      K+s4Dr/45N/IpsYRQjB9MUNqMIbiXn27tiEX0JRCv3c3juJwZeEswpYwFI1OTy+//fJ3W027
      nyJ0Xef0hZNMFsbY236QrvZufD5f6x622DCFQoEPv/4VRTNHMBFAkiSUgo/j+18jGn10PRw+
      +uxD8tUc337ze3x68iOyCwtIMYtoTyNB5bk3AJqm8Tcf/he8O2TqeY1qoU68d20doI1YZcdx
      qE0bfG/fHxCPxZEkCV3XcblcrdXhU8jdQf7W/WvxIDiOg6ZpzMxMgxD07uh95GPJcRwsy6JQ
      KPDlyS/o6erh4sJp0v0NxYHn2gXkOA5Xrl9BSd5260gCS7e35NhCCFAdtLrW1PZxu7enImCL
      9WlN+i0eFiEEHo+Hvr7+x/qZiqIwMTnB2MxNFEXlYNcxbk5cw9/ter53AJZl8f998HdYPY1A
      yezlBULtfnzRjUXc18O2HJxJlT988z+0pH9btGjxxDAMg1q9hs/rQ1EUpmem+Grqo+c7C2hq
      aoqinAMaBTuyKm1o8oeNdQqTZIHBg+eRP0tYlkW9vj0FsVq0eNZRVZVQMNSUm0nEk+hF6/k2
      AKdvfIkn2bggRs1s5OdvgvWMgKlZ7I4daK3+gVKptGVl8C1atHg4FEUh5kk83wbArXiQbzdo
      8QRVLH31XrCr4ThO82f5C+DMyxxqpXsCEIlEeF5djS1abDckSeLEC289v0HgWq2GR/aR0y1k
      l4ziVtBKxqZlIO59v1bU0XImHe4dvHr4jZb6Y4sWLbYlHo/n+TUAXq+X/p4BRicv4UvIzF3N
      Ee/ffC/euS8LpBIpAr4QQTVEZ7qb7qFuPG5PS/+lRYsW25rn1gAAeD3eZsOPWr5OcjCy6XQ/
      b9TD9177d61G7i1atHjqeG6XqLZt8/HZ3+CJuhtuHEkgyZu7HI7jEFdS+P0bayDT4g6GsT07
      JLVo8Tzx3BqAarVKWV1EViWMqok7uH6mjuM46GUD27od8HVAUqRWE/cHQNNaKaEtWjxpnlsX
      UKVawXIZgJvqYn1DDT9swyaa7UT1KExURwmrUV479EarSvQBCASC67+pRYsWj5Tn1gD4fX60
      WZv6bIW6raF4NrAZkgT+oI83XnwbWZZbE3+LFi2eap5bF9CZy6cwLYM+/24y1xZxBf7/9u6s
      Oa7jugP4v+86OwCRxEIqEk2KtCXLESUxIlOVRSpXKonLD67yQz6Yvob9kmc75TiOZYtRFFsy
      TSekxE0UCXCZ5c7duzsPcl8OgBlgAM5gBnP/vypUEaiZwSUw6NN9bp/T+6eALFvgTu8W/u1X
      P8dvPvn1nofCExHNu9IGgCfBFkRqo915htopH0unG/s+RwiBIOzh1oP/hWDan4iOuVKmgLTW
      6AU9+Khg5fQSzpxdRftuDyuvDj+xZ/B5J5ZP4r03/wavnb9wRFdLRDQdpQwAm5ubuPzaVWit
      cf3R7+C/5OLZnS6WX2lhr4xO0s7wwbl/xNlXzh7ZtRIRTUspA8Dq6ip++tOfIMty6NMxVs8s
      Iw0zABrAHhFAoCgcIyI67kp3D0BrjRs3buDOvbto956h96iP8EmMpJeh81WwxxOBatTE+tr6
      0V0sEdEUlXIFsL6+jorvw3M9tC54qCx7aKxV0VwbXtEbP8lQD5fxxum32NGSiBZG6QKAEAKP
      Hj1Cnkk8TZ+iqdZgOzaEbQ09DyDpZbi8/Lf47pU32dyNiBZK6UY0rTX+85NfIvcTwNJYerkB
      rTVUKmFZuwNApd3EGxe/y8GfiBZO6VYA9+7dQyA6OP/+y+hvRXB8+5sAIIff3I1EH2maMvVD
      RAundNPaR5uP8NcX/h7pTYFT31kBAPS3IjRODT+4xT9j4V9/+xNc+6+PEYbhUV4qEdFUlS4A
      XH73Mi68dgF2Q8ByBLTSaD8I0FoffgNYCAG5EeKG/wl+/6f/OeKrJSKantKlgDa3NvHhhx8i
      SkM079Vx9v01WI6AWx39oxBCQOUKVY9pICJaHKVbAXz22e/RbrehLY2TF5a/2fmjsPtQ9wEy
      U1gO13Dx3HeO8EqJiKardCuAh18/hN/00FipofVqFb2tEI1T1ZFdPfNIYTV8Be//1ffhe/uf
      GUBUZmYixS65x0PpVgDLKyuon6jAP+Hg2Z0uwqcRWhujO4H6j5v4hyv/xMGfaAxSSnS7XYRh
      uOeqmuZD6VYAUko4VRu9r0NIKXH+717e8/GrlQ3WABCNSQgB27Y5+B8TpRvZvnX2LMIHKfyK
      D8sefaCL1hrxA4k3Lr55xFdIdHzZto1Go4F6vc400DFQuhVAGEVYXlpGO3gK7bmIggRCA5Xm
      8xSPVhrWwyp+dOmHWF5ameHVEhFNT+lWAN++eBECFuJuiubJOtq3e9j847Ntj8ljiTfX3sbK
      8ktjzWKklHjWfgYpJZe+RHRslG4F4Hk+0iTF+to6ZJZj5VtLeHq3s+0xtmdhs/0QwPfGek0h
      BO7euYvP//AZcp2jWq9iubmMK5evYmlpaQr/CyKiF1e6ACClRKPeQBiF6N3uofNlH9UzLvJE
      FmfB2I6FO90voJQa6wZwv9/HrS9u4Y9f/AHLZ5YQd2P4D328+hdnGQCIaG6VLgC0Wi1sbGzg
      42sfQ7iAZVvYWH8JT251oLWCUhoyVYASuH37Ns6dO7fva9ZqNWih8O733sP1m5/DVi5+/ON/
      Geu5RESzIsIw1GXrdLn1eAvXrl3Dbz/7CI0zPmQPcFoCJ7+9jHgzR//rGBvNl3Hlnas4f/78
      WK9pcv8Pvn6AaqWKlZUV7oIgorlWupvAAOB7Hu5/dQ++rqD7VQiv5cDPa2h/GiN9oHDq7Sae
      NL7Cn27dGPumrhDfbCndWN9As9nk4E9Ec6+UAaDZbOGtv7yEOEwgE4X27QCqnuHk6RNYWmmh
      fzcDtMb9J3eQZdmBXtuyLLiuO6UrJyKanFIGACEE3n3nXXzw/gdwKja0o6BSjf7TCHbqodaq
      QNgW9OkYv/rvX3JrJxEtpFIGAABwHAevv/461hqnIWOFr3/3BM8etHH//n0E/QBaaQhb4L7z
      f/jk82tQSs36kscmpUQURQxcRLSnUt4EHvT48WP84t9/gWuffgy34cByBarLPtI4xcalE2ie
      qiMNctTbKzhV3cBbr1+C7/vwPA+2bc/68kdK0xR5nqNaHd3plIjKrfQBAADyPMdHv/kIP/v5
      zxCEPTgVG17LQR4prJxrwHYtNFbqqMsW3nnlKrY2t3Dp0qW53uM/OPtnACCiYRgA/kwphTt3
      7+DmzZv49af/gaDdx8ryS3j78iVEnRhX3ruKtdU1OE7pSieIaEExAOyglMLjx4/x5e0vsfV4
      C5sPH+Gff/ADbKxvzPrSiIgmitPZHSzLwurqKlZXVwEA169f52EwRLSQuAIgIiqp0m4DJSIq
      OwYAIqKSYgAgIiopBgAiopJiACAiKikGACKikmIAICIqKQYAIqKSYgAgIiopBgAiopJiACAi
      KikGACKikmIAICIqKQYAIqKSYgAgIiopBgAiopJiACAiKikGACKikmIAICIqKQaAKdNaI8sy
      SClnfSlERNswAEyB1hpJkqDT6UBKiTzPkabprC+LiGgbZ9YXsEi01kjTFFEUQWuNZrMJ27Zh
      2/asL42IaBeuAF6Q1hoAIKVEp9NBv98HALiuizAMIYQoPoiI5gkDwCEppaC1Lj6yLINSCgBg
      WRY8zyseQ0Q0j5gCOqQgCFCv1yGEQBiGSJIEtVoNrutCaw3HceA4/PES0fziCHUIWmtYloUg
      CIpZv+M48H1/W6rHsrjAIppHWmumZcEAcGjmzWNZFhqNBoQQfFMRzTmtNaIogpSy+LstM05R
      DylJEkgpYVnWtg8iml9aa8RxPPLenFKqVDU7XAEcQpZl2/6dpil835/hFRHRQZj6HCEEkiSB
      EAKu66Lf70MIgWazCSEE4jhGpVI58ErBBJh5X2EwAByAKfCKomjb183nDAI0r7TWyPO8mN1q
      raGUguM48Dxv7geqSdNao9frbftaHMfFvzudDmzbLoLEzvt7o14zTVOkaQqlFCzLQr1en2pm
      YFSgGVzh7HXdDAAHIKVEGIa7vq6UQr/fh+u6TAPR3DHv28GVq5EkCbIsK3a0LTKl1K7J2ygm
      YAIodvl5ngfXdUfu7jPjgGF+7tP82SqlEIZhUXA6GOillLBtG/V6feQ1MwAcwH7tHPI8h+d5
      R3Q1ROMJgmDPvHaapsjzvKhcn2dZliGOY2RZBiEELMtCtVqF67rFIKu1hpSy2JRhWRaEEMiy
      DEmSHOr7SikRRRGiKCrqfHzf3/bzGlxBGGbM8DwPlmXBtu0DBQMpZbGqAFBsNR/8nlmWDQ3u
      5vndbheWZUEpBdd1i0BmWRYDwF7yPC9+Yd1ut5gRjGK2hBLNE8dx9r2xqZSa+xVAmqYIgqD4
      3Az0QRCgUqnAtu1iMJxmAaZSCnEcI0kStFotSCmLldSo6zYDuOM4aDQaQzMF/X4fWZbBcRxY
      loU8z3eNOUEQYGlpqRjQx+0xZsamwWDhui4DwCha66LYy3GcfQd313V5D4DmRhzHkFIWM89x
      RFFUFDDO40pgr//HsNn3tGmt0el0DvScPM/R6/XgeV5xH8asVswYs9egrrVGGIZwHAd5nr9Q
      oMuyjAFgFDMjyvMcYRjuGQCEEKjVanM/g6LFZrYlm/dhkiTFDpdxDD6+2WzORSV7kiTFLHhR
      OuqadNJhDa4oXtTsf8NzKs9z1Gq1otfPXszyk2hWlFLodruwbRvVanXbhOWgs0SzQ8asBizL
      guM4RR7d7B4yAWJaEx9TtMXU6vQwAIwweDO30Wig2+3O8GqIhlNKIcuyogW5STG8KNPgcFRe
      2zCBwHEcuK5bpDQGb8oe9vtz8J8+BoARBt+87OhJ82Rwv/l+A/S0DbtRCQBLS0uHWhXneV6k
      omj6GAAmoEyl4zRbWZah3+/P/cw4y7IDB4A4jofW2dD0MACMYb8VgMmLsgiMpsUUMR2XmXGW
      ZfB9v0gJ5Xm+a9/8zsdz8D96DAB/ZmZUO0/vMu0f9mLypdwGSuNSShW5+p2FTMMe2+12537W
      PyjLMnQ6nW3XnGUZms3m0InSfjU2NB2csuL5cY7tdhtBEOzqozHOPYBZ52JpvpmiJaVUUUhk
      yvWDIBi51VhrfSxSPsPsvGbTGmHn39PgHng6WlwB4JsCE/OmNMUVZjYmpRxrNwNbQNAo46Rv
      TCVpo9GA4zi73oOLwlTpmv9bmqZFf346eqUPAGZm5nke0jQtPjftH8Z5Y7quu60/Bx0/5j6O
      bdsTL4BK03Ss3L3Jl2dZVhxYAgC2bS/MDNl0HjU5fw78s1XKALCzhWocx9sq60w/Dm7/nC9m
      B4xt2xM9zanf7xcDtGmWZVI1pvGX6c0ihDhQQ6+DHjBiukmam6VKqYXKj5vBn7P++VC6AGDe
      fM1mE8DwKkbzB2caLo3zmnmecxUwRWbv+2AOvVKpABjeC30wzTDYJdK0OrBtu0j9Dc7OhxU/
      xXEMx3GKr1er1V2HhAxOKszrmWKmw0wkpJTo9XpFn5hFMYuePTSaCMNQV6vVWV/HkVFKFYe6
      mxu8QRDs+qMfd/A3XNflGaNTMiqHbn6Hphe6+Xccx8VsHdgeIAZnnWY3ymHSKybtZ1okmP4u
      tm0vTM8aWnylWwEMbkEzpfPDltgHHRS4C+hwBme35ndhBmmTBhl1hqv5HY1KJew3c36RvPqo
      NglMa9BxUroAADxPBZiD3Sf5ulwBjM8c7mFWYgyiREerVAFASlkc5GDbNlzXnege5EXK1U5b
      nue7ai6I6GiVKgCYGWar1SrSC3meL8wWu+PABGCmSohmr1QBwOwaAbafGzopnM3uzZypSkTz
      oVQBwMjzHFEUTTznzACwN876iebLkQSAnQPjrG+UhmG4UMU1xwFvkBPNn4kHgGG7OUyjK1N8
      Y9s2arXapL/12GzbnkqBDVcAo43bDoGIjs7EA0CapkU5+06m+2GWZbAsa1tO/ijVajXUarVi
      G+KkVgMMAM+ZfjamAya3eBLNn4kGgCRJxj7U4SjywaPSDuZrpufLpAJAGIZwXbfUB8OYGgse
      7kE0/yYaAAbbKu9HSok0TYty/sEP4HkTLVNqfxh5niNNU0gpUavVhnZ5nGRe2lQWl7U1tKmO
      Zb8XouNhogHgIDNpUwhkDAYAy7KK1IFlWajVanuemDTKYGOuXq+Her2+63XMKmBS2xMPcxD2
      cZYkSVHNu2iNy4gWnTPJSlhzmMphjHqeOTHJHJt3kPSK6e9vGrsFQVD0I/c8rxisJ9n6WQhR
      msIypRT6/T4HfaJjSjx9+pR/vUREJfT/4PxmsqRNMNsAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
  <_.fcp.VizExtensions.true...referenced-extensions>
    <_.fcp.VizExtensions.true...referenced-extension>
      <manifest manifest-version='0.1'>
        <worksheet-extension extension-version='1.0.0' id='com.tableau.extension.table'>
          <default-locale>en_US</default-locale>
          <name resource-id='name' />
          <description>Table</description>
          <author email='github@tableau.com' name='tableau' organization='tableau' website='https://www.tableau.com' />
          <min-api-version>1.11</min-api-version>
          <source-location>
            <url>https://tableau-vizext-prod.s3.us-east-2.amazonaws.com/table-network/table.html</url>
          </source-location>
          <icon />
          <context-menu>
            <configure-context-menu-item />
          </context-menu>
        </worksheet-extension>
        <resources>
          <resource id='name'>
            <text locale='en_US'>Tableau Table</text>
          </resource>
        </resources>
      </manifest>
      <referenced-views>
        <referenced-view instances='1' viewId='Total Cases vs Total Deaths by Country' />
      </referenced-views>
    </_.fcp.VizExtensions.true...referenced-extension>
  </_.fcp.VizExtensions.true...referenced-extensions>
</workbook>

<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <Extensions />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SpecificWebTargetsForActions />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <_.fcp.VizExtensions.true...VizExtensions />
    <_.fcp.VizExtensionsDupEncodingUUID.true...VizExtensionsDupEncodingUUID />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Covid-19DashboardLuisCarabajo' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' inline='true' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid_Vaccinations_Deaths_Project' name='excel-direct.1ps880f1kevrt811w66vd0poqls0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/luis-c/Downloads/Covid_Vaccinations_Deaths_Project.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='excel-direct.1ps880f1kevrt811w66vd0poqls0' name='CovidDeaths' table='[CovidDeaths$]' type='table'>
            <columns gridOrigin='A1:Z10001:no:A1:Z10001:0' header='yes' outcome='6'>
              <column datatype='string' name='iso_code' ordinal='0' />
              <column datatype='string' name='continent' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='integer' name='population' ordinal='4' />
              <column datatype='integer' name='total_cases' ordinal='5' />
              <column datatype='integer' name='new_cases' ordinal='6' />
              <column datatype='real' name='new_cases_smoothed' ordinal='7' />
              <column datatype='integer' name='total_deaths' ordinal='8' />
              <column datatype='integer' name='new_deaths' ordinal='9' />
              <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
              <column datatype='real' name='total_cases_per_million' ordinal='11' />
              <column datatype='real' name='new_cases_per_million' ordinal='12' />
              <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
              <column datatype='real' name='total_deaths_per_million' ordinal='14' />
              <column datatype='real' name='new_deaths_per_million' ordinal='15' />
              <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
              <column datatype='real' name='reproduction_rate' ordinal='17' />
              <column datatype='integer' name='icu_patients' ordinal='18' />
              <column datatype='real' name='icu_patients_per_million' ordinal='19' />
              <column datatype='integer' name='hosp_patients' ordinal='20' />
              <column datatype='real' name='hosp_patients_per_million' ordinal='21' />
              <column datatype='string' name='weekly_icu_admissions' ordinal='22' />
              <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='23' />
              <column datatype='real' name='weekly_hosp_admissions' ordinal='24' />
              <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='25' />
            </columns>
          </relation>
          <relation connection='excel-direct.1ps880f1kevrt811w66vd0poqls0' name='CovidVaccinations' table='[CovidVaccinations$]' type='table'>
            <columns gridOrigin='A1:AK10001:no:A1:AK10001:0' header='yes' outcome='6'>
              <column datatype='string' name='iso_code' ordinal='0' />
              <column datatype='string' name='continent' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='integer' name='new_tests' ordinal='4' />
              <column datatype='integer' name='total_tests' ordinal='5' />
              <column datatype='real' name='total_tests_per_thousand' ordinal='6' />
              <column datatype='real' name='new_tests_per_thousand' ordinal='7' />
              <column datatype='integer' name='new_tests_smoothed' ordinal='8' />
              <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='9' />
              <column datatype='real' name='positive_rate' ordinal='10' />
              <column datatype='real' name='tests_per_case' ordinal='11' />
              <column datatype='string' name='tests_units' ordinal='12' />
              <column datatype='integer' name='total_vaccinations' ordinal='13' />
              <column datatype='integer' name='people_vaccinated' ordinal='14' />
              <column datatype='integer' name='people_fully_vaccinated' ordinal='15' />
              <column datatype='integer' name='new_vaccinations' ordinal='16' />
              <column datatype='integer' name='new_vaccinations_smoothed' ordinal='17' />
              <column datatype='real' name='total_vaccinations_per_hundred' ordinal='18' />
              <column datatype='real' name='people_vaccinated_per_hundred' ordinal='19' />
              <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='20' />
              <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='21' />
              <column datatype='real' name='stringency_index' ordinal='22' />
              <column datatype='real' name='population_density' ordinal='23' />
              <column datatype='real' name='median_age' ordinal='24' />
              <column datatype='real' name='aged_65_older' ordinal='25' />
              <column datatype='real' name='aged_70_older' ordinal='26' />
              <column datatype='real' name='gdp_per_capita' ordinal='27' />
              <column datatype='real' name='extreme_poverty' ordinal='28' />
              <column datatype='real' name='cardiovasc_death_rate' ordinal='29' />
              <column datatype='real' name='diabetes_prevalence' ordinal='30' />
              <column datatype='real' name='female_smokers' ordinal='31' />
              <column datatype='real' name='male_smokers' ordinal='32' />
              <column datatype='real' name='handwashing_facilities' ordinal='33' />
              <column datatype='real' name='hospital_beds_per_thousand' ordinal='34' />
              <column datatype='real' name='life_expectancy' ordinal='35' />
              <column datatype='real' name='human_development_index' ordinal='36' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[aged_65_older]' value='[CovidVaccinations].[aged_65_older]' />
          <map key='[aged_70_older]' value='[CovidVaccinations].[aged_70_older]' />
          <map key='[cardiovasc_death_rate]' value='[CovidVaccinations].[cardiovasc_death_rate]' />
          <map key='[continent (CovidVaccinations)]' value='[CovidVaccinations].[continent]' />
          <map key='[continent]' value='[CovidDeaths].[continent]' />
          <map key='[date (CovidVaccinations)]' value='[CovidVaccinations].[date]' />
          <map key='[date]' value='[CovidDeaths].[date]' />
          <map key='[diabetes_prevalence]' value='[CovidVaccinations].[diabetes_prevalence]' />
          <map key='[extreme_poverty]' value='[CovidVaccinations].[extreme_poverty]' />
          <map key='[female_smokers]' value='[CovidVaccinations].[female_smokers]' />
          <map key='[gdp_per_capita]' value='[CovidVaccinations].[gdp_per_capita]' />
          <map key='[handwashing_facilities]' value='[CovidVaccinations].[handwashing_facilities]' />
          <map key='[hosp_patients]' value='[CovidDeaths].[hosp_patients]' />
          <map key='[hosp_patients_per_million]' value='[CovidDeaths].[hosp_patients_per_million]' />
          <map key='[hospital_beds_per_thousand]' value='[CovidVaccinations].[hospital_beds_per_thousand]' />
          <map key='[human_development_index]' value='[CovidVaccinations].[human_development_index]' />
          <map key='[icu_patients]' value='[CovidDeaths].[icu_patients]' />
          <map key='[icu_patients_per_million]' value='[CovidDeaths].[icu_patients_per_million]' />
          <map key='[iso_code (CovidVaccinations)]' value='[CovidVaccinations].[iso_code]' />
          <map key='[iso_code]' value='[CovidDeaths].[iso_code]' />
          <map key='[life_expectancy]' value='[CovidVaccinations].[life_expectancy]' />
          <map key='[location (CovidVaccinations)]' value='[CovidVaccinations].[location]' />
          <map key='[location]' value='[CovidDeaths].[location]' />
          <map key='[male_smokers]' value='[CovidVaccinations].[male_smokers]' />
          <map key='[median_age]' value='[CovidVaccinations].[median_age]' />
          <map key='[new_cases]' value='[CovidDeaths].[new_cases]' />
          <map key='[new_cases_per_million]' value='[CovidDeaths].[new_cases_per_million]' />
          <map key='[new_cases_smoothed]' value='[CovidDeaths].[new_cases_smoothed]' />
          <map key='[new_cases_smoothed_per_million]' value='[CovidDeaths].[new_cases_smoothed_per_million]' />
          <map key='[new_deaths]' value='[CovidDeaths].[new_deaths]' />
          <map key='[new_deaths_per_million]' value='[CovidDeaths].[new_deaths_per_million]' />
          <map key='[new_deaths_smoothed]' value='[CovidDeaths].[new_deaths_smoothed]' />
          <map key='[new_deaths_smoothed_per_million]' value='[CovidDeaths].[new_deaths_smoothed_per_million]' />
          <map key='[new_tests]' value='[CovidVaccinations].[new_tests]' />
          <map key='[new_tests_per_thousand]' value='[CovidVaccinations].[new_tests_per_thousand]' />
          <map key='[new_tests_smoothed]' value='[CovidVaccinations].[new_tests_smoothed]' />
          <map key='[new_tests_smoothed_per_thousand]' value='[CovidVaccinations].[new_tests_smoothed_per_thousand]' />
          <map key='[new_vaccinations]' value='[CovidVaccinations].[new_vaccinations]' />
          <map key='[new_vaccinations_smoothed]' value='[CovidVaccinations].[new_vaccinations_smoothed]' />
          <map key='[new_vaccinations_smoothed_per_million]' value='[CovidVaccinations].[new_vaccinations_smoothed_per_million]' />
          <map key='[people_fully_vaccinated]' value='[CovidVaccinations].[people_fully_vaccinated]' />
          <map key='[people_fully_vaccinated_per_hundred]' value='[CovidVaccinations].[people_fully_vaccinated_per_hundred]' />
          <map key='[people_vaccinated]' value='[CovidVaccinations].[people_vaccinated]' />
          <map key='[people_vaccinated_per_hundred]' value='[CovidVaccinations].[people_vaccinated_per_hundred]' />
          <map key='[population]' value='[CovidDeaths].[population]' />
          <map key='[population_density]' value='[CovidVaccinations].[population_density]' />
          <map key='[positive_rate]' value='[CovidVaccinations].[positive_rate]' />
          <map key='[reproduction_rate]' value='[CovidDeaths].[reproduction_rate]' />
          <map key='[stringency_index]' value='[CovidVaccinations].[stringency_index]' />
          <map key='[tests_per_case]' value='[CovidVaccinations].[tests_per_case]' />
          <map key='[tests_units]' value='[CovidVaccinations].[tests_units]' />
          <map key='[total_cases]' value='[CovidDeaths].[total_cases]' />
          <map key='[total_cases_per_million]' value='[CovidDeaths].[total_cases_per_million]' />
          <map key='[total_deaths]' value='[CovidDeaths].[total_deaths]' />
          <map key='[total_deaths_per_million]' value='[CovidDeaths].[total_deaths_per_million]' />
          <map key='[total_tests]' value='[CovidVaccinations].[total_tests]' />
          <map key='[total_tests_per_thousand]' value='[CovidVaccinations].[total_tests_per_thousand]' />
          <map key='[total_vaccinations]' value='[CovidVaccinations].[total_vaccinations]' />
          <map key='[total_vaccinations_per_hundred]' value='[CovidVaccinations].[total_vaccinations_per_hundred]' />
          <map key='[weekly_hosp_admissions]' value='[CovidDeaths].[weekly_hosp_admissions]' />
          <map key='[weekly_hosp_admissions_per_million]' value='[CovidDeaths].[weekly_hosp_admissions_per_million]' />
          <map key='[weekly_icu_admissions]' value='[CovidDeaths].[weekly_icu_admissions]' />
          <map key='[weekly_icu_admissions_per_million]' value='[CovidDeaths].[weekly_icu_admissions_per_million]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z10001:no:A1:Z10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AK10001:no:A1:AK10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[CovidDeaths]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code (CovidVaccinations)]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent (CovidVaccinations)]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location (CovidVaccinations)]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date (CovidVaccinations)]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[CovidVaccinations]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Vaccincations Per Million' datatype='real' name='[Calculation_1957306680544403456]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_vaccinations]/1000000000' />
      </column>
      <column caption='Continent (copy) (copy)' datatype='string' name='[Continent (copy) (copy)_2047378673094217731]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[continent]' />
      </column>
      <column caption='Continent (copy)' datatype='string' name='[Continent (copy)_2047378673094205442]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[continent]' />
      </column>
      <column caption='CovidDeaths' datatype='table' name='[__tableau_internal_object_id__].[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]' role='measure' type='quantitative' />
      <column caption='CovidVaccinations' datatype='table' name='[__tableau_internal_object_id__].[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='real' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='real' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='iso code (CovidVaccinations)' datatype='string' name='[iso_code (CovidVaccinations)]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='real' name='[weekly_hosp_admissions]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='real' name='[weekly_hosp_admissions_per_million]' role='measure' type='quantitative' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[total_vaccinations]' derivation='Attribute' name='[attr:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations_per_hundred]' derivation='Attribute' name='[attr:total_vaccinations_per_hundred:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1957306680544403456]' derivation='Count' name='[cnt:Calculation_1957306680544403456:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Count' name='[cnt:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Count' name='[cnt:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Max' name='[max:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Max' name='[max:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Max' name='[max:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Min' name='[min:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Continent (copy) (copy)_2047378673094217731]' derivation='None' name='[none:Continent (copy) (copy)_2047378673094217731:nk]' pivot='key' type='nominal' />
      <column-instance column='[Continent (copy)_2047378673094205442]' derivation='None' name='[none:Continent (copy)_2047378673094205442:nk]' pivot='key' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_deaths]' derivation='None' name='[none:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='None' name='[none:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1957306680544403456]' derivation='Sum' name='[sum:Calculation_1957306680544403456:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_vaccinations]' derivation='Sum' name='[sum:new_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations_per_hundred]' derivation='Sum' name='[sum:total_vaccinations_per_hundred:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/jy/sbg0_w0907q8bg_1rx0h7bkr0000gn/T/tableau-temp/#TableauTemp_1jw5wyy1az84s91ddt6al0k6ew28.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/26/2025 04:25:50 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D' table='[Extract].[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]' type='table' />
            <relation name='CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B' table='[Extract].[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]' type='table' />
          </relation>
          <cols>
            <map key='[aged_65_older]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[aged_65_older]' />
            <map key='[aged_70_older]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[aged_70_older]' />
            <map key='[cardiovasc_death_rate]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[cardiovasc_death_rate]' />
            <map key='[continent (CovidVaccinations)]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[continent]' />
            <map key='[continent]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[continent]' />
            <map key='[date (CovidVaccinations)]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[date]' />
            <map key='[date]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[date]' />
            <map key='[diabetes_prevalence]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[diabetes_prevalence]' />
            <map key='[extreme_poverty]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[extreme_poverty]' />
            <map key='[female_smokers]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[female_smokers]' />
            <map key='[gdp_per_capita]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[gdp_per_capita]' />
            <map key='[handwashing_facilities]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[handwashing_facilities]' />
            <map key='[hosp_patients]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[hosp_patients]' />
            <map key='[hosp_patients_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[hosp_patients_per_million]' />
            <map key='[hospital_beds_per_thousand]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[hospital_beds_per_thousand]' />
            <map key='[human_development_index]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[human_development_index]' />
            <map key='[icu_patients]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[icu_patients]' />
            <map key='[icu_patients_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[icu_patients_per_million]' />
            <map key='[iso_code (CovidVaccinations)]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[iso_code]' />
            <map key='[iso_code]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[iso_code]' />
            <map key='[life_expectancy]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[life_expectancy]' />
            <map key='[location (CovidVaccinations)]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[location]' />
            <map key='[location]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[location]' />
            <map key='[male_smokers]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[male_smokers]' />
            <map key='[median_age]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[median_age]' />
            <map key='[new_cases]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_cases]' />
            <map key='[new_cases_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_cases_per_million]' />
            <map key='[new_cases_smoothed]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_cases_smoothed]' />
            <map key='[new_cases_smoothed_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_cases_smoothed_per_million]' />
            <map key='[new_deaths]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_deaths]' />
            <map key='[new_deaths_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_deaths_per_million]' />
            <map key='[new_deaths_smoothed]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_deaths_smoothed]' />
            <map key='[new_deaths_smoothed_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[new_deaths_smoothed_per_million]' />
            <map key='[new_tests]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_tests]' />
            <map key='[new_tests_per_thousand]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_tests_per_thousand]' />
            <map key='[new_tests_smoothed]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_tests_smoothed]' />
            <map key='[new_tests_smoothed_per_thousand]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_tests_smoothed_per_thousand]' />
            <map key='[new_vaccinations]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_vaccinations]' />
            <map key='[new_vaccinations_smoothed]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_vaccinations_smoothed]' />
            <map key='[new_vaccinations_smoothed_per_million]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[new_vaccinations_smoothed_per_million]' />
            <map key='[people_fully_vaccinated]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[people_fully_vaccinated]' />
            <map key='[people_fully_vaccinated_per_hundred]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[people_fully_vaccinated_per_hundred]' />
            <map key='[people_vaccinated]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[people_vaccinated]' />
            <map key='[people_vaccinated_per_hundred]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[people_vaccinated_per_hundred]' />
            <map key='[population]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[population]' />
            <map key='[population_density]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[population_density]' />
            <map key='[positive_rate]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[positive_rate]' />
            <map key='[reproduction_rate]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[reproduction_rate]' />
            <map key='[stringency_index]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[stringency_index]' />
            <map key='[tests_per_case]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[tests_per_case]' />
            <map key='[tests_units]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[tests_units]' />
            <map key='[total_cases]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[total_cases]' />
            <map key='[total_cases_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[total_cases_per_million]' />
            <map key='[total_deaths]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[total_deaths]' />
            <map key='[total_deaths_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[total_deaths_per_million]' />
            <map key='[total_tests]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[total_tests]' />
            <map key='[total_tests_per_thousand]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[total_tests_per_thousand]' />
            <map key='[total_vaccinations]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[total_vaccinations]' />
            <map key='[total_vaccinations_per_hundred]' value='[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B].[total_vaccinations_per_hundred]' />
            <map key='[weekly_hosp_admissions]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[weekly_hosp_admissions]' />
            <map key='[weekly_hosp_admissions_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[weekly_hosp_admissions_per_million]' />
            <map key='[weekly_icu_admissions]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[weekly_icu_admissions]' />
            <map key='[weekly_icu_admissions_per_million]' value='[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D].[weekly_icu_admissions_per_million]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>0</ordinal>
              <family>CovidDeaths</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>345</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>1</ordinal>
              <family>CovidDeaths</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>2</ordinal>
              <family>CovidDeaths</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>345</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>3</ordinal>
              <family>CovidDeaths</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1300</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>4</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>336</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>5</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16810</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_cases]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_cases</remote-alias>
              <ordinal>6</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5017</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_smoothed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_smoothed]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_cases_smoothed</remote-alias>
              <ordinal>7</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9858</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>8</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6477</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_deaths]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_deaths</remote-alias>
              <ordinal>9</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1214</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_smoothed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_smoothed]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_deaths_smoothed</remote-alias>
              <ordinal>10</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2341</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>total_cases_per_million</remote-alias>
              <ordinal>11</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32094</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_cases_per_million</remote-alias>
              <ordinal>12</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18006</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_smoothed_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_smoothed_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_cases_smoothed_per_million</remote-alias>
              <ordinal>13</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21317</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>total_deaths_per_million</remote-alias>
              <ordinal>14</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16026</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_deaths_per_million</remote-alias>
              <ordinal>15</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5613</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_smoothed_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_smoothed_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>new_deaths_smoothed_per_million</remote-alias>
              <ordinal>16</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5299</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reproduction_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[reproduction_rate]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>reproduction_rate</remote-alias>
              <ordinal>17</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>493</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_patients</remote-name>
              <remote-type>20</remote-type>
              <local-name>[icu_patients]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>icu_patients</remote-alias>
              <ordinal>18</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2361</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_patients_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[icu_patients_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>icu_patients_per_million</remote-alias>
              <ordinal>19</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4712</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hosp_patients</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hosp_patients]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>hosp_patients</remote-alias>
              <ordinal>20</ordinal>
              <family>CovidDeaths</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6184</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hosp_patients_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hosp_patients_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>hosp_patients_per_million</remote-alias>
              <ordinal>21</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9845</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_icu_admissions</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekly_icu_admissions]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>weekly_icu_admissions</remote-alias>
              <ordinal>22</ordinal>
              <family>CovidDeaths</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>771</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_icu_admissions_per_million</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekly_icu_admissions_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>weekly_icu_admissions_per_million</remote-alias>
              <ordinal>23</ordinal>
              <family>CovidDeaths</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>771</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_hosp_admissions</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weekly_hosp_admissions]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>weekly_hosp_admissions</remote-alias>
              <ordinal>24</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1796</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_hosp_admissions_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weekly_hosp_admissions_per_million]</local-name>
              <parent-name>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</parent-name>
              <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
              <ordinal>25</ordinal>
              <family>CovidDeaths</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1796</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code (CovidVaccinations)]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>26</ordinal>
              <family>CovidVaccinations</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent (CovidVaccinations)]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>27</ordinal>
              <family>CovidVaccinations</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location (CovidVaccinations)]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>28</ordinal>
              <family>CovidVaccinations</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date (CovidVaccinations)]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>29</ordinal>
              <family>CovidVaccinations</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1245</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_tests]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_tests</remote-alias>
              <ordinal>30</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20859</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_tests]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>total_tests</remote-alias>
              <ordinal>31</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50593</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_tests_per_thousand]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>total_tests_per_thousand</remote-alias>
              <ordinal>32</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30197</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests_per_thousand]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_tests_per_thousand</remote-alias>
              <ordinal>33</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6047</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_smoothed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_tests_smoothed]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_tests_smoothed</remote-alias>
              <ordinal>34</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22621</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_smoothed_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests_smoothed_per_thousand]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
              <ordinal>35</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6474</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>positive_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[positive_rate]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>positive_rate</remote-alias>
              <ordinal>36</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>964</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_per_case</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tests_per_case]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>tests_per_case</remote-alias>
              <ordinal>37</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2584</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_units</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tests_units]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>tests_units</remote-alias>
              <ordinal>38</ordinal>
              <family>CovidVaccinations</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_vaccinations]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>total_vaccinations</remote-alias>
              <ordinal>39</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14861</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_vaccinated]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>people_vaccinated</remote-alias>
              <ordinal>40</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9071</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_fully_vaccinated]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>people_fully_vaccinated</remote-alias>
              <ordinal>41</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9679</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_vaccinations</remote-alias>
              <ordinal>42</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11353</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations_smoothed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations_smoothed]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_vaccinations_smoothed</remote-alias>
              <ordinal>43</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5769</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_vaccinations_per_hundred]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>total_vaccinations_per_hundred</remote-alias>
              <ordinal>44</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4696</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_vaccinated_per_hundred]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>people_vaccinated_per_hundred</remote-alias>
              <ordinal>45</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4387</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_fully_vaccinated_per_hundred]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
              <ordinal>46</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2594</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations_smoothed_per_million</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations_smoothed_per_million]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
              <ordinal>47</ordinal>
              <family>CovidVaccinations</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6454</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stringency_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[stringency_index]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>stringency_index</remote-alias>
              <ordinal>48</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>314</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population_density</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population_density]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>population_density</remote-alias>
              <ordinal>49</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>236</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_age</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_age]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>median_age</remote-alias>
              <ordinal>50</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>149</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aged_65_older</remote-name>
              <remote-type>5</remote-type>
              <local-name>[aged_65_older]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>aged_65_older</remote-alias>
              <ordinal>51</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>205</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aged_70_older</remote-name>
              <remote-type>5</remote-type>
              <local-name>[aged_70_older]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>aged_70_older</remote-alias>
              <ordinal>52</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>203</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gdp_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gdp_per_capita]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>gdp_per_capita</remote-alias>
              <ordinal>53</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>extreme_poverty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[extreme_poverty]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>extreme_poverty</remote-alias>
              <ordinal>54</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cardiovasc_death_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cardiovasc_death_rate]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>cardiovasc_death_rate</remote-alias>
              <ordinal>55</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>211</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>diabetes_prevalence</remote-name>
              <remote-type>5</remote-type>
              <local-name>[diabetes_prevalence]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>diabetes_prevalence</remote-alias>
              <ordinal>56</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>164</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>female_smokers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[female_smokers]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>female_smokers</remote-alias>
              <ordinal>57</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>117</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>male_smokers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[male_smokers]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>male_smokers</remote-alias>
              <ordinal>58</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>133</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>handwashing_facilities</remote-name>
              <remote-type>5</remote-type>
              <local-name>[handwashing_facilities]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>handwashing_facilities</remote-alias>
              <ordinal>59</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hospital_beds_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hospital_beds_per_thousand]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>hospital_beds_per_thousand</remote-alias>
              <ordinal>60</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>life_expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[life_expectancy]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>life_expectancy</remote-alias>
              <ordinal>61</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>228</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>human_development_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[human_development_index]</local-name>
              <parent-name>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</parent-name>
              <remote-alias>human_development_index</remote-alias>
              <ordinal>62</ordinal>
              <family>CovidVaccinations</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>167</approx-count>
              <contains-null>true</contains-null>
              <object-id>[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Latitude (generated)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[attr:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[cnt:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[attr:total_vaccinations_per_hundred:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_vaccinations_per_hundred:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[cnt:Calculation_1957306680544403456:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[cnt:Calculation_2047378673097793541:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:Calculation_1957306680544403456:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[cnt:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[min:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent (copy)_2047378673094205442:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#32759a'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#3992b0'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#5eafc0'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cc9cd'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent (copy) (copy)_2047378673094217731:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#2f8243'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#4e9a51'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#6ab25f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#87cc79'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='CovidDeaths' id='CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D'>
            <properties context=''>
              <relation connection='excel-direct.1ps880f1kevrt811w66vd0poqls0' name='CovidDeaths' table='[CovidDeaths$]' type='table'>
                <columns gridOrigin='A1:Z10001:no:A1:Z10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='population' ordinal='4' />
                  <column datatype='integer' name='total_cases' ordinal='5' />
                  <column datatype='integer' name='new_cases' ordinal='6' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='7' />
                  <column datatype='integer' name='total_deaths' ordinal='8' />
                  <column datatype='integer' name='new_deaths' ordinal='9' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
                  <column datatype='real' name='total_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_per_million' ordinal='12' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='15' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
                  <column datatype='real' name='reproduction_rate' ordinal='17' />
                  <column datatype='integer' name='icu_patients' ordinal='18' />
                  <column datatype='real' name='icu_patients_per_million' ordinal='19' />
                  <column datatype='integer' name='hosp_patients' ordinal='20' />
                  <column datatype='real' name='hosp_patients_per_million' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='22' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='23' />
                  <column datatype='real' name='weekly_hosp_admissions' ordinal='24' />
                  <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='25' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D' table='[Extract].[CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D]' type='table' />
            </properties>
          </object>
          <object caption='CovidVaccinations' id='CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B'>
            <properties context=''>
              <relation connection='excel-direct.1ps880f1kevrt811w66vd0poqls0' name='CovidVaccinations' table='[CovidVaccinations$]' type='table'>
                <columns gridOrigin='A1:AK10001:no:A1:AK10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='new_tests' ordinal='4' />
                  <column datatype='integer' name='total_tests' ordinal='5' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='6' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='7' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='8' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='9' />
                  <column datatype='real' name='positive_rate' ordinal='10' />
                  <column datatype='real' name='tests_per_case' ordinal='11' />
                  <column datatype='string' name='tests_units' ordinal='12' />
                  <column datatype='integer' name='total_vaccinations' ordinal='13' />
                  <column datatype='integer' name='people_vaccinated' ordinal='14' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='15' />
                  <column datatype='integer' name='new_vaccinations' ordinal='16' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='17' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='18' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='19' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='20' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='21' />
                  <column datatype='real' name='stringency_index' ordinal='22' />
                  <column datatype='real' name='population_density' ordinal='23' />
                  <column datatype='real' name='median_age' ordinal='24' />
                  <column datatype='real' name='aged_65_older' ordinal='25' />
                  <column datatype='real' name='aged_70_older' ordinal='26' />
                  <column datatype='real' name='gdp_per_capita' ordinal='27' />
                  <column datatype='real' name='extreme_poverty' ordinal='28' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='29' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='30' />
                  <column datatype='real' name='female_smokers' ordinal='31' />
                  <column datatype='real' name='male_smokers' ordinal='32' />
                  <column datatype='real' name='handwashing_facilities' ordinal='33' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='34' />
                  <column datatype='real' name='life_expectancy' ordinal='35' />
                  <column datatype='real' name='human_development_index' ordinal='36' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B' table='[Extract].[CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[continent]' />
              <expression op='[continent (CovidVaccinations)]' />
            </expression>
            <first-end-point object-id='CovidDeaths_32CB9EBAFA2C442FBE551CB21761610D' />
            <second-end-point object-id='CovidVaccinations_0FA0C362D7974DA2886D635669B6AC7B' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action2_A011AF60292E4674A495905CB52FBC3A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total Deaths' type='sheet' worksheet='Total Deaths per Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total Deaths' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_EECF3D96A69F4CDF98019E16A70F7B21]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total Deaths' type='sheet' worksheet='Total Cases vs Total Deaths by Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total Deaths' />
      </command>
    </action>
    <action caption='https://www.linkedin.com/in/luis-carabajo-a5449b250/' name='[Action3_B076530D54B24747B952E4172D773E81]'>
      <source dashboard='Total Deaths' type='sheet' />
      <link caption='' expression=''>
        <url-action-type>specific-zone</url-action-type>
        <url-action-target>58</url-action-target>
      </link>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Deaths by Contient'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Deaths by Contient</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week' name='[wk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_73B0A7A911994B4DB9595E9893D275CC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[wk:date:ok]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]</rows>
        <cols>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[wk:date:ok]</cols>
      </table>
      <simple-id uuid='{5CDBB2F4-12ED-49DB-9633-7DF564A57DC5}' />
    </worksheet>
    <worksheet name='KPI - Total Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total Cases&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_A011AF60292E4674A495905CB52FBC3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='160' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_cases:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#e15759' fontsize='16'>&lt;</run>
                <run bold='true' fontcolor='#e15759' fontsize='16'>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_cases:qk]</run>
                <run bold='true' fontcolor='#e15759' fontsize='16'>&gt;</run>
                <run bold='true' fontcolor='#e15759' fontsize='16'>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C99683A5-6BCF-4700-A32A-9AC8DC4ED045}' />
    </worksheet>
    <worksheet name='KPI - Total Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total Deaths&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_A011AF60292E4674A495905CB52FBC3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='160' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_deaths:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#e15759' fontsize='16'><![CDATA[<[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_deaths:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E777AD41-6983-47D9-AF3D-34E4648D4866}' />
    </worksheet>
    <worksheet name='KPI - Total Vaccinations'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total Vaccincations&#10;&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_vaccinations]' derivation='Max' name='[max:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_A011AF60292E4674A495905CB52FBC3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='160' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_vaccinations:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#e15759' fontsize='16'><![CDATA[<[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_vaccinations:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{32202CC6-6245-4F9E-9558-410C58F4F61A}' />
    </worksheet>
    <worksheet name='Last Date Updated'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt; at MM/DD/YYYY</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='MAX(DATETRUNC(&apos;day&apos;, [Date]))' datatype='datetime' name='[Calculation_2114791930036158464]' role='measure' type='ordinal' user:unnamed='Sheet 10'>
              <calculation class='tableau' formula='MAX(DATETRUNC(&apos;day&apos;, [date]))' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_2114791930036158464]' derivation='User' name='[usr:Calculation_2114791930036158464:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_A011AF60292E4674A495905CB52FBC3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='width' value='155' />
            <format attr='vertical-align' value='center' />
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[usr:Calculation_2114791930036158464:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D14C52FF-F7A9-4BCB-B2EF-BD94BBC94115}' />
    </worksheet>
    <worksheet name='New Cases by Contient'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Cases per Continent&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Continent (copy)' datatype='string' name='[Continent (copy)_2047378673094205442]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[continent]' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Continent (copy)_2047378673094205442]' derivation='None' name='[none:Continent (copy)_2047378673094205442:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week' name='[wk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_73B0A7A911994B4DB9595E9893D275CC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:continent:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[wk:date:ok]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy)_2047378673094205442:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_cases:qk]</rows>
        <cols>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[wk:date:ok]</cols>
      </table>
      <simple-id uuid='{63EA58F9-8E44-4E16-B132-6C1B99A35B32}' />
    </worksheet>
    <worksheet name='Total Cases vs Total Deaths by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total Cases vs Total Deaths by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases_per_million]' derivation='None' name='[none:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='None' name='[none:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_A011AF60292E4674A495905CB52FBC3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Anguilla&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bahamas&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cape Verde&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cayman Islands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Congo&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Curacao&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Democratic Republic of Congo&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Faeroe Islands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Falkland Islands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Guernsey&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;International&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Jersey&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Macao&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Micronesia (country)&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Montserrat&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Nauru&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;North Macedonia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Northern Cyprus&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Palestine&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saint Helena&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South America&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Timor&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Turks and Caicos Islands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Vatican&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:total_cases_per_million:qk]' included-values='in-range'>
            <min>0.001</min>
            <max>171254.77299999999</max>
          </filter>
          <filter class='quantitative' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:total_deaths_per_million:qk]' included-values='in-range'>
            <min>0.001</min>
            <max>2850.828</max>
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:total_cases_per_million:qk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:total_deaths_per_million:qk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <_.fcp.VizExtensions.false...mark class='Automatic' />
            <_.fcp.VizExtensions.true...mark class='VizExtension' />
            <_.fcp.VizExtensions.true...add-in add-in-id='com.tableau.extension.table' extension-url='https://tableau-vizext-prod.s3.us-east-2.amazonaws.com/table-network/table.html' extension-version='1.0.0' instance-id='0E989339C96E42B18AB2BCEF0BDA26F7'>
              <instance-settings>
                <setting key='column-setting-EncodingId:{451C76E2-CED5-4E02-A3ED-589AA2E89F7E}-Encoding:detail' value='{&quot;field-id&quot;:&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]&quot;,&quot;encoding-type&quot;:&quot;detail&quot;,&quot;column-index&quot;:&quot;0&quot;,&quot;column-width&quot;:&quot;102&quot;}' />
                <setting key='column-setting-EncodingId:{5A389694-1DF3-4E1C-A1DF-4D35F0B6C873}-Encoding:detail' value='{&quot;field-id&quot;:&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]&quot;,&quot;encoding-type&quot;:&quot;detail&quot;,&quot;column-index&quot;:&quot;2&quot;,&quot;column-width&quot;:&quot;113&quot;,&quot;column-header&quot;:&quot;Covid Deaths&quot;}' />
                <setting key='column-setting-EncodingId:{E42C74E5-F31A-42EE-A5B1-805A48C3A16B}-Encoding:detail' value='{&quot;field-id&quot;:&quot;[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_cases:qk]&quot;,&quot;encoding-type&quot;:&quot;detail&quot;,&quot;column-index&quot;:&quot;1&quot;,&quot;column-width&quot;:&quot;106&quot;,&quot;column-sorting&quot;:&quot;false&quot;,&quot;column-header&quot;:&quot;Covid Cases&quot;}' />
                <setting key='dialog-status' value='none-open' />
                <setting key='setting-key-version' value='V2' />
                <setting key='table-settings' value='{&quot;showToolbar&quot;:false,&quot;showFilters&quot;:false,&quot;includeNullsForRangeFilters&quot;:false,&quot;columnFilterType&quot;:&quot;contains&quot;,&quot;showSearch&quot;:false,&quot;showTooltips&quot;:false,&quot;showExcelDownload&quot;:false,&quot;allowColumnReorder&quot;:false,&quot;showColumnReorderControls&quot;:true,&quot;showShowFields&quot;:false}' />
              </instance-settings>
              <type-settings>
                <worksheet />
              </type-settings>
            </_.fcp.VizExtensions.true...add-in>
            <encodings>
              <lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{451C76E2-CED5-4E02-A3ED-589AA2E89F7E}' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' />
              <lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{E42C74E5-F31A-42EE-A5B1-805A48C3A16B}' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_cases:qk]' />
              <lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{5A389694-1DF3-4E1C-A1DF-4D35F0B6C873}' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{48214B28-677B-4B20-9F8F-4122D9A66408}' />
    </worksheet>
    <worksheet name='Total Deaths per Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total Deaths per Million per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Latitude (generated)]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Longitude (generated)]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Longitude (generated)]' field-type='quantitative' max='25283153.486187302' min='-2493847.3894972657' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Latitude (generated)]' field-type='quantitative' max='14941405.117570546' min='-13349032.364614299' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]' />
              <lod column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' />
              <geometry column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Latitude (generated)]</rows>
        <cols>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4BD398A3-C11E-43CB-978F-0EED7C18A25A}' />
    </worksheet>
    <worksheet name='Total Vaccincations per Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_vaccinations_per_hundred]' derivation='Sum' name='[sum:total_vaccinations_per_hundred:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_vaccinations_per_hundred:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' />
              <color column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_vaccinations_per_hundred:qk]' />
              <geometry column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Latitude (generated)]</rows>
        <cols>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{91B1C62B-31CD-4F8F-A1A2-4DBA9DEC1C52}' />
    </worksheet>
    <worksheet name='Vaccines by Contient'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Vaccines per Continent&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
          </datasources>
          <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
            <column caption='Total Vaccincations Per Million' datatype='real' name='[Calculation_1957306680544403456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_vaccinations]/1000000000' />
            </column>
            <column caption='Continent (copy) (copy)' datatype='string' name='[Continent (copy) (copy)_2047378673094217731]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[continent]' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[date (CovidVaccinations)]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Continent (copy) (copy)_2047378673094217731]' derivation='None' name='[none:Continent (copy) (copy)_2047378673094217731:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1957306680544403456]' derivation='Sum' name='[sum:Calculation_1957306680544403456:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[date (CovidVaccinations)]' derivation='Week' name='[wk:date (CovidVaccinations):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_A011AF60292E4674A495905CB52FBC3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy) (copy)_2047378673094217731:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Continent (copy) (copy)_2047378673094217731:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:Continent (copy) (copy)_2047378673094217731:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:Continent (copy) (copy)_2047378673094217731:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:Continent (copy) (copy)_2047378673094217731:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:Continent (copy) (copy)_2047378673094217731:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:Continent (copy) (copy)_2047378673094217731:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:Calculation_1957306680544403456:qk]' included-values='non-null' />
          <slices>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:Calculation_1957306680544403456:qk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy) (copy)_2047378673094217731:nk]</column>
            <column>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[wk:date (CovidVaccinations):ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:Calculation_1957306680544403456:qk]' min='1.0' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy) (copy)_2047378673094217731:nk]' />
              <lod column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:Calculation_1957306680544403456:qk]' />
              <lod column='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy) (copy)_2047378673094217731:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#59a14f' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_vaccinations:qk]</rows>
        <cols>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[wk:date (CovidVaccinations):ok]</cols>
      </table>
      <simple-id uuid='{3C2AF5EE-4A64-4629-89EF-4A9380AF06EC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Total Deaths'>
      <style />
      <size maxheight='1660' maxwidth='1620' minheight='860' minwidth='1320' sizing-mode='range' />
      <datasources>
        <datasource caption='CovidDeaths+ (Covid_Vaccinations_Deaths_Project)' name='federated.09z8kp00rh0gd61g2j0hz1rjrp1c' />
      </datasources>
      <datasource-dependencies datasource='federated.09z8kp00rh0gd61g2j0hz1rjrp1c'>
        <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98140' id='54' param='horz' type-v2='layout-flow' w='98788' x='606' y='930'>
            <zone h='98140' id='52' type-v2='layout-basic' w='98788' x='606' y='930'>
              <zone h='86744' id='31' param='horz' type-v2='layout-flow' w='98788' x='606' y='12326'>
                <zone h='86744' id='25' type-v2='layout-basic' w='98788' x='606' y='12326'>
                  <zone h='28906' id='4' param='vert' type-v2='layout-flow' w='32728' x='66666' y='12326'>
                    <zone h='28906' id='7' name='Deaths by Contient' w='32728' x='66666' y='12326'>
                      <layout-cache minheight='143' type-h='scalable' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='57838' id='6' param='vert' type-v2='layout-flow' w='32728' x='66666' y='41232'>
                    <zone fixed-size='173' h='21046' id='10' is-fixed='true' name='New Cases by Contient' w='32728' x='66666' y='41232'>
                      <layout-cache minheight='143' type-h='scalable' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='36792' id='11' param='vert' type-v2='layout-flow' w='32728' x='66666' y='62278'>
                      <zone h='36792' id='23' name='Vaccines by Contient' w='32728' x='66666' y='62278'>
                        <layout-cache minheight='143' type-h='scalable' type-w='fixed' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='70134' id='12' param='horz' type-v2='layout-flow' w='66060' x='606' y='28936'>
                    <zone fixed-size='314' h='70134' id='22' is-fixed='true' name='Total Cases vs Total Deaths by Country' w='24394' x='606' y='28936'>
                      <layout-cache type-h='cell' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='70134' id='13' name='Total Deaths per Country' w='41666' x='25000' y='28936'>
                      <layout-cache has-max-size-h='true' maxheight='44' minheight='44' minwidth='202' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='16610' id='41' param='horz' type-v2='layout-flow' w='27197' x='39469' y='12326'>
                    <zone fixed-size='186' h='16610' id='47' is-fixed='true' name='KPI - Total Deaths' w='13598' x='39469' y='12326'>
                      <layout-cache type-h='cell' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone fixed-size='186' h='16610' id='48' is-fixed='true' name='KPI - Total Cases' w='13599' x='53067' y='12326'>
                      <layout-cache type-h='cell' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='16610' id='42' param='horz' type-v2='layout-flow' w='18349' x='606' y='12326'>
                    <zone h='16610' id='45' name='Last Date Updated' w='18349' x='606' y='12326'>
                      <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='16610' id='44' param='horz' type-v2='layout-flow' w='20514' x='18955' y='12326'>
                    <zone h='16610' id='51' name='KPI - Total Vaccinations' w='20514' x='18955' y='12326'>
                      <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='11396' id='32' type-v2='text' w='44472' x='15680' y='930'>
                <formatted-text>
                  <run fontalignment='1' fontsize='22'>COVID-19 Dashboard for 2020-2021 </run>
                  <run fontalignment='1'>Æ&#10;</run>
                  <run fontalignment='1' fontsize='22' italic='true'>by Luis Carabajo</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11396' id='49' is-scaled='1' param='/Users/luis-c/Downloads/Black Covid 19 Logo.jpeg' type-v2='bitmap' w='15074' x='606' y='930'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11396' id='56' param='horz' type-v2='layout-flow' w='17955' x='81439' y='930'>
                <zone h='6047' id='55' mode='pattern' name='Total Deaths per Country' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' type-v2='filter' values='database' w='17955' x='81439' y='930'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='11396' id='57' is-scaled='1' param='/Users/luis-c/Downloads/LinkedIN.png' type-v2='bitmap' url='https://www.linkedin.com/in/luis-carabajo-a5449b250/' w='21287' x='60152' y='930'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='111' h='8256' id='15' is-fixed='true' name='Total Deaths per Country' pane-specification-id='0' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]' type-v2='color' w='12652' x='53939' y='34070' />
      </zones>
      <simple-id uuid='{78FC7F87-5C67-43BD-B7B8-ABB1BF846959}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Total Deaths'>
      <viewpoints>
        <viewpoint name='Deaths by Contient'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI - Total Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI - Total Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI - Total Vaccinations'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[max:total_vaccinations:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>1134333474</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Last Date Updated'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Cases by Contient'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Cases vs Total Deaths by Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Deaths per Country'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Vaccines by Contient'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='47' />
      <simple-id uuid='{E68A4252-667F-47F9-9A8C-189B376F50DE}' />
    </window>
    <window class='worksheet' name='Total Vaccincations per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:total_vaccinations_per_hundred:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C22F76B1-7908-4868-A354-4AE7A56D72E2}' />
    </window>
    <window class='worksheet' hidden='true' name='Deaths by Contient'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]' type='highlighter' />
            <card pane-specification-id='2' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{17B3EFA7-44FE-4CEC-8705-F4DAB0FCCCB9}' />
    </window>
    <window class='worksheet' hidden='true' name='KPI - Total Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{3C666CF9-15A5-44B7-905A-C992037F611D}' />
    </window>
    <window class='worksheet' hidden='true' name='KPI - Total Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{9D553938-0047-4A56-BF5F-81BD43C69743}' />
    </window>
    <window class='worksheet' hidden='true' name='KPI - Total Vaccinations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{4A8E3549-9668-43EC-AA92-6DAE0F885044}' />
    </window>
    <window class='worksheet' hidden='true' name='Last Date Updated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{BDDEAB89-09BD-423D-8781-B29EF28EBFB2}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases by Contient'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy)_2047378673094205442:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1E33A438-74BF-44C6-9EEF-C608421898B8}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Cases vs Total Deaths by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Calculation_2230478145489543168:qk]</field>
            <field>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B594302-ECAD-42C7-A66D-7EF9A42F8527}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Deaths per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[sum:new_deaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CADD5F4-43E1-4180-B527-9D3BFED9BEC5}' />
    </window>
    <window class='worksheet' hidden='true' name='Vaccines by Contient'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='69' type='filters' />
            <card size='238' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.09z8kp00rh0gd61g2j0hz1rjrp1c].[none:Continent (copy) (copy)_2047378673094217731:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3C7B1304-CD2E-473C-AF5E-F9A252A5C695}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Total Deaths' width='384'>
      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
      EGLVqlXC7/dH6yCEEPfff79obm4WQgjx5JNPiq1bt4qNGzeK559/PloHu90eLdvhcETrriiK
      uPvuu0UgEBCPPvqoOHToULSuiqKc8zN57733xJtvvnnG9rz++utiw4YNg+7xzDPPiB07dkQ/
      BwIBsWrVqmHbOtzzPvV3EUKIL37xi+L48eNCCCH+/Oc/i48++ui0z0oIIe6+++5o3Z966inx
      zjvviP7+fnHXXXdFn9Hq1auj51yunGvfGMn7sm/fPvHb3/520LFVq1aJQCAgnnvuOfH2228L
      IYTYtm2beOKJJ4QQQrS0tAghhAiHw2L16tXC6XQKIYT4+te/PqicWH3DbreLb3zjG0IIIYLB
      oGhtbR10zcMPPyz2798vhBCisrJS/PCHPxQej0d85StfEV6vV4RCIfG1r31N9PX1ic7OTvHZ
      z35WPPTQQ6K/v39QOV/72tdEf3+/uO+++4QQQrS3t4uf/OQn4vXXXxfvvvuuEGLwu3Ly/w8+
      +GC0zw787/V6xRe/+EXhcrmEoiji4YcfFhUVFaKzs1N85StfEQ6HQwghxL333ivcbne0Hp2d
      neKb3/ymCAaDIhgMim984xuisbFRHDhwQPz0pz8ViqKI3t7e6G/58MMPi7vvvltUVFQMas+H
      H34onn76aXEqhw4dEt///vdFOBwWHo9HrFq1SjidTvHyyy+LLVu2RM+75557hBBCvP322+LX
      v/51tD7/8R//IYQY2odOfbYD7+eorgD27dvHz3/+cyAyU5dlmXA4POQ8WZapqKhg7969APT1
      9Q1bpkajIRgMDjluMBh48cUXaWlpwe/3YzAYAJg3bx7f/va3WbJkCddddx0Ara2t7N27l717
      9yKE4PDhw9x88808//zz2O12rr76ambMmBEt22q1Eh8fT0dHB319fUyaNAmdTsfChQt57LHH
      uOqqq7juuuvOOPsfyTMZrj1nQzgcjqrFYrV1wYIFZ/28rVYr+fn5QGRWEgqFmDJlyrDPCsBs
      NmOxWAC4/vrrWbt2LStWrGD69OlUVFSQnZ1NWlpa9ByVCGPxvsRioH/s37+fq666irfeegsh
      BEeOHAGgo6OD5557jmAwSGdnJ06nM6aaJFbfsFqtSJLEQw89xOLFi7n66quHXDewWpw1axbP
      Pvssx48fx2AwsH79eiDS9+vq6sjNzSU9PZ0HH3wwppo3Li4Ok8lEb28v69evZ8WKFbS3t4/o
      WQzQ0NDA7Nmzo33y5ptvpqKigvz8fPLz87FarQBYLBZCodCga9PT09FqI0PnNddcQ01NDR0d
      HZhMJtasWQNE9icGfsvVq1cPWZUMN67t3buXm266CVmWMZlMLFiwgGPHjp22LWVlZdH66HS6
      Yc879dlOnz59dFVAer0er9cbHbyCwWDMH/LDDz+ktraWH/zgB+h0Ou69995hyywvL2f79u1c
      eeWVg47/z//8D+Xl5axatQqHw8Gvf/1rAL7yla9gs9nYsWMH3/zmN3n22WfR6/XRTpidnU1m
      ZiaZmZk8++yzVFVV8de//pW2tjZuuOGGaPkrV65k3bp12Gy26DJt0aJFzJ49m3379vHjH/+Y
      hx56iNzc3FF5JsO152x4//33oxt9sdo6kucdizM9q5Pp7e2Nvjy33XYbTz75JCUlJdx0000j
      uuflwFi8L6fS0tJCXFwcGo0GnU5HamoqcXFxAHzzm9+kr6+PP/7xjzz66KNYrVYeffTREbVB
      lmUef/xxmpqa2LhxI7/4xS/4wQ9+EPPcQCCAJEnodDoMBkO0n95xxx0UFxfj8/nIy8s77R7f
      ddddx8aNG9m7dy933HEHb7311ojqO4DBYMDj8UQ/ezwe9Hr9iMvp7e0lJyeH3t5e4uPjo216
      4IEHohPEAbX1yZSWlvKnP/1pkGHAaNYrFqc+29tuu210zUCXLVvGU089hcPhYN26daSlpSFJ
      EvHx8TQ0NNDR0UF3dzdutxuLxYLf7+eNN96gra1t2DKvuuoqDh8+zKuvvkpbWxvvvvsuXV1d
      uN1u4uPjsdlsPP/889HzX3zxRQKBAPPmzUOWZYQQFBcX09jYSF5eHl6vl/r6enbt2sWuXbso
      LCykvLx8yKxqwYIF7Nixg/r6ekpLSwFYs2YNzc3NlJeXk5WVNeiHGukzSU9PZ/fu3dhsNvr6
      +oZtz3A0NjZy4MABXnzxRf7+979zxx13AMRs63DP+9TfZTjO9Ky8Xi/t7e3U1NTw9NNPR1de
      eXl5KIrC9u3bVd1/DEbSN872fYHIpuihQ4dYt24d3/nOd7jnnnsAWLp0KVu2bCEnJwej0cih
      Q4fw+/3odDpkWWbnzp3s2LEjWo5Go+HIkSN0dHQMe6+Ojg7efPNNEhISmD9/Pk6nc8g5x48f
      p7Ozk0ceeYRly5ZRUFBAb28viqKQk5NDY2PjWa9qFi5cyJo1a8jJyUGj0ZzVNbHIz8+npqaG
      AwcO0N3dzfPPP3/WG+W9vb309PSwc+dOtm7dyvTp01m4cCE7d+4kKSmJ1NRUKisrTyvIkpOT
      mT59Oo8++igtLS3s2rWLvXv3snjxYl566SU6OjqoqqqisrKS0tJS4uLiqK6uxm638+qrr+L3
      +09bx1P7UCzy8vLQ/OQnP/nJWbV6GLKzs6PLqIkTJ+L1evnrX/9KKBTiG9/4BlqtFo1GQ1ZW
      Fq+++irhcJjrr7+e/fv3s27dOkpKSpgxY0bU3MxoNA6SmJIksWzZMvbv38+WLVvQ6/XMnDmT
      GTNm8Oabb7Jr1y6uvfZasrOzKSgowOPx8MYbb7Br1y6+9KUvkZGRwYIFCzh48CAffPABkiSx
      dOlSkpKS+PDDD1m7di0Wi4XPf/7zgzqULMsoisKsWbOiZpI6nY61a9eyceNGFi9ePGRVMpJn
      kpGRQW9vL++++y5ZWVlcc801MdsDkJqaOsTstb6+nra2NjIzM7nnnnswmUwAMdtaWloa83mf
      +rtMmjQJYJDpX2pqKjk5Oad9VoqisGXLFmpra/nSl75EYWFh9LtwOEx8fPw5myJeapxL37jy
      yitH9L60trbS3NyMVqvlq1/9atREuKSkhFAoxDvvvENXVxfXXHMN2dnZSJLE3/72N2RZZtmy
      ZRQVFWEwGJgyZQqvvfYadXV10d/v1L6RkZHBsWPHeOONN2hpaWH16tXRFQbAli1baG5uprKy
      koULF7JixQpkWWbRokVs3LiRiooKcnNzmTFjBrIso9fro2qmk5EkiZKSEjQaDXFxcSxZsoTE
      xEQkSSIlJYXk5ORonQbelZP/LywsjKpJCgsL0ev1LFy4kDfeeINNmzZx5513UlZWBjCoDpIk
      DbrW7Xbz5ptv0tTUhMPh4Fvf+hbx8fEkJCRQXFzM2rVrqa6uZsGCBVFT0/z8/JiqmSuuuAKX
      y8W6devo6+tjzpw5ZGdnU1RUxF/+8heOHj3K/fffT0JCAhMmTKCiooLNmzczadIkSkpKKCkp
      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
    </thumbnail>
    <thumbnail height='384' name='Total Vaccincations per Country' width='384'>
      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
    </thumbnail>
  </thumbnails>
  <_.fcp.VizExtensions.true...referenced-extensions>
    <_.fcp.VizExtensions.true...referenced-extension>
      <manifest manifest-version='0.1'>
        <worksheet-extension extension-version='1.0.0' id='com.tableau.extension.table'>
          <default-locale>en_US</default-locale>
          <name resource-id='name' />
          <description>Table</description>
          <author email='github@tableau.com' name='tableau' organization='tableau' website='https://www.tableau.com' />
          <min-api-version>1.11</min-api-version>
          <source-location>
            <url>https://tableau-vizext-prod.s3.us-east-2.amazonaws.com/table-network/table.html</url>
          </source-location>
          <icon />
          <context-menu>
            <configure-context-menu-item />
          </context-menu>
        </worksheet-extension>
        <resources>
          <resource id='name'>
            <text locale='en_US'>Tableau Table</text>
          </resource>
        </resources>
      </manifest>
      <referenced-views>
        <referenced-view instances='1' viewId='Total Cases vs Total Deaths by Country' />
      </referenced-views>
    </_.fcp.VizExtensions.true...referenced-extension>
  </_.fcp.VizExtensions.true...referenced-extensions>
</workbook>
